{"name": "Class ExtendedSocketOptions", "module": "jdk.net", "package": "jdk.net", "text": "Defines extended socket options, beyond those defined in\n StandardSocketOptions. These options may be platform\n specific.", "codes": ["public final class ExtendedSocketOptions\nextends Object"], "fields": [{"field_name": "SO_FLOW_SLA", "field_sig": "public static final\u00a0SocketOption<SocketFlow> SO_FLOW_SLA", "description": "Service level properties. When a security manager is installed,\n setting or getting this option requires a NetworkPermission\n(\"setOption.SO_FLOW_SLA\") or \"getOption.SO_FLOW_SLA\"\n respectively."}, {"field_name": "TCP_QUICKACK", "field_sig": "public static final\u00a0SocketOption<Boolean> TCP_QUICKACK", "description": "Disable Delayed Acknowledgements.\n\n \n This socket option can be used to reduce or disable delayed\n acknowledgments (ACKs). When TCP_QUICKACK is enabled, ACKs are\n sent immediately, rather than delayed if needed in accordance to normal\n TCP operation. This option is not permanent, it only enables a switch to\n or from TCP_QUICKACK mode. Subsequent operations of the TCP\n protocol will once again disable/enable TCP_QUICKACK mode\n depending on internal protocol processing and factors such as delayed ACK\n timeouts occurring and data transfer, therefore this option needs to be\n set with setOption after each operation of TCP on a given socket.\n\n \n The value of this socket option is a Boolean that represents\n whether the option is enabled or disabled. The socket option is specific\n to stream-oriented sockets using the TCP/IP protocol. The exact semantics\n of this socket option are socket type and system dependent."}, {"field_name": "TCP_KEEPIDLE", "field_sig": "public static final\u00a0SocketOption<Integer> TCP_KEEPIDLE", "description": "Keep-Alive idle time.\n\n \n The value of this socket option is an Integer that is the number\n of seconds of idle time before keep-alive initiates a probe. The socket\n option is specific to stream-oriented sockets using the TCP/IP protocol.\n The exact semantics of this socket option are system dependent.\n\n \n When the SO_KEEPALIVE option is enabled, TCP probes a connection that has been\n idle for some amount of time. The default value for this idle period is\n system dependent, but is typically 2 hours. The TCP_KEEPIDLE\n option can be used to affect this value for a given socket."}, {"field_name": "TCP_KEEPINTERVAL", "field_sig": "public static final\u00a0SocketOption<Integer> TCP_KEEPINTERVAL", "description": "Keep-Alive retransmission interval time.\n\n \n The value of this socket option is an Integer that is the number\n of seconds to wait before retransmitting a keep-alive probe. The socket\n option is specific to stream-oriented sockets using the TCP/IP protocol.\n The exact semantics of this socket option are system dependent.\n\n \n When the SO_KEEPALIVE option is enabled, TCP probes a connection that has been\n idle for some amount of time. If the remote system does not respond to a\n keep-alive probe, TCP retransmits the probe after some amount of time.\n The default value for this retransmission interval is system dependent,\n but is typically 75 seconds. The TCP_KEEPINTERVAL option can be\n used to affect this value for a given socket."}, {"field_name": "TCP_KEEPCOUNT", "field_sig": "public static final\u00a0SocketOption<Integer> TCP_KEEPCOUNT", "description": "Keep-Alive retransmission maximum limit.\n\n \n The value of this socket option is an Integer that is the maximum\n number of keep-alive probes to be sent. The socket option is specific to\n stream-oriented sockets using the TCP/IP protocol. The exact semantics of\n this socket option are system dependent.\n\n \n When the SO_KEEPALIVE option is enabled, TCP probes a connection that has been\n idle for some amount of time. If the remote system does not respond to a\n keep-alive probe, TCP retransmits the probe a certain number of times\n before a connection is considered to be broken. The default value for\n this keep-alive probe retransmit limit is system dependent, but is\n typically 8. The TCP_KEEPCOUNT option can be used to affect this\n value for a given socket."}], "methods": []}