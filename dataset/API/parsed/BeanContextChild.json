{"name": "Interface BeanContextChild", "module": "java.desktop", "package": "java.beans.beancontext", "text": "\n JavaBeans wishing to be nested within, and obtain a reference to their\n execution environment, or context, as defined by the BeanContext\n sub-interface shall implement this interface.\n \n\n Conformant BeanContexts shall as a side effect of adding a BeanContextChild\n object shall pass a reference to itself via the setBeanContext() method of\n this interface.\n \n\n Note that a BeanContextChild may refuse a change in state by throwing\n PropertyVetoedException in response.\n \n\n In order for persistence mechanisms to function properly on BeanContextChild\n instances across a broad variety of scenarios, implementing classes of this\n interface are required to define as transient, any or all fields, or\n instance variables, that may contain, or represent, references to the\n nesting BeanContext instance or other resources obtained\n from the BeanContext via any unspecified mechanisms.\n ", "codes": ["public interface BeanContextChild"], "fields": [], "methods": [{"method_name": "setBeanContext", "method_sig": "void setBeanContext (BeanContext bc)\n             throws PropertyVetoException", "description": "\n Objects that implement this interface,\n shall fire a java.beans.PropertyChangeEvent, with parameters:\n\n propertyName \"beanContext\", oldValue (the previous nesting\n BeanContext instance, or null),\n newValue (the current nesting\n BeanContext instance, or null).\n \n A change in the value of the nesting BeanContext property of this\n BeanContextChild may be vetoed by throwing the appropriate exception.\n "}, {"method_name": "getBeanContext", "method_sig": "BeanContext getBeanContext()", "description": "Gets the BeanContext associated\n with this BeanContextChild."}, {"method_name": "addPropertyChangeListener", "method_sig": "void addPropertyChangeListener (String name,\n                               PropertyChangeListener pcl)", "description": "Adds a PropertyChangeListener\n to this BeanContextChild\n in order to receive a PropertyChangeEvent\n whenever the specified property has changed."}, {"method_name": "removePropertyChangeListener", "method_sig": "void removePropertyChangeListener (String name,\n                                  PropertyChangeListener pcl)", "description": "Removes a PropertyChangeListener from this\n BeanContextChild  so that it no longer\n receives PropertyChangeEvents when the\n specified property is changed."}, {"method_name": "addVetoableChangeListener", "method_sig": "void addVetoableChangeListener (String name,\n                               VetoableChangeListener vcl)", "description": "Adds a VetoableChangeListener to\n this BeanContextChild\n to receive events whenever the specified property changes."}, {"method_name": "removeVetoableChangeListener", "method_sig": "void removeVetoableChangeListener (String name,\n                                  VetoableChangeListener vcl)", "description": "Removes a VetoableChangeListener from this\n BeanContextChild so that it no longer receives\n events when the specified property changes."}]}