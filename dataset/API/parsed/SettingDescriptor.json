{"name": "Class SettingDescriptor", "module": "jdk.jfr", "package": "jdk.jfr", "text": "Describes an event setting.", "codes": ["public final class SettingDescriptor\nextends Object"], "fields": [], "methods": [{"method_name": "getName", "method_sig": "public String getName()", "description": "Returns the name of the setting (for example, \"threshold\")."}, {"method_name": "getLabel", "method_sig": "public String getLabel()", "description": "Returns a human-readable name that describes the setting (for example,\n \"Threshold\").\n \n If the setting lacks a label, the label for the type that is associated with this\n setting is returned, or null if doesn't exist"}, {"method_name": "getDescription", "method_sig": "public String getDescription()", "description": "Returns a sentence that describes the setting (for example\n \"Record event with duration\n above or equal to threshold\").\n \n If the setting lacks a description, the description for the type that is\n associated with this setting is returned, or null if doesn't exist."}, {"method_name": "getContentType", "method_sig": "public String getContentType()", "description": "Returns a textual identifier that specifies how a value that is represented by\n this SettingDescriptor object is interpreted or formatted.\n \n For example, if the setting descriptor represents a percentage, then\n \"jdk.jfr.Percentage\" hints to a client that a value of \"0.5\"\n is formatted as \"50%\".\n \n The JDK provides the following predefined content types:\n \njdk.jfr.Percentage\njdk.jfr.Timespan\njdk.jfr.Timestamp\njdk.jfr.Frequency\njdk.jfr.Flag\njdk.jfr.MemoryAddress\njdk.jfr.DataAmount\njdk.jfr.NetworkAddress\n\n\n User-defined content types can be created by using ContentType.\n \n If the setting lacks a content type, the content type for the type\n that is associated with this setting is returned, or null if not\n available."}, {"method_name": "getTypeName", "method_sig": "public String getTypeName()", "description": "Returns the fully qualified class name of the type that is associated with this\n setting descriptor."}, {"method_name": "getTypeId", "method_sig": "public long getTypeId()", "description": "Returns a unique ID for the type in the Java Virtual Machine (JVM).\n \n The ID might not be the same between JVM instances."}, {"method_name": "getAnnotation", "method_sig": "public <A extends Annotation> A getAnnotation (Class<A> annotationType)", "description": "Returns the first annotation for the specified type if an annotation\n element with the same name is available, null otherwise."}, {"method_name": "getAnnotationElements", "method_sig": "public List<AnnotationElement> getAnnotationElements()", "description": "Returns an immutable list of annotation elements for this value\n descriptor."}, {"method_name": "getDefaultValue", "method_sig": "public String getDefaultValue()", "description": "Returns the default value for this setting descriptor."}]}