{"name": "Class CompositeDataSupport", "module": "java.management", "package": "javax.management.openmbean", "text": "The CompositeDataSupport class is the open data class which\n implements the CompositeData interface.", "codes": ["public class CompositeDataSupport\nextends Object\nimplements CompositeData, Serializable"], "fields": [], "methods": [{"method_name": "getCompositeType", "method_sig": "public CompositeType getCompositeType()", "description": "Returns the composite type  of this composite data instance."}, {"method_name": "get", "method_sig": "public Object get (String key)", "description": "Returns the value of the item whose name is key."}, {"method_name": "getAll", "method_sig": "public Object[] getAll (String[] keys)", "description": "Returns an array of the values of the items whose names are specified by\n keys, in the same order as keys."}, {"method_name": "containsKey", "method_sig": "public boolean containsKey (String key)", "description": "Returns true if and only if this CompositeData instance contains\n an item whose name is key.\n If key is a null or empty String, this method simply returns false."}, {"method_name": "containsValue", "method_sig": "public boolean containsValue (Object value)", "description": "Returns true if and only if this CompositeData instance\n contains an item\n whose value is value."}, {"method_name": "values", "method_sig": "public Collection<?> values()", "description": "Returns an unmodifiable Collection view of the item values contained in this\n CompositeData instance.\n The returned collection's iterator will return the values in the ascending\n lexicographic order of the corresponding\n item names."}, {"method_name": "equals", "method_sig": "public boolean equals (Object obj)", "description": "Compares the specified obj parameter with this\n CompositeDataSupport instance for equality.\n \n Returns true if and only if all of the following statements are true:\n \nobj is non null,\nobj also implements the CompositeData interface,\ntheir composite types are equal\ntheir contents, i.e. (name, value) pairs are equal. If a value contained in\n the content is an array, the value comparison is done as if by calling\n the deepEquals method\n for arrays of object reference types or the appropriate overloading of\n Arrays.equals(e1,e2) for arrays of primitive types\n\n\n This ensures that this equals method works properly for\n obj parameters which are different implementations of the\n CompositeData interface, with the restrictions mentioned in the\n equals\n method of the java.util.Collection interface."}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Returns the hash code value for this CompositeDataSupport instance.\n \n The hash code of a CompositeDataSupport instance is the sum of the hash codes\n of all elements of information used in equals comparisons\n (ie: its composite type and all the item values).\n \n This ensures that  t1.equals(t2)  implies that  t1.hashCode()==t2.hashCode() \n for any two CompositeDataSupport instances t1 and t2,\n as required by the general contract of the method\n Object.hashCode().\n \n Each item value's hash code is added to the returned hash code.\n If an item value is an array,\n its hash code is obtained as if by calling the\n deepHashCode method\n for arrays of object reference types or the appropriate overloading\n of Arrays.hashCode(e) for arrays of primitive types."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns a string representation of this CompositeDataSupport instance.\n \n The string representation consists of the name of this class (ie javax.management.openmbean.CompositeDataSupport),\n the string representation of the composite type of this instance, and the string representation of the contents\n (ie list the itemName=itemValue mappings)."}]}