{"name": "Class AbstractResourceBundleProvider", "module": "java.base", "package": "java.util.spi", "text": "AbstractResourceBundleProvider is an abstract class that provides\n the basic support for a provider implementation class for\n ResourceBundleProvider.\n\n \n Resource bundles can be packaged in one or more\n named modules, service provider modules.  The consumer of the\n resource bundle is the one calling ResourceBundle.getBundle(String).\n In order for the consumer module to load a resource bundle\n \"com.example.app.MyResources\" provided by another module,\n it will use the service loader\n mechanism.  A service interface named \"com.example.app.spi.MyResourcesProvider\"\n must be defined and a service provider module will provide an\n implementation class of \"com.example.app.spi.MyResourcesProvider\"\n as follows:\n\n \n import com.example.app.spi.MyResourcesProvider;\n class MyResourcesProviderImpl extends AbstractResourceBundleProvider\n     implements MyResourcesProvider\n {\n     public MyResourcesProviderImpl() {\n         super(\"java.properties\");\n     }\n     // this provider maps the resource bundle to per-language package\n     protected String toBundleName(String baseName, Locale locale) {\n         return \"p.\" + locale.getLanguage() + \".\" + baseName;\n     }\n\n     public ResourceBundle getBundle(String baseName, Locale locale) {\n         // this module only provides bundles in French\n         if (locale.equals(Locale.FRENCH)) {\n              return super.getBundle(baseName, locale);\n         }\n         // otherwise return null\n         return null;\n     }\n }\n\n Refer to ResourceBundleProvider for details.", "codes": ["public abstract class AbstractResourceBundleProvider\nextends Object\nimplements ResourceBundleProvider"], "fields": [], "methods": [{"method_name": "toBundleName", "method_sig": "protected String toBundleName (String baseName,\n                              Locale locale)", "description": "Returns the bundle name for the given baseName and \n locale that this provider provides."}, {"method_name": "getBundle", "method_sig": "public ResourceBundle getBundle (String baseName,\n                                Locale locale)", "description": "Returns a ResourceBundle for the given baseName and\n locale."}]}