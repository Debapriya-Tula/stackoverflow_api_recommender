{"name": "Class HijrahChronology", "module": "java.base", "package": "java.time.chrono", "text": "The Hijrah calendar is a lunar calendar supporting Islamic calendars.\n \n The HijrahChronology follows the rules of the Hijrah calendar system. The Hijrah\n calendar has several variants based on differences in when the new moon is\n determined to have occurred and where the observation is made.\n In some variants the length of each month is\n computed algorithmically from the astronomical data for the moon and earth and\n in others the length of the month is determined by an authorized sighting\n of the new moon. For the algorithmically based calendars the calendar\n can project into the future.\n For sighting based calendars only historical data from past\n sightings is available.\n \n The length of each month is 29 or 30 days.\n Ordinary years have 354 days; leap years have 355 days.\n\n \n CLDR and LDML identify variants:\n \nVariants of Hijrah Calendars\n\n\nChronology ID\nCalendar Type\nLocale extension, see Locale\nDescription\n\n\n\n\nHijrah-umalqura\nislamic-umalqura\nca-islamic-umalqura\nIslamic - Umm Al-Qura calendar of Saudi Arabia\n\n\n\nAdditional variants may be available through Chronology.getAvailableChronologies().\n\n Example\n\n Selecting the chronology from the locale uses Chronology.ofLocale(java.util.Locale)\n to find the Chronology based on Locale supported BCP 47 extension mechanism\n to request a specific calendar (\"ca\"). For example,\n \n\n      Locale locale = Locale.forLanguageTag(\"en-US-u-ca-islamic-umalqura\");\n      Chronology chrono = Chronology.ofLocale(locale);\n ", "codes": ["public final class HijrahChronology\nextends AbstractChronology\nimplements Serializable"], "fields": [{"field_name": "INSTANCE", "field_sig": "public static final\u00a0HijrahChronology INSTANCE", "description": "Singleton instance of the Islamic Umm Al-Qura calendar of Saudi Arabia.\n Other Hijrah chronology variants may be available from\n Chronology.getAvailableChronologies()."}], "methods": [{"method_name": "getId", "method_sig": "public String getId()", "description": "Gets the ID of the chronology.\n \n The ID uniquely identifies the Chronology. It can be used to\n lookup the Chronology using Chronology.of(String)."}, {"method_name": "getCalendarType", "method_sig": "public String getCalendarType()", "description": "Gets the calendar type of the Islamic calendar.\n \n The calendar type is an identifier defined by the\n Unicode Locale Data Markup Language (LDML) specification.\n It can be used to lookup the Chronology using Chronology.of(String)."}, {"method_name": "date", "method_sig": "public HijrahDate date (Era era,\n                       int yearOfEra,\n                       int month,\n                       int dayOfMonth)", "description": "Obtains a local date in Hijrah calendar system from the\n era, year-of-era, month-of-year and day-of-month fields."}, {"method_name": "date", "method_sig": "public HijrahDate date (int prolepticYear,\n                       int month,\n                       int dayOfMonth)", "description": "Obtains a local date in Hijrah calendar system from the\n proleptic-year, month-of-year and day-of-month fields."}, {"method_name": "dateYearDay", "method_sig": "public HijrahDate dateYearDay (Era era,\n                              int yearOfEra,\n                              int dayOfYear)", "description": "Obtains a local date in Hijrah calendar system from the\n era, year-of-era and day-of-year fields."}, {"method_name": "dateYearDay", "method_sig": "public HijrahDate dateYearDay (int prolepticYear,\n                              int dayOfYear)", "description": "Obtains a local date in Hijrah calendar system from the\n proleptic-year and day-of-year fields."}, {"method_name": "dateEpochDay", "method_sig": "public HijrahDate dateEpochDay (long epochDay)", "description": "Obtains a local date in the Hijrah calendar system from the epoch-day."}, {"method_name": "eraOf", "method_sig": "public HijrahEra eraOf (int eraValue)", "description": "Creates the HijrahEra object from the numeric value.\n The Hijrah calendar system has only one era covering the\n proleptic years greater than zero.\n This method returns the singleton HijrahEra for the value 1."}]}