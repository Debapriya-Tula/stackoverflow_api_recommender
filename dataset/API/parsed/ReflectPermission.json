{"name": "Class ReflectPermission", "module": "java.base", "package": "java.lang.reflect", "text": "The Permission class for reflective operations.\n \n The following table\n provides a summary description of what the permission allows,\n and discusses the risks of granting code the permission.\n\n \nTable shows permission target name, what the permission allows, and associated risks\n\n\nPermission Target Name\nWhat the Permission Allows\nRisks of Allowing this Permission\n\n\n\n\nsuppressAccessChecks\nability to suppress the standard Java language access checks\n       on fields and methods in a class; allow access not only public members\n       but also allow access to default (package) access, protected,\n       and private members.\nThis is dangerous in that information (possibly confidential) and\n       methods normally unavailable would be accessible to malicious code.\n\n\nnewProxyInPackage.{package name}\nability to create a proxy instance in the specified package of which\n       the non-public interface that the proxy class implements.\nThis gives code access to classes in packages to which it normally\n       does not have access and the dynamic proxy class is in the system\n       protection domain. Malicious code may use these classes to\n       help in its attempt to compromise security in the system.\n\n\n", "codes": ["public final class ReflectPermission\nextends BasicPermission"], "fields": [], "methods": []}