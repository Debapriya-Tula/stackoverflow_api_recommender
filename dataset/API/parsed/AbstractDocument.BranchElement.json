{"name": "Class AbstractDocument.BranchElement", "module": "java.desktop", "package": "javax.swing.text", "text": "Implements a composite element that contains other elements.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["public class AbstractDocument.BranchElement\nextends AbstractDocument.AbstractElement"], "fields": [], "methods": [{"method_name": "positionToElement", "method_sig": "public Element positionToElement (int pos)", "description": "Gets the child element that contains\n the given model position."}, {"method_name": "replace", "method_sig": "public void replace (int offset,\n                    int length,\n                    Element[] elems)", "description": "Replaces content with a new set of elements."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Converts the element to a string."}, {"method_name": "getName", "method_sig": "public String getName()", "description": "Gets the element name."}, {"method_name": "getStartOffset", "method_sig": "public int getStartOffset()", "description": "Gets the starting offset in the model for the element."}, {"method_name": "getEndOffset", "method_sig": "public int getEndOffset()", "description": "Gets the ending offset in the model for the element."}, {"method_name": "getElement", "method_sig": "public Element getElement (int index)", "description": "Gets a child element."}, {"method_name": "getElementCount", "method_sig": "public int getElementCount()", "description": "Gets the number of children for the element."}, {"method_name": "getElementIndex", "method_sig": "public int getElementIndex (int offset)", "description": "Gets the child element index closest to the given model offset."}, {"method_name": "isLeaf", "method_sig": "public boolean isLeaf()", "description": "Checks whether the element is a leaf."}, {"method_name": "getAllowsChildren", "method_sig": "public boolean getAllowsChildren()", "description": "Returns true if the receiver allows children."}, {"method_name": "children", "method_sig": "public Enumeration<TreeNode> children()", "description": "Returns the children of the receiver as an\n Enumeration."}]}