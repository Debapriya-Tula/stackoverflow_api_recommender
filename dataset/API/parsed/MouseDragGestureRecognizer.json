{"name": "Class MouseDragGestureRecognizer", "module": "java.desktop", "package": "java.awt.dnd", "text": "This abstract subclass of DragGestureRecognizer\n defines a DragGestureRecognizer\n for mouse-based gestures.\n\n Each platform implements its own concrete subclass of this class,\n available via the Toolkit.createDragGestureRecognizer() method,\n to encapsulate\n the recognition of the platform dependent mouse gesture(s) that initiate\n a Drag and Drop operation.\n \n Mouse drag gesture recognizers should honor the\n drag gesture motion threshold, available through\n DragSource.getDragThreshold().\n A drag gesture should be recognized only when the distance\n in either the horizontal or vertical direction between\n the location of the latest mouse dragged event and the\n location of the corresponding mouse button pressed event\n is greater than the drag gesture motion threshold.\n \n Drag gesture recognizers created with\n DragSource.createDefaultDragGestureRecognizer(java.awt.Component, int, java.awt.dnd.DragGestureListener)\n follow this convention.", "codes": ["public abstract class MouseDragGestureRecognizer\nextends DragGestureRecognizer\nimplements MouseListener, MouseMotionListener"], "fields": [], "methods": [{"method_name": "registerListeners", "method_sig": "protected void registerListeners()", "description": "register this DragGestureRecognizer's Listeners with the Component"}, {"method_name": "unregisterListeners", "method_sig": "protected void unregisterListeners()", "description": "unregister this DragGestureRecognizer's Listeners with the Component\n\n subclasses must override this method"}, {"method_name": "mouseClicked", "method_sig": "public void mouseClicked (MouseEvent e)", "description": "Invoked when the mouse has been clicked on a component."}, {"method_name": "mousePressed", "method_sig": "public void mousePressed (MouseEvent e)", "description": "Invoked when a mouse button has been\n pressed on a Component."}, {"method_name": "mouseReleased", "method_sig": "public void mouseReleased (MouseEvent e)", "description": "Invoked when a mouse button has been released on a component."}, {"method_name": "mouseEntered", "method_sig": "public void mouseEntered (MouseEvent e)", "description": "Invoked when the mouse enters a component."}, {"method_name": "mouseExited", "method_sig": "public void mouseExited (MouseEvent e)", "description": "Invoked when the mouse exits a component."}, {"method_name": "mouseDragged", "method_sig": "public void mouseDragged (MouseEvent e)", "description": "Invoked when a mouse button is pressed on a component."}, {"method_name": "mouseMoved", "method_sig": "public void mouseMoved (MouseEvent e)", "description": "Invoked when the mouse button has been moved on a component\n (with no buttons no down)."}]}