{"name": "Interface RootDoc", "module": "jdk.javadoc", "package": "com.sun.javadoc", "text": "Represents the root of the program structure information\n for one run of javadoc.  From this root all other program\n structure information can be extracted.\n Also represents the command line information -- the\n packages, classes and options specified by the user.", "codes": ["@Deprecated(since=\"9\",\n            forRemoval=true)\npublic interface RootDoc\nextends Doc, DocErrorReporter"], "fields": [], "methods": [{"method_name": "options", "method_sig": "String[][] options()", "description": "Command line options.\n \n For example, given:\n \n     javadoc -foo this that -bar other ...\n\n this method will return:\n \n      options()[0][0] = \"-foo\"\n      options()[0][1] = \"this\"\n      options()[0][2] = \"that\"\n      options()[1][0] = \"-bar\"\n      options()[1][1] = \"other\""}, {"method_name": "specifiedPackages", "method_sig": "PackageDoc[] specifiedPackages()", "description": "Return the packages\n specified\n on the command line.\n If -subpackages and -exclude options\n are used, return all the non-excluded packages."}, {"method_name": "specifiedClasses", "method_sig": "ClassDoc[] specifiedClasses()", "description": "Return the classes and interfaces\n specified\n as source file names on the command line."}, {"method_name": "classes", "method_sig": "ClassDoc[] classes()", "description": "Return the\n included\n      classes and interfaces in all packages."}, {"method_name": "packageNamed", "method_sig": "PackageDoc packageNamed (String name)", "description": "Return a PackageDoc for the specified package name."}, {"method_name": "classNamed", "method_sig": "ClassDoc classNamed (String qualifiedName)", "description": "Return a ClassDoc for the specified class or interface name."}]}