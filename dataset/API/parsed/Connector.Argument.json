{"name": "Interface Connector.Argument", "module": "jdk.jdi", "package": "com.sun.jdi.connect", "text": "Specification for and value of a Connector argument.\n Will always implement a subinterface of Argument:\n Connector.StringArgument, Connector.BooleanArgument,\n Connector.IntegerArgument,\n or Connector.SelectedArgument.", "codes": ["public static interface Connector.Argument\nextends Serializable"], "fields": [], "methods": [{"method_name": "name", "method_sig": "String name()", "description": "Returns a short, unique identifier for the argument.\n Not intended for exposure to end-user."}, {"method_name": "label", "method_sig": "String label()", "description": "Returns a short human-readable label for this argument."}, {"method_name": "description", "method_sig": "String description()", "description": "Returns a human-readable description of this argument\n and its purpose."}, {"method_name": "value", "method_sig": "String value()", "description": "Returns the current value of the argument. Initially, the\n default value is returned. If the value is currently unspecified,\n null is returned."}, {"method_name": "setValue", "method_sig": "void setValue (String value)", "description": "Sets the value of the argument.\n The value should be checked with isValid(String)\n before setting it; invalid values will throw an exception\n when the connection is established - for example,\n on LaunchingConnector.launch(java.util.Map<java.lang.String, ? extends com.sun.jdi.connect.Connector.Argument>)"}, {"method_name": "isValid", "method_sig": "boolean isValid (String value)", "description": "Performs basic sanity check of argument."}, {"method_name": "mustSpecify", "method_sig": "boolean mustSpecify()", "description": "Indicates whether the argument must be specified. If true,\n setValue(java.lang.String) must be used to set a non-null value before\n using this argument in establishing a connection."}]}