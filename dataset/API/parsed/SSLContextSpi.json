{"name": "Class SSLContextSpi", "module": "java.base", "package": "javax.net.ssl", "text": "This class defines the Service Provider Interface (SPI)\n for the SSLContext class.\n\n  All the abstract methods in this class must be implemented by each\n cryptographic service provider who wishes to supply the implementation\n of a particular SSL context.", "codes": ["public abstract class SSLContextSpi\nextends Object"], "fields": [], "methods": [{"method_name": "engineInit", "method_sig": "protected abstract void engineInit (KeyManager[] km,\n                                   TrustManager[] tm,\n                                   SecureRandom sr)\n                            throws KeyManagementException", "description": "Initializes this context."}, {"method_name": "engineGetSocketFactory", "method_sig": "protected abstract SSLSocketFactory engineGetSocketFactory()", "description": "Returns a SocketFactory object for this\n context."}, {"method_name": "engineGetServerSocketFactory", "method_sig": "protected abstract SSLServerSocketFactory engineGetServerSocketFactory()", "description": "Returns a ServerSocketFactory object for\n this context."}, {"method_name": "engineCreateSSLEngine", "method_sig": "protected abstract SSLEngine engineCreateSSLEngine()", "description": "Creates a new SSLEngine using this context.\n \n Applications using this factory method are providing no hints\n for an internal session reuse strategy. If hints are desired,\n engineCreateSSLEngine(String, int) should be used\n instead.\n \n Some cipher suites (such as Kerberos) require remote hostname\n information, in which case this factory method should not be used."}, {"method_name": "engineCreateSSLEngine", "method_sig": "protected abstract SSLEngine engineCreateSSLEngine (String host,\n                                                   int port)", "description": "Creates a SSLEngine using this context.\n \n Applications using this factory method are providing hints\n for an internal session reuse strategy.\n \n Some cipher suites (such as Kerberos) require remote hostname\n information, in which case peerHost needs to be specified."}, {"method_name": "engineGetServerSessionContext", "method_sig": "protected abstract SSLSessionContext engineGetServerSessionContext()", "description": "Returns a server SSLSessionContext object for\n this context."}, {"method_name": "engineGetClientSessionContext", "method_sig": "protected abstract SSLSessionContext engineGetClientSessionContext()", "description": "Returns a client SSLSessionContext object for\n this context."}, {"method_name": "engineGetDefaultSSLParameters", "method_sig": "protected SSLParameters engineGetDefaultSSLParameters()", "description": "Returns a copy of the SSLParameters indicating the default\n settings for this SSL context.\n\n The parameters will always have the ciphersuite and protocols\n arrays set to non-null values.\n\n The default implementation obtains the parameters from an\n SSLSocket created by calling the\n SocketFactory.createSocket() method of this context's SocketFactory."}, {"method_name": "engineGetSupportedSSLParameters", "method_sig": "protected SSLParameters engineGetSupportedSSLParameters()", "description": "Returns a copy of the SSLParameters indicating the maximum supported\n settings for this SSL context.\n\n The parameters will always have the ciphersuite and protocols\n arrays set to non-null values.\n\n The default implementation obtains the parameters from an\n SSLSocket created by calling the\n SocketFactory.createSocket() method of this context's SocketFactory."}]}