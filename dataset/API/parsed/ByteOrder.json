{"name": "Class ByteOrder", "module": "java.base", "package": "java.nio", "text": "A typesafe enumeration for byte orders.", "codes": ["public final class ByteOrder\nextends Object"], "fields": [{"field_name": "BIG_ENDIAN", "field_sig": "public static final\u00a0ByteOrder BIG_ENDIAN", "description": "Constant denoting big-endian byte order.  In this order, the bytes of a\n multibyte value are ordered from most significant to least significant."}, {"field_name": "LITTLE_ENDIAN", "field_sig": "public static final\u00a0ByteOrder LITTLE_ENDIAN", "description": "Constant denoting little-endian byte order.  In this order, the bytes of\n a multibyte value are ordered from least significant to most\n significant."}], "methods": [{"method_name": "nativeOrder", "method_sig": "public static ByteOrder nativeOrder()", "description": "Retrieves the native byte order of the underlying platform.\n\n  This method is defined so that performance-sensitive Java code can\n allocate direct buffers with the same byte order as the hardware.\n Native code libraries are often more efficient when such buffers are\n used.  "}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Constructs a string describing this object.\n\n  This method returns the string\n \"BIG_ENDIAN\" for BIG_ENDIAN and\n \"LITTLE_ENDIAN\" for LITTLE_ENDIAN."}]}