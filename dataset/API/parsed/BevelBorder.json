{"name": "Class BevelBorder", "module": "java.desktop", "package": "javax.swing.border", "text": "A class which implements a simple two-line bevel border.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["public class BevelBorder\nextends AbstractBorder"], "fields": [{"field_name": "RAISED", "field_sig": "public static final\u00a0int RAISED", "description": "Raised bevel type."}, {"field_name": "LOWERED", "field_sig": "public static final\u00a0int LOWERED", "description": "Lowered bevel type."}, {"field_name": "bevelType", "field_sig": "protected\u00a0int bevelType", "description": "The bevel type."}, {"field_name": "highlightOuter", "field_sig": "protected\u00a0Color highlightOuter", "description": "The color to use for the bevel outer highlight."}, {"field_name": "highlightInner", "field_sig": "protected\u00a0Color highlightInner", "description": "The color to use for the bevel inner highlight."}, {"field_name": "shadowInner", "field_sig": "protected\u00a0Color shadowInner", "description": "The color to use for the bevel inner shadow."}, {"field_name": "shadowOuter", "field_sig": "protected\u00a0Color shadowOuter", "description": "the color to use for the bevel outer shadow"}], "methods": [{"method_name": "paintBorder", "method_sig": "public void paintBorder (Component c,\n                        Graphics g,\n                        int x,\n                        int y,\n                        int width,\n                        int height)", "description": "Paints the border for the specified component with the specified\n position and size."}, {"method_name": "getBorderInsets", "method_sig": "public Insets getBorderInsets (Component c,\n                              Insets insets)", "description": "Reinitialize the insets parameter with this Border's current Insets."}, {"method_name": "getHighlightOuterColor", "method_sig": "public Color getHighlightOuterColor (Component c)", "description": "Returns the outer highlight color of the bevel border\n when rendered on the specified component.  If no highlight\n color was specified at instantiation, the highlight color\n is derived from the specified component's background color."}, {"method_name": "getHighlightInnerColor", "method_sig": "public Color getHighlightInnerColor (Component c)", "description": "Returns the inner highlight color of the bevel border\n when rendered on the specified component.  If no highlight\n color was specified at instantiation, the highlight color\n is derived from the specified component's background color."}, {"method_name": "getShadowInnerColor", "method_sig": "public Color getShadowInnerColor (Component c)", "description": "Returns the inner shadow color of the bevel border\n when rendered on the specified component.  If no shadow\n color was specified at instantiation, the shadow color\n is derived from the specified component's background color."}, {"method_name": "getShadowOuterColor", "method_sig": "public Color getShadowOuterColor (Component c)", "description": "Returns the outer shadow color of the bevel border\n when rendered on the specified component.  If no shadow\n color was specified at instantiation, the shadow color\n is derived from the specified component's background color."}, {"method_name": "getHighlightOuterColor", "method_sig": "public Color getHighlightOuterColor()", "description": "Returns the outer highlight color of the bevel border.\n Will return null if no highlight color was specified\n at instantiation."}, {"method_name": "getHighlightInnerColor", "method_sig": "public Color getHighlightInnerColor()", "description": "Returns the inner highlight color of the bevel border.\n Will return null if no highlight color was specified\n at instantiation."}, {"method_name": "getShadowInnerColor", "method_sig": "public Color getShadowInnerColor()", "description": "Returns the inner shadow color of the bevel border.\n Will return null if no shadow color was specified\n at instantiation."}, {"method_name": "getShadowOuterColor", "method_sig": "public Color getShadowOuterColor()", "description": "Returns the outer shadow color of the bevel border.\n Will return null if no shadow color was specified\n at instantiation."}, {"method_name": "getBevelType", "method_sig": "public int getBevelType()", "description": "Returns the type of the bevel border."}, {"method_name": "isBorderOpaque", "method_sig": "public boolean isBorderOpaque()", "description": "Returns whether or not the border is opaque. This implementation\n returns true."}, {"method_name": "paintRaisedBevel", "method_sig": "protected void paintRaisedBevel (Component c,\n                                Graphics g,\n                                int x,\n                                int y,\n                                int width,\n                                int height)", "description": "Paints a raised bevel for the specified component with the specified\n position and size."}, {"method_name": "paintLoweredBevel", "method_sig": "protected void paintLoweredBevel (Component c,\n                                 Graphics g,\n                                 int x,\n                                 int y,\n                                 int width,\n                                 int height)", "description": "Paints a lowered bevel for the specified component with the specified\n position and size."}]}