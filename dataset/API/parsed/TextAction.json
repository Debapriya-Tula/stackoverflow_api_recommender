{"name": "Class TextAction", "module": "java.desktop", "package": "javax.swing.text", "text": "An Action implementation useful for key bindings that are\n shared across a number of different text components.  Because\n the action is shared, it must have a way of getting it's\n target to act upon.  This class provides support to try and\n find a text component to operate on.  The preferred way of\n getting the component to act upon is through the ActionEvent\n that is received.  If the Object returned by getSource can\n be narrowed to a text component, it will be used.  If the\n action event is null or can't be narrowed, the last focused\n text component is tried.  This is determined by being\n used in conjunction with a JTextController which\n arranges to share that information with a TextAction.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["public abstract class TextAction\nextends AbstractAction"], "fields": [], "methods": [{"method_name": "getTextComponent", "method_sig": "protected final JTextComponent getTextComponent (ActionEvent e)", "description": "Determines the component to use for the action.\n This if fetched from the source of the ActionEvent\n if it's not null and can be narrowed.  Otherwise,\n the last focused component is used."}, {"method_name": "augmentList", "method_sig": "public static final Action[] augmentList (Action[] list1,\n                                         Action[] list2)", "description": "Takes one list of\n commands and augments it with another list\n of commands.  The second list takes precedence\n over the first list; that is, when both lists\n contain a command with the same name, the command\n from the second list is used."}, {"method_name": "getFocusedComponent", "method_sig": "protected final JTextComponent getFocusedComponent()", "description": "Fetches the text component that currently has focus.\n This allows actions to be shared across text components\n which is useful for key-bindings where a large set of\n actions are defined, but generally used the same way\n across many different components."}]}