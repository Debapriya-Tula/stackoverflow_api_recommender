{"name": "Class CompoundEdit", "module": "java.desktop", "package": "javax.swing.undo", "text": "A concrete subclass of AbstractUndoableEdit, used to assemble little\n UndoableEdits into great big ones.", "codes": ["public class CompoundEdit\nextends AbstractUndoableEdit"], "fields": [{"field_name": "edits", "field_sig": "protected\u00a0Vector<UndoableEdit> edits", "description": "The collection of UndoableEdits\n undone/redone en masse by this CompoundEdit."}], "methods": [{"method_name": "undo", "method_sig": "public void undo()\n          throws CannotUndoException", "description": "Sends undo to all contained\n UndoableEdits in the reverse of\n the order in which they were added."}, {"method_name": "redo", "method_sig": "public void redo()\n          throws CannotRedoException", "description": "Sends redo to all contained\n UndoableEdits in the order in\n which they were added."}, {"method_name": "lastEdit", "method_sig": "protected UndoableEdit lastEdit()", "description": "Returns the last UndoableEdit in\n edits, or null\n if edits is empty."}, {"method_name": "die", "method_sig": "public void die()", "description": "Sends die to each subedit,\n in the reverse of the order that they were added."}, {"method_name": "addEdit", "method_sig": "public boolean addEdit (UndoableEdit anEdit)", "description": "If this edit is inProgress,\n accepts anEdit and returns true.\n\n The last edit added to this CompoundEdit\n is given a chance to addEdit(anEdit).\n If it refuses (returns false), anEdit is\n given a chance to replaceEdit the last edit.\n If anEdit returns false here,\n it is added to edits."}, {"method_name": "end", "method_sig": "public void end()", "description": "Sets inProgress to false."}, {"method_name": "canUndo", "method_sig": "public boolean canUndo()", "description": "Returns false if isInProgress or if super\n returns false."}, {"method_name": "canRedo", "method_sig": "public boolean canRedo()", "description": "Returns false if isInProgress or if super\n returns false."}, {"method_name": "isInProgress", "method_sig": "public boolean isInProgress()", "description": "Returns true if this edit is in progress--that is, it has not\n received end. This generally means that edits are still being\n added to it."}, {"method_name": "isSignificant", "method_sig": "public boolean isSignificant()", "description": "Returns true if any of the UndoableEdits\n in edits do.\n Returns false if they all return false."}, {"method_name": "getPresentationName", "method_sig": "public String getPresentationName()", "description": "Returns getPresentationName from the\n last UndoableEdit added to\n edits. If edits is empty,\n calls super."}, {"method_name": "getUndoPresentationName", "method_sig": "public String getUndoPresentationName()", "description": "Returns getUndoPresentationName\n from the last UndoableEdit\n added to edits.\n If edits is empty, calls super."}, {"method_name": "getRedoPresentationName", "method_sig": "public String getRedoPresentationName()", "description": "Returns getRedoPresentationName\n from the last UndoableEdit\n added to edits.\n If edits is empty, calls super."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns a string that displays and identifies this\n object's properties."}]}