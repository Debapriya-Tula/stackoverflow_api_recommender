{"name": "Class SyncProviderException", "module": "java.sql.rowset", "package": "javax.sql.rowset.spi", "text": "Indicates an error with the SyncProvider mechanism. This exception\n is created by a SyncProvider abstract class extension if it\n encounters violations in reading from or writing to the originating data source.\n \n If it is implemented to do so, the SyncProvider object may also create a\n SyncResolver object and either initialize the SyncProviderException\n object with it at construction time or set it with the SyncProvider object at\n a later time.\n \n The method acceptChanges will throw this exception after the writer\n has finished checking for conflicts and has found one or more conflicts. An\n application may catch a SyncProviderException object and call its\n getSyncResolver method to get its SyncResolver object.\n See the code fragment in the interface comment for\n SyncResolver for an example.\n This SyncResolver object will mirror the RowSet\n object that generated the exception, except that it will contain only the values\n from the data source that are in conflict.  All other values in the SyncResolver\n object will be null.\n \n The SyncResolver object may be used to examine and resolve\n each conflict in a row and then go to the next row with a conflict to\n repeat the procedure.\n \n A SyncProviderException object may or may not contain a description of the\n condition causing the exception.  The inherited method getMessage may be\n called to retrieve the description if there is one.", "codes": ["public class SyncProviderException\nextends SQLException"], "fields": [], "methods": [{"method_name": "getSyncResolver", "method_sig": "public SyncResolver getSyncResolver()", "description": "Retrieves the SyncResolver object that has been set for\n this SyncProviderException object, or\n if none has been set, an instance of the default SyncResolver\n implementation included in the reference implementation.\n \n If a SyncProviderException object is thrown, an application\n may use this method to generate a SyncResolver object\n with which to resolve the conflict or conflicts that caused the\n exception to be thrown."}, {"method_name": "setSyncResolver", "method_sig": "public void setSyncResolver (SyncResolver syncResolver)", "description": "Sets the SyncResolver object for this\n SyncProviderException object to the one supplied.\n If the argument supplied is null, a call to the method\n getSyncResolver will return the default reference\n implementation of the SyncResolver interface."}]}