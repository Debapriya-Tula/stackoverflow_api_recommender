{"name": "Interface ExecutableElement", "module": "java.compiler", "package": "javax.lang.model.element", "text": "Represents a method, constructor, or initializer (static or\n instance) of a class or interface, including annotation type\n elements.", "codes": ["public interface ExecutableElement\nextends Element, Parameterizable"], "fields": [], "methods": [{"method_name": "getTypeParameters", "method_sig": "List<? extends TypeParameterElement> getTypeParameters()", "description": "Returns the formal type parameters of this executable\n in declaration order."}, {"method_name": "getReturnType", "method_sig": "TypeMirror getReturnType()", "description": "Returns the return type of this executable.\n Returns a NoType with kind VOID\n if this executable is not a method, or is a method that does not\n return a value."}, {"method_name": "getParameters", "method_sig": "List<? extends VariableElement> getParameters()", "description": "Returns the formal parameters of this executable.\n They are returned in declaration order."}, {"method_name": "getReceiverType", "method_sig": "TypeMirror getReceiverType()", "description": "Returns the receiver type of this executable,\n or NoType with\n kind NONE\n if the executable has no receiver type.\n\n An executable which is an instance method, or a constructor of an\n inner class, has a receiver type derived from the declaring type.\n\n An executable which is a static method, or a constructor of a\n non-inner class, or an initializer (static or instance), has no\n receiver type."}, {"method_name": "isVarArgs", "method_sig": "boolean isVarArgs()", "description": "Returns true if this method or constructor accepts a variable\n number of arguments and returns false otherwise."}, {"method_name": "isDefault", "method_sig": "boolean isDefault()", "description": "Returns true if this method is a default method and\n returns false otherwise."}, {"method_name": "getThrownTypes", "method_sig": "List<? extends TypeMirror> getThrownTypes()", "description": "Returns the exceptions and other throwables listed in this\n method or constructor's throws clause in declaration\n order."}, {"method_name": "getDefaultValue", "method_sig": "AnnotationValue getDefaultValue()", "description": "Returns the default value if this executable is an annotation\n type element.  Returns null if this method is not an\n annotation type element, or if it is an annotation type element\n with no default value."}, {"method_name": "getSimpleName", "method_sig": "Name getSimpleName()", "description": "Returns the simple name of a constructor, method, or\n initializer.  For a constructor, the name \"<init>\" is\n returned, for a static initializer, the name \"<clinit>\"\n is returned, and for an anonymous class or instance\n initializer, an empty name is returned."}]}