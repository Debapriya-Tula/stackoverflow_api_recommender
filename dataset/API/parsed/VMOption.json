{"name": "Class VMOption", "module": "jdk.management", "package": "com.sun.management", "text": "Information about a VM option including its value and\n where the value came from which is referred as its\n origin.\n \n Each VM option has a default value.  A VM option can\n be set at VM creation time typically as a command line\n argument to the launcher or an argument passed to the\n VM created using the JNI invocation interface.\n In addition, a VM option may be set via an environment\n variable or a configuration file. A VM option can also\n be set dynamically via a management interface after\n the VM was started.\n\n A VMOption contains the value of a VM option\n and the origin of that value at the time this VMOption\n object was constructed.  The value of the VM option\n may be changed after the VMOption object was constructed,", "codes": ["public class VMOption\nextends Object"], "fields": [], "methods": [{"method_name": "getName", "method_sig": "public String getName()", "description": "Returns the name of this VM option."}, {"method_name": "getValue", "method_sig": "public String getValue()", "description": "Returns the value of this VM option at the time when\n this VMOption was created. The value could have been changed."}, {"method_name": "getOrigin", "method_sig": "public VMOption.Origin getOrigin()", "description": "Returns the origin of the value of this VM option. That is,\n where the value of this VM option came from."}, {"method_name": "isWriteable", "method_sig": "public boolean isWriteable()", "description": "Tests if this VM option is writeable.  If this VM option is writeable,\n it can be set by the HotSpotDiagnosticMXBean.setVMOption method."}, {"method_name": "from", "method_sig": "public static VMOption from (CompositeData cd)", "description": "Returns a VMOption object represented by the\n given CompositeData. The given CompositeData\n must contain the following attributes:\n\n \ndescription\n\n\nAttribute Name\nType\n\n\n\n\nname\njava.lang.String\n\n\nvalue\njava.lang.String\n\n\norigin\njava.lang.String\n\n\nwriteable\njava.lang.Boolean\n\n\n\n"}]}