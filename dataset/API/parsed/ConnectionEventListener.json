{"name": "Interface ConnectionEventListener", "module": "java.sql", "package": "javax.sql", "text": "\n An object that registers to be notified of events generated by a\n PooledConnection object.\n \n The ConnectionEventListener interface is implemented by a\n connection pooling component.  A connection pooling component will\n usually be provided by a JDBC driver vendor or another system software\n vendor.  A JDBC driver notifies a ConnectionEventListener\n object when an application is finished using a pooled connection with\n which the listener has registered.  The notification\n occurs after the application calls the method close on\n its representation of a PooledConnection object.  A\n ConnectionEventListener is also notified when a\n connection error occurs due to the fact that the PooledConnection\n is unfit for future use---the server has crashed, for example.\n The listener is notified by the JDBC driver just before the driver throws an\n SQLException to the application using the\n PooledConnection object.", "codes": ["public interface ConnectionEventListener\nextends EventListener"], "fields": [], "methods": [{"method_name": "connectionClosed", "method_sig": "void connectionClosed (ConnectionEvent event)", "description": "Notifies this ConnectionEventListener that\n the application has called the method close on its\n representation of a pooled connection."}, {"method_name": "connectionErrorOccurred", "method_sig": "void connectionErrorOccurred (ConnectionEvent event)", "description": "Notifies this ConnectionEventListener that\n a fatal error has occurred and the pooled connection can\n no longer be used.  The driver makes this notification just\n before it throws the application the SQLException\n contained in the given ConnectionEvent object."}]}