{"name": "Class AuthPermission", "module": "java.base", "package": "javax.security.auth", "text": "This class is for authentication permissions. An AuthPermission\n contains a name (also referred to as a \"target name\") but no actions\n list; you either have the named permission or you don't.\n\n  The target name is the name of a security configuration parameter\n (see below).  Currently the AuthPermission object is used to\n guard access to the Subject,\n LoginContext, and\n Configuration objects.\n\n  The standard target names for an Authentication Permission are:\n\n \n      doAs -                  allow the caller to invoke the\n                              Subject.doAs methods.\n\n      doAsPrivileged -        allow the caller to invoke the\n                              Subject.doAsPrivileged methods.\n\n      getSubject -            allow for the retrieval of the\n                              Subject(s) associated with the\n                              current Thread.\n\n      getSubjectFromDomainCombiner -  allow for the retrieval of the\n                              Subject associated with the\n                              a SubjectDomainCombiner.\n\n      setReadOnly -           allow the caller to set a Subject\n                              to be read-only.\n\n      modifyPrincipals -      allow the caller to modify the Set\n                              of Principals associated with a\n                              Subject\n\n      modifyPublicCredentials - allow the caller to modify the\n                              Set of public credentials\n                              associated with a Subject\n\n      modifyPrivateCredentials - allow the caller to modify the\n                              Set of private credentials\n                              associated with a Subject\n\n      refreshCredential -     allow code to invoke the refresh\n                              method on a credential which implements\n                              the Refreshable interface.\n\n      destroyCredential -     allow code to invoke the destroy\n                              method on a credential object\n                              which implements the Destroyable\n                              interface.\n\n      createLoginContext.{name} -  allow code to instantiate a\n                              LoginContext with the\n                              specified name.  name\n                              is used as the index into the installed login\n                              Configuration\n                              (that returned by\n                              Configuration.getConfiguration()).\n                              name can be wildcarded (set to '*')\n                              to allow for any name.\n\n      getLoginConfiguration - allow for the retrieval of the system-wide\n                              login Configuration.\n\n      createLoginConfiguration.{type} - allow code to obtain a Configuration\n                              object via\n                              Configuration.getInstance.\n\n      setLoginConfiguration - allow for the setting of the system-wide\n                              login Configuration.\n\n      refreshLoginConfiguration - allow for the refreshing of the system-wide\n                              login Configuration.\n \nPlease note that granting this permission with the \"modifyPrincipals\",\n \"modifyPublicCredentials\" or \"modifyPrivateCredentials\" target allows\n a JAAS login module to populate principal or credential objects into\n the Subject. Although reading information inside the private credentials\n set requires a PrivateCredentialPermission of the credential type to\n be granted, reading information inside the principals set and the public\n credentials set requires no additional permission. These objects can contain\n potentially sensitive information. For example, login modules that read\n local user information or perform a Kerberos login are able to add\n potentially sensitive information such as user ids, groups and domain names\n to the principals set.\n\n  The following target name has been deprecated in favor of\n createLoginContext.{name}.\n\n \n      createLoginContext -    allow code to instantiate a\n                              LoginContext.\n ", "codes": ["public final class AuthPermission\nextends BasicPermission"], "fields": [], "methods": []}