{"name": "Interface DeclaredType", "module": "java.compiler", "package": "javax.lang.model.type", "text": "Represents a declared type, either a class type or an interface type.\n This includes parameterized types such as java.util.Set<String>\n as well as raw types.\n\n  While a TypeElement represents a class or interface\n element, a DeclaredType represents a class\n or interface type, the latter being a use\n (or invocation) of the former.\n See TypeElement for more on this distinction.\n\n  The supertypes (both class and interface types) of a declared\n type may be found using the Types.directSupertypes(TypeMirror) method.  This returns the\n supertypes with any type arguments substituted in.", "codes": ["public interface DeclaredType\nextends ReferenceType"], "fields": [], "methods": [{"method_name": "asElement", "method_sig": "Element asElement()", "description": "Returns the element corresponding to this type."}, {"method_name": "getEnclosingType", "method_sig": "TypeMirror getEnclosingType()", "description": "Returns the type of the innermost enclosing instance or a\n NoType of kind NONE if there is no enclosing\n instance.  Only types corresponding to inner classes have an\n enclosing instance."}, {"method_name": "getTypeArguments", "method_sig": "List<? extends TypeMirror> getTypeArguments()", "description": "Returns the actual type arguments of this type.\n For a type nested within a parameterized type\n (such as Outer<String>.Inner<Number>), only the type\n arguments of the innermost type are included."}]}