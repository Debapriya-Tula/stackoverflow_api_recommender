{"name": "Interface KeyValue", "module": "java.xml.crypto", "package": "javax.xml.crypto.dsig.keyinfo", "text": "A representation of the XML KeyValue element as defined\n in the \n W3C Recommendation for XML-Signature Syntax and Processing. A\n KeyValue object contains a single public key that may be\n useful in validating the signature. The XML schema definition is defined as:\n\n \n    <element name=\"KeyValue\" type=\"ds:KeyValueType\"/>\n    <complexType name=\"KeyValueType\" mixed=\"true\">\n      <choice>\n        <element ref=\"ds:DSAKeyValue\"/>\n        <element ref=\"ds:RSAKeyValue\"/>\n        <any namespace=\"##other\" processContents=\"lax\"/>\n      </choice>\n    </complexType>\n\n    <element name=\"DSAKeyValue\" type=\"ds:DSAKeyValueType\"/>\n    <complexType name=\"DSAKeyValueType\">\n      <sequence>\n        <sequence minOccurs=\"0\">\n          <element name=\"P\" type=\"ds:CryptoBinary\"/>\n          <element name=\"Q\" type=\"ds:CryptoBinary\"/>\n        </sequence>\n        <element name=\"G\" type=\"ds:CryptoBinary\" minOccurs=\"0\"/>\n        <element name=\"Y\" type=\"ds:CryptoBinary\"/>\n        <element name=\"J\" type=\"ds:CryptoBinary\" minOccurs=\"0\"/>\n        <sequence minOccurs=\"0\">\n          <element name=\"Seed\" type=\"ds:CryptoBinary\"/>\n          <element name=\"PgenCounter\" type=\"ds:CryptoBinary\"/>\n        </sequence>\n      </sequence>\n    </complexType>\n\n    <element name=\"RSAKeyValue\" type=\"ds:RSAKeyValueType\"/>\n    <complexType name=\"RSAKeyValueType\">\n      <sequence>\n        <element name=\"Modulus\" type=\"ds:CryptoBinary\"/>\n        <element name=\"Exponent\" type=\"ds:CryptoBinary\"/>\n      </sequence>\n    </complexType>\n \n A KeyValue instance may be created by invoking the\n newKeyValue method of the\n KeyInfoFactory class, and passing it a PublicKey representing the value of the public key. Here is\n an example of creating a KeyValue from a DSAPublicKey\n of a Certificate stored in a\n KeyStore:\n \n KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());\n PublicKey dsaPublicKey = keyStore.getCertificate(\"myDSASigningCert\").getPublicKey();\n KeyInfoFactory factory = KeyInfoFactory.getInstance(\"DOM\");\n KeyValue keyValue = factory.newKeyValue(dsaPublicKey);\n \n\n This class returns the DSAKeyValue and\n RSAKeyValue elements as objects of type\n DSAPublicKey and RSAPublicKey, respectively. Note that not\n all of the fields in the schema are accessible as parameters of these\n types.", "codes": ["public interface KeyValue\nextends XMLStructure"], "fields": [{"field_name": "DSA_TYPE", "field_sig": "static final\u00a0String DSA_TYPE", "description": "URI identifying the DSA KeyValue KeyInfo type:\n http://www.w3.org/2000/09/xmldsig#DSAKeyValue. This can be specified as\n the value of the type parameter of the\n RetrievalMethod class to describe a remote\n DSAKeyValue structure."}, {"field_name": "RSA_TYPE", "field_sig": "static final\u00a0String RSA_TYPE", "description": "URI identifying the RSA KeyValue KeyInfo type:\n http://www.w3.org/2000/09/xmldsig#RSAKeyValue. This can be specified as\n the value of the type parameter of the\n RetrievalMethod class to describe a remote\n RSAKeyValue structure."}], "methods": [{"method_name": "getPublicKey", "method_sig": "PublicKey getPublicKey()\n                throws KeyException", "description": "Returns the public key of this KeyValue."}]}