{"name": "Interface ThreadFactory", "module": "java.base", "package": "java.util.concurrent", "text": "An object that creates new threads on demand.  Using thread factories\n removes hardwiring of calls to new Thread,\n enabling applications to use special thread subclasses, priorities, etc.\n\n \n The simplest implementation of this interface is just:\n  \n class SimpleThreadFactory implements ThreadFactory {\n   public Thread newThread(Runnable r) {\n     return new Thread(r);\n   }\n }\n\n The Executors.defaultThreadFactory() method provides a more\n useful simple implementation, that sets the created thread context\n to known values before returning it.", "codes": ["public interface ThreadFactory"], "fields": [], "methods": [{"method_name": "newThread", "method_sig": "Thread newThread (Runnable r)", "description": "Constructs a new Thread.  Implementations may also initialize\n priority, name, daemon status, ThreadGroup, etc."}]}