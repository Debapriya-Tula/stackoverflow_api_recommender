{"name": "Interface Mirror", "module": "jdk.jdi", "package": "com.sun.jdi", "text": "A proxy used by a debugger to examine or manipulate some entity\n in another virtual machine. Mirror is the root of the\n interface hierarchy for this package. Mirrors can be proxies for objects\n in the target VM (ObjectReference), primitive values\n (for example, IntegerValue), types (for example,\n ReferenceType), dynamic application state (for example,\n StackFrame), and even debugger-specific constructs (for example,\n BreakpointRequest).\n The VirtualMachine itself is also considered a mirror,\n representing the composite state of the target VM.\n \n There is no guarantee that a particular entity in the target VM will map\n to a single instance of Mirror. Implementors are free to decide\n whether a single mirror will be used for some or all mirrors. Clients\n of this interface should always use equals to compare\n two mirrors for equality.\n \n Any method on a Mirror that takes a Mirror as an\n parameter directly or indirectly (e.g., as a element in a List) will\n throw VMMismatchException if the mirrors are from different\n virtual machines.", "codes": ["public interface Mirror"], "fields": [], "methods": [{"method_name": "virtualMachine", "method_sig": "VirtualMachine virtualMachine()", "description": "Gets the VirtualMachine to which this\n Mirror belongs. A Mirror must be associated\n with a VirtualMachine to have any meaning."}, {"method_name": "toString", "method_sig": "String toString()", "description": "Returns a String describing this mirror"}]}