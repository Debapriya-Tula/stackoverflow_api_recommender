{"name": "Class ResponseCache", "module": "java.base", "package": "java.net", "text": "Represents implementations of URLConnection caches. An instance of\n such a class can be registered with the system by doing\n ResponseCache.setDefault(ResponseCache), and the system will call\n this object in order to:\n\n    store resource data which has been retrieved from an\n            external source into the cache\ntry to fetch a requested resource that may have been\n            stored in the cache\n\n\n The ResponseCache implementation decides which resources\n should be cached, and for how long they should be cached. If a\n request resource cannot be retrieved from the cache, then the\n protocol handlers will fetch the resource from its original\n location.\n\n The settings for URLConnection#useCaches controls whether the\n protocol is allowed to use a cached response.\n\n For more information on HTTP caching, see RFC\u00a02616: Hypertext\n Transfer Protocol -- HTTP/1.1", "codes": ["public abstract class ResponseCache\nextends Object"], "fields": [], "methods": [{"method_name": "getDefault", "method_sig": "public static ResponseCache getDefault()", "description": "Gets the system-wide response cache."}, {"method_name": "setDefault", "method_sig": "public static void setDefault (ResponseCache responseCache)", "description": "Sets (or unsets) the system-wide cache.\n\n Note: non-standard procotol handlers may ignore this setting."}, {"method_name": "get", "method_sig": "public abstract CacheResponse get (URI uri,\n                                  String rqstMethod,\n                                  Map<String, List<String>> rqstHeaders)\n                           throws IOException", "description": "Retrieve the cached response based on the requesting uri,\n request method and request headers. Typically this method is\n called by the protocol handler before it sends out the request\n to get the network resource. If a cached response is returned,\n that resource is used instead."}, {"method_name": "put", "method_sig": "public abstract CacheRequest put (URI uri,\n                                 URLConnection conn)\n                          throws IOException", "description": "The protocol handler calls this method after a resource has\n been retrieved, and the ResponseCache must decide whether or\n not to store the resource in its cache. If the resource is to\n be cached, then put() must return a CacheRequest object which\n contains an OutputStream that the protocol handler will\n use to write the resource into the cache. If the resource is\n not to be cached, then put must return null."}]}