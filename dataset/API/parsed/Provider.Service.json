{"name": "Class Provider.Service", "module": "java.base", "package": "java.security", "text": "The description of a security service. It encapsulates the properties\n of a service and contains a factory method to obtain new implementation\n instances of this service.\n\n Each service has a provider that offers the service, a type,\n an algorithm name, and the name of the class that implements the\n service. Optionally, it also includes a list of alternate algorithm\n names for this service (aliases) and attributes, which are a map of\n (name, value) String pairs.\n\n This class defines the methods supportsParameter() and newInstance()\n which are used by the Java security framework when it searches for\n suitable services and instantiates them. The valid arguments to those\n methods depend on the type of service. For the service types defined\n within Java SE, see the\n Java Cryptography Architecture (JCA) Reference Guide\n for the valid values.\n Note that components outside of Java SE can define additional types of\n services and their behavior.\n\n Instances of this class are immutable.", "codes": ["public static class Provider.Service\nextends Object"], "fields": [], "methods": [{"method_name": "getType", "method_sig": "public final String getType()", "description": "Get the type of this service. For example, MessageDigest."}, {"method_name": "getAlgorithm", "method_sig": "public final String getAlgorithm()", "description": "Return the name of the algorithm of this service. For example,\n SHA-1."}, {"method_name": "getProvider", "method_sig": "public final Provider getProvider()", "description": "Return the Provider of this service."}, {"method_name": "getClassName", "method_sig": "public final String getClassName()", "description": "Return the name of the class implementing this service."}, {"method_name": "getAttribute", "method_sig": "public final String getAttribute (String name)", "description": "Return the value of the specified attribute or null if this\n attribute is not set for this Service."}, {"method_name": "newInstance", "method_sig": "public Object newInstance (Object constructorParameter)\n                   throws NoSuchAlgorithmException", "description": "Return a new instance of the implementation described by this\n service. The security provider framework uses this method to\n construct implementations. Applications will typically not need\n to call it.\n\n The default implementation uses reflection to invoke the\n standard constructor for this type of service.\n Security providers can override this method to implement\n instantiation in a different way.\n For details and the values of constructorParameter that are\n valid for the various types of services see the\n Java Cryptography Architecture (JCA) Reference Guide."}, {"method_name": "supportsParameter", "method_sig": "public boolean supportsParameter (Object parameter)", "description": "Test whether this Service can use the specified parameter.\n Returns false if this service cannot use the parameter. Returns\n true if this service can use the parameter, if a fast test is\n infeasible, or if the status is unknown.\n\n The security provider framework uses this method with\n some types of services to quickly exclude non-matching\n implementations for consideration.\n Applications will typically not need to call it.\n\n For details and the values of parameter that are valid for the\n various types of services see the top of this class and the\n Java Cryptography Architecture (JCA) Reference Guide.\n Security providers can override it to implement their own test."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Return a String representation of this service."}]}