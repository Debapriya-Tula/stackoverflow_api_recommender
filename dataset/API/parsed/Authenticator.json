{"name": "Class Authenticator", "module": "jdk.httpserver", "package": "com.sun.net.httpserver", "text": "Authenticator represents an implementation of an HTTP authentication\n mechanism. Sub-classes provide implementations of specific mechanisms\n such as Digest or Basic auth. Instances are invoked to provide verification\n of the authentication information provided in all incoming requests.\n Note. This implies that any caching of credentials or other authentication\n information must be done outside of this class.", "codes": ["public abstract class Authenticator\nextends Object"], "fields": [], "methods": [{"method_name": "authenticate", "method_sig": "public abstract Authenticator.Result authenticate (HttpExchange exch)", "description": "called to authenticate each incoming request. The implementation\n must return a Failure, Success or Retry object as appropriate :-\n \n Failure means the authentication has completed, but has failed\n due to invalid credentials.\n \n Sucess means that the authentication\n has succeeded, and a Principal object representing the user\n can be retrieved by calling Sucess.getPrincipal() .\n \n Retry means that another HTTP exchange is required. Any response\n headers needing to be sent back to the client are set in the\n given HttpExchange. The response code to be returned must be provided\n in the Retry object. Retry may occur multiple times."}]}