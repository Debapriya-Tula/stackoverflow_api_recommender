{"name": "Class RefAddr", "module": "java.naming", "package": "javax.naming", "text": "This class represents the address of a communications end-point.\n It consists of a type that describes the communication mechanism\n and an address contents determined by an RefAddr subclass.\n\n For example, an address type could be \"BSD Printer Address\",\n which specifies that it is an address to be used with the BSD printing\n protocol. Its contents could be the machine name identifying the\n location of the printer server that understands this protocol.\n\n A RefAddr is contained within a Reference.\n\n RefAddr is an abstract class. Concrete implementations of it\n determine its synchronization properties.", "codes": ["public abstract class RefAddr\nextends Object\nimplements Serializable"], "fields": [{"field_name": "addrType", "field_sig": "protected\u00a0String addrType", "description": "Contains the type of this address."}], "methods": [{"method_name": "getType", "method_sig": "public String getType()", "description": "Retrieves the address type of this address."}, {"method_name": "getContent", "method_sig": "public abstract Object getContent()", "description": "Retrieves the contents of this address."}, {"method_name": "equals", "method_sig": "public boolean equals (Object obj)", "description": "Determines whether obj is equal to this RefAddr.\n\n obj is equal to this RefAddr if all of these conditions are true\n\n non-null\n instance of RefAddr\n obj has the same address type as this RefAddr (using String.compareTo())\n both obj and this RefAddr's contents are null or they are equal\n         (using the equals() test).\n"}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Computes the hash code of this address using its address type and contents.\n The hash code is the sum of the hash code of the address type and\n the hash code of the address contents."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Generates the string representation of this address.\n The string consists of the address's type and contents with labels.\n This representation is intended for display only and not to be parsed."}]}