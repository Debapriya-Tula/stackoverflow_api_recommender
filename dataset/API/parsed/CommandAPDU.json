{"name": "Class CommandAPDU", "module": "java.smartcardio", "package": "javax.smartcardio", "text": "A command APDU following the structure defined in ISO/IEC 7816-4.\n It consists of a four byte header and a conditional body of variable length.\n This class does not attempt to verify that the APDU encodes a semantically\n valid command.\n\n Note that when the expected length of the response APDU is specified\n in the constructors,\n the actual length (Ne) must be specified, not its\n encoded form (Le). Similarly, getNe() returns the actual\n value Ne. In other words, a value of 0 means \"no data in the response APDU\"\n rather than \"maximum length.\"\n\n This class supports both the short and extended forms of length\n encoding for Ne and Nc. However, note that not all terminals and Smart Cards\n are capable of accepting APDUs that use the extended form.\n\n For the header bytes CLA, INS, P1, and P2 the Java type int\n is used to represent the 8 bit unsigned values. In the constructors, only\n the 8 lowest bits of the int value specified by the application\n are significant. The accessor methods always return the byte as an unsigned\n value between 0 and 255.\n\n Instances of this class are immutable. Where data is passed in or out\n via byte arrays, defensive cloning is performed.", "codes": ["public final class CommandAPDU\nextends Object\nimplements Serializable"], "fields": [], "methods": [{"method_name": "getCLA", "method_sig": "public int getCLA()", "description": "Returns the value of the class byte CLA."}, {"method_name": "getINS", "method_sig": "public int getINS()", "description": "Returns the value of the instruction byte INS."}, {"method_name": "getP1", "method_sig": "public int getP1()", "description": "Returns the value of the parameter byte P1."}, {"method_name": "getP2", "method_sig": "public int getP2()", "description": "Returns the value of the parameter byte P2."}, {"method_name": "getNc", "method_sig": "public int getNc()", "description": "Returns the number of data bytes in the command body (Nc) or 0 if this\n APDU has no body. This call is equivalent to\n getData().length."}, {"method_name": "getData", "method_sig": "public byte[] getData()", "description": "Returns a copy of the data bytes in the command body. If this APDU as\n no body, this method returns a byte array with length zero."}, {"method_name": "getNe", "method_sig": "public int getNe()", "description": "Returns the maximum number of expected data bytes in a response\n APDU (Ne)."}, {"method_name": "getBytes", "method_sig": "public byte[] getBytes()", "description": "Returns a copy of the bytes in this APDU."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns a string representation of this command APDU."}, {"method_name": "equals", "method_sig": "public boolean equals (Object obj)", "description": "Compares the specified object with this command APDU for equality.\n Returns true if the given object is also a CommandAPDU and its bytes are\n identical to the bytes in this CommandAPDU."}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Returns the hash code value for this command APDU."}]}