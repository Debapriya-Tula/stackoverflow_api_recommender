{"name": "Class MenuComponent", "module": "java.desktop", "package": "java.awt", "text": "The abstract class MenuComponent is the superclass\n of all menu-related components. In this respect, the class\n MenuComponent is analogous to the abstract superclass\n Component for AWT components.\n \n Menu components receive and process AWT events, just as components do,\n through the method processEvent.", "codes": ["public abstract class MenuComponent\nextends Object\nimplements Serializable"], "fields": [], "methods": [{"method_name": "getName", "method_sig": "public String getName()", "description": "Gets the name of the menu component."}, {"method_name": "setName", "method_sig": "public void setName (String name)", "description": "Sets the name of the component to the specified string."}, {"method_name": "getParent", "method_sig": "public MenuContainer getParent()", "description": "Returns the parent container for this menu component."}, {"method_name": "getFont", "method_sig": "public Font getFont()", "description": "Gets the font used for this menu component."}, {"method_name": "setFont", "method_sig": "public void setFont (Font f)", "description": "Sets the font to be used for this menu component to the specified\n font. This font is also used by all subcomponents of this menu\n component, unless those subcomponents specify a different font.\n \n Some platforms may not support setting of all font attributes\n of a menu component; in such cases, calling setFont\n will have no effect on the unsupported font attributes of this\n menu component.  Unless subcomponents of this menu component\n specify a different font, this font will be used by those\n subcomponents if supported by the underlying platform."}, {"method_name": "removeNotify", "method_sig": "public void removeNotify()", "description": "Removes the menu component's peer.  The peer allows us to modify the\n appearance of the menu component without changing the functionality of\n the menu component."}, {"method_name": "postEvent", "method_sig": "@Deprecated\npublic boolean postEvent (Event evt)", "description": "Posts the specified event to the menu.\n This method is part of the Java\u00a01.0 event system\n and it is maintained only for backwards compatibility.\n Its use is discouraged, and it may not be supported\n in the future."}, {"method_name": "dispatchEvent", "method_sig": "public final void dispatchEvent (AWTEvent e)", "description": "Delivers an event to this component or one of its sub components."}, {"method_name": "processEvent", "method_sig": "protected void processEvent (AWTEvent e)", "description": "Processes events occurring on this menu component.\n Note that if the event parameter is null\n the behavior is unspecified and may result in an\n exception."}, {"method_name": "paramString", "method_sig": "protected String paramString()", "description": "Returns a string representing the state of this\n MenuComponent. This method is intended to be used\n only for debugging purposes, and the content and format of the\n returned string may vary between implementations. The returned\n string may be empty but may not be null."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns a representation of this menu component as a string."}, {"method_name": "getTreeLock", "method_sig": "protected final Object getTreeLock()", "description": "Gets this component's locking object (the object that owns the thread\n synchronization monitor) for AWT component-tree and layout\n operations."}, {"method_name": "getAccessibleContext", "method_sig": "public AccessibleContext getAccessibleContext()", "description": "Gets the AccessibleContext associated with\n this MenuComponent.\n\n The method implemented by this base class returns null.\n Classes that extend MenuComponent\n should implement this method to return the\n AccessibleContext associated with the subclass."}]}