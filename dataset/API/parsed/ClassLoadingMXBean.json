{"name": "Interface ClassLoadingMXBean", "module": "java.management", "package": "java.lang.management", "text": "The management interface for the class loading system of\n the Java virtual machine.\n\n  A Java virtual machine has a single instance of the implementation\n class of this interface.  This instance implementing this interface is\n an MXBean\n that can be obtained by calling\n the ManagementFactory.getClassLoadingMXBean() method or\n from the platform MBeanServer.\n\n The ObjectName for uniquely identifying the MXBean for\n the class loading system within an MBeanServer is:\n \njava.lang:type=ClassLoading\n\n\n It can be obtained by calling the\n PlatformManagedObject.getObjectName() method.", "codes": ["public interface ClassLoadingMXBean\nextends PlatformManagedObject"], "fields": [], "methods": [{"method_name": "getTotalLoadedClassCount", "method_sig": "long getTotalLoadedClassCount()", "description": "Returns the total number of classes that have been loaded since\n the Java virtual machine has started execution."}, {"method_name": "getLoadedClassCount", "method_sig": "int getLoadedClassCount()", "description": "Returns the number of classes that are currently loaded in the\n Java virtual machine."}, {"method_name": "getUnloadedClassCount", "method_sig": "long getUnloadedClassCount()", "description": "Returns the total number of classes unloaded since the Java virtual machine\n has started execution."}, {"method_name": "isVerbose", "method_sig": "boolean isVerbose()", "description": "Tests if the verbose output for the class loading system is enabled."}, {"method_name": "setVerbose", "method_sig": "void setVerbose (boolean value)", "description": "Enables or disables the verbose output for the class loading\n system.  The verbose output information and the output stream\n to which the verbose information is emitted are implementation\n dependent.  Typically, a Java virtual machine implementation\n prints a message each time a class file is loaded.\n\n This method can be called by multiple threads concurrently.\n Each invocation of this method enables or disables the verbose\n output globally."}]}