{"name": "Class AccessControlContext", "module": "java.base", "package": "java.security", "text": "An AccessControlContext is used to make system resource access decisions\n based on the context it encapsulates.\n\n More specifically, it encapsulates a context and\n has a single method, checkPermission,\n that is equivalent to the checkPermission method\n in the AccessController class, with one difference: The AccessControlContext\n checkPermission method makes access decisions based on the\n context it encapsulates,\n rather than that of the current execution thread.\n\n Thus, the purpose of AccessControlContext is for those situations where\n a security check that should be made within a given context\n actually needs to be done from within a\n different context (for example, from within a worker thread).\n\n  An AccessControlContext is created by calling the\n AccessController.getContext method.\n The getContext method takes a \"snapshot\"\n of the current calling context, and places\n it in an AccessControlContext object, which it returns. A sample call is\n the following:\n\n \n   AccessControlContext acc = AccessController.getContext()\n \n\n Code within a different context can subsequently call the\n checkPermission method on the\n previously-saved AccessControlContext object. A sample call is the\n following:\n\n \n   acc.checkPermission(permission)\n ", "codes": ["public final class AccessControlContext\nextends Object"], "fields": [], "methods": [{"method_name": "getDomainCombiner", "method_sig": "public DomainCombiner getDomainCombiner()", "description": "Get the DomainCombiner associated with this\n AccessControlContext."}, {"method_name": "checkPermission", "method_sig": "public void checkPermission (Permission perm)\n                     throws AccessControlException", "description": "Determines whether the access request indicated by the\n specified permission should be allowed or denied, based on\n the security policy currently in effect, and the context in\n this object. The request is allowed only if every ProtectionDomain\n in the context implies the permission. Otherwise the request is\n denied.\n\n \n This method quietly returns if the access request\n is permitted, or throws a suitable AccessControlException otherwise."}, {"method_name": "equals", "method_sig": "public boolean equals (Object obj)", "description": "Checks two AccessControlContext objects for equality.\n Checks that obj is\n an AccessControlContext and has the same set of ProtectionDomains\n as this context."}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Returns the hash code value for this context. The hash code\n is computed by exclusive or-ing the hash code of all the protection\n domains in the context together."}]}