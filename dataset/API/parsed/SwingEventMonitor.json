{"name": "Class SwingEventMonitor", "module": "jdk.accessibility", "package": "com.sun.java.accessibility.util", "text": "SwingEventMonitor extends AWTEventMonitor by adding a suite of\n listeners conditionally installed on every Swing component instance\n in the Java Virtual Machine.  The events captured by these listeners\n are made available through a unified set of listeners supported by\n SwingEventMonitor.  With this, all the individual events on each of the\n AWT and Swing component instances are funneled into one set of listeners\n broken down by category (see EventID for the categories).\n This class depends upon EventQueueMonitor, which provides the base\n level support for capturing the top-level containers as they are created.\n Because this class extends AWTEventMonitor, it is not\n necessary to use this class and AWTEventMonitor at the same time.\n If you want to monitor both AWT and Swing components, you should\n use just this class.", "codes": ["public class SwingEventMonitor\nextends AWTEventMonitor"], "fields": [{"field_name": "listenerList", "field_sig": "protected static final\u00a0EventListenerList listenerList", "description": "The master list of all listeners registered by other classes.\n This can only be publicly modified by calling the add or\n remove listener methods in this class."}], "methods": [{"method_name": "addAncestorListener", "method_sig": "public static void addAncestorListener (AncestorListener l)", "description": "Adds the specified listener to receive all ANCESTOR\n events on each component instance in the Java Virtual Machine as they occur.\n Note: This listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeAncestorListener", "method_sig": "public static void removeAncestorListener (AncestorListener l)", "description": "Removes the specified listener so it no longer receives\n ANCESTOR events when they occur."}, {"method_name": "addCaretListener", "method_sig": "public static void addCaretListener (CaretListener l)", "description": "Adds the specified listener to receive all CARET events\n on each component instance in the Java Virtual Machine as they occur.\n Note: This listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeCaretListener", "method_sig": "public static void removeCaretListener (CaretListener l)", "description": "Removes the specified listener so it no longer receives\n CARET events when they occur."}, {"method_name": "addCellEditorListener", "method_sig": "public static void addCellEditorListener (CellEditorListener l)", "description": "Adds the specified listener to receive all\n CELLEDITOR events on each\n component instance in the Java Virtual Machine as they occur.\n Note: This listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeCellEditorListener", "method_sig": "public static void removeCellEditorListener (CellEditorListener l)", "description": "Removes the specified listener so it no longer receives\n CELLEDITOR events when they occur."}, {"method_name": "addChangeListener", "method_sig": "public static void addChangeListener (ChangeListener l)", "description": "Adds the specified listener to receive all CHANGE\n events on each component instance in the Java Virtual Machine as they occur.\n Note: This listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeChangeListener", "method_sig": "public static void removeChangeListener (ChangeListener l)", "description": "Removes the specified listener so it no longer receives\n CHANGE events when they occur."}, {"method_name": "addColumnModelListener", "method_sig": "public static void addColumnModelListener (TableColumnModelListener l)", "description": "Adds the specified listener to receive all COLUMNMODEL\n events on each component instance in the Java Virtual Machine as they occur.\n Note: This listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeColumnModelListener", "method_sig": "public static void removeColumnModelListener (TableColumnModelListener l)", "description": "Removes the specified listener so it no longer receives\n COLUMNMODEL events when they occur."}, {"method_name": "addDocumentListener", "method_sig": "public static void addDocumentListener (DocumentListener l)", "description": "Adds the specified listener to receive all DOCUMENT\n events on each component instance in the Java Virtual Machine as they occur.\n Note: This listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeDocumentListener", "method_sig": "public static void removeDocumentListener (DocumentListener l)", "description": "Removes the specified listener so it no longer receives\n DOCUMENT events when they occur."}, {"method_name": "addListDataListener", "method_sig": "public static void addListDataListener (ListDataListener l)", "description": "Adds the specified listener to receive all LISTDATA\n events on each component instance in the Java Virtual Machine as they occur.\n Note: This listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeListDataListener", "method_sig": "public static void removeListDataListener (ListDataListener l)", "description": "Removes the specified listener so it no longer receives\n LISTDATA events when they occur."}, {"method_name": "addListSelectionListener", "method_sig": "public static void addListSelectionListener (ListSelectionListener l)", "description": "Adds the specified listener to receive all LISTSELECTION\n events on each component instance in the Java Virtual Machine as they occur.\n Note: This listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeListSelectionListener", "method_sig": "public static void removeListSelectionListener (ListSelectionListener l)", "description": "Removes the specified listener so it no longer receives\n LISTSELECTION events when they occur."}, {"method_name": "addMenuListener", "method_sig": "public static void addMenuListener (MenuListener l)", "description": "Adds the specified listener to receive all MENU events\n on each component instance in the Java Virtual Machine as they occur.\n Note: This listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeMenuListener", "method_sig": "public static void removeMenuListener (MenuListener l)", "description": "Removes the specified listener so it no longer receives\n MENU events when they occur."}, {"method_name": "addPopupMenuListener", "method_sig": "public static void addPopupMenuListener (PopupMenuListener l)", "description": "Adds the specified listener to receive all POPUPMENU\n events on each component instance in the Java Virtual Machine as they occur.\n Note: This listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removePopupMenuListener", "method_sig": "public static void removePopupMenuListener (PopupMenuListener l)", "description": "Removes the specified listener so it no longer receives\n POPUPMENU events when they occur."}, {"method_name": "addTableModelListener", "method_sig": "public static void addTableModelListener (TableModelListener l)", "description": "Adds the specified listener to receive all TABLEMODEL\n events on each component instance in the Java Virtual Machine as they occur.\n Note: This listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeTableModelListener", "method_sig": "public static void removeTableModelListener (TableModelListener l)", "description": "Removes the specified listener so it no longer receives\n TABLEMODEL events when they occur."}, {"method_name": "addTreeExpansionListener", "method_sig": "public static void addTreeExpansionListener (TreeExpansionListener l)", "description": "Adds the specified listener to receive all TREEEXPANSION\n events on each component instance in the Java Virtual Machine as they occur.\n Note: This listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeTreeExpansionListener", "method_sig": "public static void removeTreeExpansionListener (TreeExpansionListener l)", "description": "Removes the specified listener so it no longer receives\n TREEEXPANSION events when they occur."}, {"method_name": "addTreeModelListener", "method_sig": "public static void addTreeModelListener (TreeModelListener l)", "description": "Adds the specified listener to receive all TREEMODEL\n events on each component instance in the Java Virtual Machine as they occur.\n Note: This listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeTreeModelListener", "method_sig": "public static void removeTreeModelListener (TreeModelListener l)", "description": "Removes the specified listener so it no longer receives\n TREEMODEL events when they occur."}, {"method_name": "addTreeSelectionListener", "method_sig": "public static void addTreeSelectionListener (TreeSelectionListener l)", "description": "Adds the specified listener to receive all TREESELECTION\n events on each component instance in the Java Virtual Machine as they occur.\n Note: This listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeTreeSelectionListener", "method_sig": "public static void removeTreeSelectionListener (TreeSelectionListener l)", "description": "Removes the specified listener so it no longer receives\n TREESELECTION events when they occur."}, {"method_name": "addUndoableEditListener", "method_sig": "public static void addUndoableEditListener (UndoableEditListener l)", "description": "Adds the specified listener to receive all UNDOABLEEDIT\n events on each component instance in the Java Virtual Machine as they occur.\n Note: This listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeUndoableEditListener", "method_sig": "public static void removeUndoableEditListener (UndoableEditListener l)", "description": "Removes the specified listener so it no longer receives\n UNDOABLEEDIT events when they occur."}, {"method_name": "addInternalFrameListener", "method_sig": "public static void addInternalFrameListener (InternalFrameListener l)", "description": "Adds the specified listener to receive all INTERNALFRAME\n events on each component instance in the Java Virtual Machine as they occur.\n Note: This listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeInternalFrameListener", "method_sig": "public static void removeInternalFrameListener (InternalFrameListener l)", "description": "Removes the specified listener so it no longer receives\n INTERNALFRAME events when they occur."}, {"method_name": "addPropertyChangeListener", "method_sig": "public static void addPropertyChangeListener (PropertyChangeListener l)", "description": "Adds the specified listener to receive all PROPERTYCHANGE\n events on each component instance in the Java Virtual Machine as they occur.\n Note: This listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removePropertyChangeListener", "method_sig": "public static void removePropertyChangeListener (PropertyChangeListener l)", "description": "Removes the specified listener so it no longer receives\n PROPERTYCHANGE events when they occur."}, {"method_name": "addVetoableChangeListener", "method_sig": "public static void addVetoableChangeListener (VetoableChangeListener l)", "description": "Adds the specified listener to receive all VETOABLECHANGE\n events on each component instance in the Java Virtual Machine as they occur.\n Note: This listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeVetoableChangeListener", "method_sig": "public static void removeVetoableChangeListener (VetoableChangeListener l)", "description": "Removes the specified listener so it no longer receives\n VETOABLECHANGE events when they occur."}]}