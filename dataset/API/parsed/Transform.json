{"name": "Interface Transform", "module": "java.xml.crypto", "package": "javax.xml.crypto.dsig", "text": "A representation of the XML Transform element as\n defined in the \n W3C Recommendation for XML-Signature Syntax and Processing.\n The XML Schema Definition is defined as:\n\n \n <element name=\"Transform\" type=\"ds:TransformType\"/>\n   <complexType name=\"TransformType\" mixed=\"true\">\n     <choice minOccurs=\"0\" maxOccurs=\"unbounded\">\n       <any namespace=\"##other\" processContents=\"lax\"/>\n       <!-- (1,1) elements from (0,unbounded) namespaces -->\n       <element name=\"XPath\" type=\"string\"/>\n     </choice>\n     <attribute name=\"Algorithm\" type=\"anyURI\" use=\"required\"/>\n   </complexType>\n \n\n A Transform instance may be created by invoking the\n newTransform method\n of the XMLSignatureFactory class.", "codes": ["public interface Transform\nextends XMLStructure, AlgorithmMethod"], "fields": [{"field_name": "BASE64", "field_sig": "static final\u00a0String BASE64", "description": "The Base64\n transform algorithm URI."}, {"field_name": "ENVELOPED", "field_sig": "static final\u00a0String ENVELOPED", "description": "The \n Enveloped Signature transform algorithm URI."}, {"field_name": "XPATH", "field_sig": "static final\u00a0String XPATH", "description": "The XPath\n transform algorithm URI."}, {"field_name": "XPATH2", "field_sig": "static final\u00a0String XPATH2", "description": "The \n XPath Filter 2 transform algorithm URI."}, {"field_name": "XSLT", "field_sig": "static final\u00a0String XSLT", "description": "The XSLT\n transform algorithm URI."}], "methods": [{"method_name": "getParameterSpec", "method_sig": "AlgorithmParameterSpec getParameterSpec()", "description": "Returns the algorithm-specific input parameters associated with this\n Transform.\n \n The returned parameters can be typecast to a\n TransformParameterSpec object."}, {"method_name": "transform", "method_sig": "Data transform (Data data,\n               XMLCryptoContext context)\n        throws TransformException", "description": "Transforms the specified data using the underlying transform algorithm."}, {"method_name": "transform", "method_sig": "Data transform (Data data,\n               XMLCryptoContext context,\n               OutputStream os)\n        throws TransformException", "description": "Transforms the specified data using the underlying transform algorithm.\n If the output of this transform is an OctetStreamData, then\n this method returns null and the bytes are written to the\n specified OutputStream. Otherwise, the\n OutputStream is ignored and the method behaves as if\n transform(Data, XMLCryptoContext) were invoked."}]}