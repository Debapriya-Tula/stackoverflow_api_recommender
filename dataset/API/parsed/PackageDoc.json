{"name": "Interface PackageDoc", "module": "jdk.javadoc", "package": "com.sun.javadoc", "text": "Represents a java package.  Provides access to information\n about the package, the package's comment and tags, and the\n classes in the package.\n \n Each method whose return type is an array will return an empty\n array (never null) when there are no objects in the result.", "codes": ["@Deprecated(since=\"9\",\n            forRemoval=true)\npublic interface PackageDoc\nextends Doc"], "fields": [], "methods": [{"method_name": "allClasses", "method_sig": "ClassDoc[] allClasses (boolean filter)", "description": "Get all classes and interfaces in the package, filtered to the specified\n access\n modifier option."}, {"method_name": "allClasses", "method_sig": "ClassDoc[] allClasses()", "description": "Get all\n included\n classes and interfaces in the package.  Same as allClasses(true)."}, {"method_name": "ordinaryClasses", "method_sig": "ClassDoc[] ordinaryClasses()", "description": "Get included\n ordinary\n classes (that is, exclude exceptions, errors, enums, interfaces, and\n annotation types)\n in this package."}, {"method_name": "exceptions", "method_sig": "ClassDoc[] exceptions()", "description": "Get included Exception classes in this package."}, {"method_name": "errors", "method_sig": "ClassDoc[] errors()", "description": "Get included Error classes in this package."}, {"method_name": "enums", "method_sig": "ClassDoc[] enums()", "description": "Get included enum types in this package."}, {"method_name": "interfaces", "method_sig": "ClassDoc[] interfaces()", "description": "Get included interfaces in this package, omitting annotation types."}, {"method_name": "annotationTypes", "method_sig": "AnnotationTypeDoc[] annotationTypes()", "description": "Get included annotation types in this package."}, {"method_name": "annotations", "method_sig": "AnnotationDesc[] annotations()", "description": "Get the annotations of this package.\n Return an empty array if there are none."}, {"method_name": "findClass", "method_sig": "ClassDoc findClass (String className)", "description": "Lookup a class or interface within this package."}]}