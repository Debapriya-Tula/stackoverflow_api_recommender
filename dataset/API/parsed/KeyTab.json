{"name": "Class KeyTab", "module": "java.security.jgss", "package": "javax.security.auth.kerberos", "text": "This class encapsulates a keytab file.\n \n A Kerberos JAAS login module that obtains long term secret keys from a\n keytab file should use this class. The login module will store\n an instance of this class in the private credential set of a\n Subject during the commit phase of the\n authentication process.\n \n If a KeyTab object is obtained from getUnboundInstance()\n or getUnboundInstance(java.io.File), it is unbound and thus can be\n used by any service principal. Otherwise, if it's obtained from\n getInstance(KerberosPrincipal) or\n getInstance(KerberosPrincipal, java.io.File), it is bound to the\n specific service principal and can only be used by it.\n \n Please note the constructors getInstance() and\n getInstance(java.io.File) were created when there was no support\n for unbound keytabs. These methods should not be used anymore. An object\n created with either of these methods are considered to be bound to an\n unknown principal, which means, its isBound() returns true and\n getPrincipal() returns null.\n \n It might be necessary for the application to be granted a\n PrivateCredentialPermission if it needs to access the KeyTab\n instance from a Subject. This permission is not needed when the\n application depends on the default JGSS Kerberos mechanism to access the\n KeyTab. In that case, however, the application will need an appropriate\n ServicePermission.\n \n The keytab file format is described at\n \n http://www.ioplex.com/utilities/keytab.txt.", "codes": ["public final class KeyTab\nextends Object"], "fields": [], "methods": [{"method_name": "getInstance", "method_sig": "public static KeyTab getInstance (File file)", "description": "Returns a KeyTab instance from a File object\n that is bound to an unknown service principal.\n \n The result of this method is never null. This method only associates\n the returned KeyTab object with the file and does not read it.\n \n Developers should call getInstance(KerberosPrincipal,File)\n when the bound service principal is known."}, {"method_name": "getUnboundInstance", "method_sig": "public static KeyTab getUnboundInstance (File file)", "description": "Returns an unbound KeyTab instance from a File\n object.\n \n The result of this method is never null. This method only associates\n the returned KeyTab object with the file and does not read it."}, {"method_name": "getInstance", "method_sig": "public static KeyTab getInstance (KerberosPrincipal princ,\n                                 File file)", "description": "Returns a KeyTab instance from a File object\n that is bound to the specified service principal.\n \n The result of this method is never null. This method only associates\n the returned KeyTab object with the file and does not read it."}, {"method_name": "getInstance", "method_sig": "public static KeyTab getInstance()", "description": "Returns the default KeyTab instance that is bound\n to an unknown service principal.\n \n The result of this method is never null. This method only associates\n the returned KeyTab object with the default keytab file and\n does not read it.\n \n Developers should call getInstance(KerberosPrincipal)\n when the bound service principal is known."}, {"method_name": "getUnboundInstance", "method_sig": "public static KeyTab getUnboundInstance()", "description": "Returns the default unbound KeyTab instance.\n \n The result of this method is never null. This method only associates\n the returned KeyTab object with the default keytab file and\n does not read it."}, {"method_name": "getInstance", "method_sig": "public static KeyTab getInstance (KerberosPrincipal princ)", "description": "Returns the default KeyTab instance that is bound\n to the specified service principal.\n \n The result of this method is never null. This method only associates\n the returned KeyTab object with the default keytab file and\n does not read it."}, {"method_name": "getKeys", "method_sig": "public KerberosKey[] getKeys (KerberosPrincipal principal)", "description": "Returns fresh keys for the given Kerberos principal.\n \n Implementation of this method should make sure the returned keys match\n the latest content of the keytab file. The result is a newly created\n copy that can be modified by the caller without modifying the keytab\n object. The caller should destroy the\n result keys after they are used.\n \n Please note that the keytab file can be created after the\n KeyTab object is instantiated and its content may change over\n time. Therefore, an application should call this method only when it\n needs to use the keys. Any previous result from an earlier invocation\n could potentially be expired.\n \n If there is any error (say, I/O error or format error)\n during the reading process of the keytab file, a saved result should be\n returned. If there is no saved result (say, this is the first time this\n method is called, or, all previous read attempts failed), an empty array\n should be returned. This can make sure the result is not drastically\n changed during the (probably slow) update of the keytab file.\n \n Each time this method is called and the reading of the file succeeds\n with no exception (say, I/O error or file format error),\n the result should be saved for principal. The implementation can\n also save keys for other principals having keys in the same keytab object\n if convenient.\n \n Any unsupported key read from the keytab is ignored and not included\n in the result.\n \n If this keytab is bound to a specific principal, calling this method on\n another principal will return an empty array."}, {"method_name": "exists", "method_sig": "public boolean exists()", "description": "Checks if the keytab file exists. Implementation of this method\n should make sure that the result matches the latest status of the\n keytab file.\n \n The caller can use the result to determine if it should fallback to\n another mechanism to read the keys."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns an informative textual representation of this KeyTab."}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Returns a hash code for this KeyTab."}, {"method_name": "equals", "method_sig": "public boolean equals (Object other)", "description": "Compares the specified object with this KeyTab for equality.\n Returns true if the given object is also a\n KeyTab and the two\n KeyTab instances are equivalent."}, {"method_name": "getPrincipal", "method_sig": "public KerberosPrincipal getPrincipal()", "description": "Returns the service principal this KeyTab object\n is bound to. Returns null if it's not bound.\n \n Please note the deprecated constructors create a KeyTab object\n bound for some unknown principal. In this case, this method also returns\n null. User can call isBound() to verify this case."}, {"method_name": "isBound", "method_sig": "public boolean isBound()", "description": "Returns if the keytab is bound to a principal"}]}