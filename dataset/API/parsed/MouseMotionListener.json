{"name": "Interface MouseMotionListener", "module": "java.desktop", "package": "java.awt.event", "text": "The listener interface for receiving mouse motion events on a component.\n (For clicks and other mouse events, use the MouseListener.)\n \n The class that is interested in processing a mouse motion event\n either implements this interface (and all the methods it\n contains) or extends the abstract MouseMotionAdapter class\n (overriding only the methods of interest).\n \n The listener object created from that class is then registered with a\n component using the component's addMouseMotionListener\n method. A mouse motion event is generated when the mouse is moved\n or dragged. (Many such events will be generated). When a mouse motion event\n occurs, the relevant method in the listener object is invoked, and\n the MouseEvent is passed to it.", "codes": ["public interface MouseMotionListener\nextends EventListener"], "fields": [], "methods": [{"method_name": "mouseDragged", "method_sig": "void mouseDragged (MouseEvent e)", "description": "Invoked when a mouse button is pressed on a component and then\n dragged.  MOUSE_DRAGGED events will continue to be\n delivered to the component where the drag originated until the\n mouse button is released (regardless of whether the mouse position\n is within the bounds of the component).\n \n Due to platform-dependent Drag&Drop implementations,\n MOUSE_DRAGGED events may not be delivered during a native\n Drag&Drop operation."}, {"method_name": "mouseMoved", "method_sig": "void mouseMoved (MouseEvent e)", "description": "Invoked when the mouse cursor has been moved onto a component\n but no buttons have been pushed."}]}