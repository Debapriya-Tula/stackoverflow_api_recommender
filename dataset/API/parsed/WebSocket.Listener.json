{"name": "Interface WebSocket.Listener", "module": "java.net.http", "package": "java.net.http", "text": "The receiving interface of WebSocket.\n\n  A WebSocket invokes methods of the associated listener\n passing itself as an argument. These methods are invoked in a thread-safe\n manner, such that the next invocation may start only after the previous\n one has finished.\n\n  When data has been received, the WebSocket invokes a receive\n method. Methods onText, onBinary, onPing and\n onPong must return a CompletionStage that completes once\n the message has been received by the listener. If a listener's method\n returns null rather than a CompletionStage,\n WebSocket will behave as if the listener returned a\n CompletionStage that is already completed normally.\n\n  An IOException raised in WebSocket will result in an\n invocation of onError with that exception (if the input is not\n closed). Unless otherwise stated if the listener's method throws an\n exception or a CompletionStage returned from a method completes\n exceptionally, the WebSocket will invoke onError with this\n exception.", "codes": ["public static interface WebSocket.Listener"], "fields": [], "methods": [{"method_name": "onOpen", "method_sig": "default void onOpen (WebSocket webSocket)", "description": "A WebSocket has been connected.\n\n  This is the initial invocation and it is made once. It is\n typically used to make a request for more invocations."}, {"method_name": "onText", "method_sig": "default CompletionStage<?> onText (WebSocket webSocket,\n                                  CharSequence data,\n                                  boolean last)", "description": "A textual data has been received.\n\n  Return a CompletionStage which will be used by the\n WebSocket as an indication it may reclaim the\n CharSequence. Do not access the CharSequence after\n this CompletionStage has completed."}, {"method_name": "onBinary", "method_sig": "default CompletionStage<?> onBinary (WebSocket webSocket,\n                                    ByteBuffer data,\n                                    boolean last)", "description": "A binary data has been received.\n\n  This data is located in bytes from the buffer's position to its\n limit.\n\n  Return a CompletionStage which will be used by the\n WebSocket as an indication it may reclaim the\n ByteBuffer. Do not access the ByteBuffer after\n this CompletionStage has completed."}, {"method_name": "onPing", "method_sig": "default CompletionStage<?> onPing (WebSocket webSocket,\n                                  ByteBuffer message)", "description": "A Ping message has been received.\n\n  As guaranteed by the WebSocket Protocol, the message consists of\n not more than 125 bytes. These bytes are located from the\n buffer's position to its limit.\n\n  Given that the WebSocket implementation will automatically send a\n reciprocal pong when a ping is received, it is rarely required to\n send a pong message explicitly when a ping is received.\n\n  Return a CompletionStage which will be used by the\n WebSocket as a signal it may reclaim the\n ByteBuffer. Do not access the ByteBuffer after\n this CompletionStage has completed."}, {"method_name": "onPong", "method_sig": "default CompletionStage<?> onPong (WebSocket webSocket,\n                                  ByteBuffer message)", "description": "A Pong message has been received.\n\n  As guaranteed by the WebSocket Protocol, the message consists of\n not more than 125 bytes. These bytes are located from the\n buffer's position to its limit.\n\n  Return a CompletionStage which will be used by the\n WebSocket as a signal it may reclaim the\n ByteBuffer. Do not access the ByteBuffer after\n this CompletionStage has completed."}, {"method_name": "onClose", "method_sig": "default CompletionStage<?> onClose (WebSocket webSocket,\n                                   int statusCode,\n                                   String reason)", "description": "Receives a Close message indicating the WebSocket's input has been\n closed.\n\n  This is the last invocation from the specified WebSocket.\n By the time this invocation begins the WebSocket's input will have\n been closed.\n\n  A Close message consists of a status code and a reason for\n closing. The status code is an integer from the range\n 1000 <= code <= 65535. The reason is a string which\n has a UTF-8 representation not longer than 123 bytes.\n\n  If the WebSocket's output is not already closed, the\n CompletionStage returned by this method will be used as an\n indication that the WebSocket's output may be closed. The WebSocket\n will close its output at the earliest of completion of the returned\n CompletionStage or invoking either of the sendClose\n or abort methods."}, {"method_name": "onError", "method_sig": "default void onError (WebSocket webSocket,\n                     Throwable error)", "description": "An error has occurred.\n\n  This is the last invocation from the specified WebSocket. By the\n time this invocation begins both the WebSocket's input and output\n will have been closed. A WebSocket may invoke this method on the\n associated listener at any time after it has invoked onOpen,\n regardless of whether or not any invocations have been requested from\n the WebSocket.\n\n  If an exception is thrown from this method, resulting behavior is\n undefined."}]}