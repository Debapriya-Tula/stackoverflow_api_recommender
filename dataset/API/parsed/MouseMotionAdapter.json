{"name": "Class MouseMotionAdapter", "module": "java.desktop", "package": "java.awt.event", "text": "An abstract adapter class for receiving mouse motion events.\n The methods in this class are empty. This class exists as\n convenience for creating listener objects.\n \n Mouse motion events occur when a mouse is moved or dragged.\n (Many such events will be generated in a normal program.\n To track clicks and other mouse events, use the MouseAdapter.)\n \n Extend this class to create a MouseEvent listener\n and override the methods for the events of interest. (If you implement the\n MouseMotionListener interface, you have to define all of\n the methods in it. This abstract class defines null methods for them\n all, so you can only have to define methods for events you care about.)\n \n Create a listener object using the extended class and then register it with\n a component using the component's addMouseMotionListener\n method. When the mouse is moved or dragged, the relevant method in the\n listener object is invoked and the MouseEvent is passed to it.", "codes": ["public abstract class MouseMotionAdapter\nextends Object\nimplements MouseMotionListener"], "fields": [], "methods": [{"method_name": "mouseDragged", "method_sig": "public void mouseDragged (MouseEvent e)", "description": "Invoked when a mouse button is pressed on a component and then\n dragged.  Mouse drag events will continue to be delivered to\n the component where the first originated until the mouse button is\n released (regardless of whether the mouse position is within the\n bounds of the component)."}, {"method_name": "mouseMoved", "method_sig": "public void mouseMoved (MouseEvent e)", "description": "Invoked when the mouse button has been moved on a component\n (with no buttons no down)."}]}