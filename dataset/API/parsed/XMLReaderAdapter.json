{"name": "Class XMLReaderAdapter", "module": "java.xml", "package": "org.xml.sax.helpers", "text": "Adapt a SAX2 XMLReader as a SAX1 Parser.\n\n \nThis module, both source code and documentation, is in the\n Public Domain, and comes with NO WARRANTY.\n See http://www.saxproject.org\n for further information.\n \nThis class wraps a SAX2 XMLReader\n and makes it act as a SAX1 Parser.  The XMLReader\n must support a true value for the\n http://xml.org/sax/features/namespace-prefixes property or parsing will fail\n with a SAXException; if the XMLReader\n supports a false value for the http://xml.org/sax/features/namespaces\n property, that will also be used to improve efficiency.", "codes": ["public class XMLReaderAdapter\nextends Object\nimplements Parser, ContentHandler"], "fields": [], "methods": [{"method_name": "setLocale", "method_sig": "public void setLocale (Locale locale)\n               throws SAXException", "description": "Set the locale for error reporting.\n\n This is not supported in SAX2, and will always throw\n an exception."}, {"method_name": "setEntityResolver", "method_sig": "public void setEntityResolver (EntityResolver resolver)", "description": "Register the entity resolver."}, {"method_name": "setDTDHandler", "method_sig": "public void setDTDHandler (DTDHandler handler)", "description": "Register the DTD event handler."}, {"method_name": "setDocumentHandler", "method_sig": "public void setDocumentHandler (DocumentHandler handler)", "description": "Register the SAX1 document event handler.\n\n Note that the SAX1 document handler has no Namespace\n support."}, {"method_name": "setErrorHandler", "method_sig": "public void setErrorHandler (ErrorHandler handler)", "description": "Register the error event handler."}, {"method_name": "parse", "method_sig": "public void parse (String systemId)\n           throws IOException,\n                  SAXException", "description": "Parse the document.\n\n This method will throw an exception if the embedded\n XMLReader does not support the\n http://xml.org/sax/features/namespace-prefixes property."}, {"method_name": "parse", "method_sig": "public void parse (InputSource input)\n           throws IOException,\n                  SAXException", "description": "Parse the document.\n\n This method will throw an exception if the embedded\n XMLReader does not support the\n http://xml.org/sax/features/namespace-prefixes property."}, {"method_name": "setDocumentLocator", "method_sig": "public void setDocumentLocator (Locator locator)", "description": "Set a document locator."}, {"method_name": "startDocument", "method_sig": "public void startDocument()\n                   throws SAXException", "description": "Start document event."}, {"method_name": "endDocument", "method_sig": "public void endDocument()\n                 throws SAXException", "description": "End document event."}, {"method_name": "startPrefixMapping", "method_sig": "public void startPrefixMapping (String prefix,\n                               String uri)", "description": "Adapt a SAX2 start prefix mapping event."}, {"method_name": "endPrefixMapping", "method_sig": "public void endPrefixMapping (String prefix)", "description": "Adapt a SAX2 end prefix mapping event."}, {"method_name": "startElement", "method_sig": "public void startElement (String uri,\n                         String localName,\n                         String qName,\n                         Attributes atts)\n                  throws SAXException", "description": "Adapt a SAX2 start element event."}, {"method_name": "endElement", "method_sig": "public void endElement (String uri,\n                       String localName,\n                       String qName)\n                throws SAXException", "description": "Adapt a SAX2 end element event."}, {"method_name": "characters", "method_sig": "public void characters (char[] ch,\n                       int start,\n                       int length)\n                throws SAXException", "description": "Adapt a SAX2 characters event."}, {"method_name": "ignorableWhitespace", "method_sig": "public void ignorableWhitespace (char[] ch,\n                                int start,\n                                int length)\n                         throws SAXException", "description": "Adapt a SAX2 ignorable whitespace event."}, {"method_name": "processingInstruction", "method_sig": "public void processingInstruction (String target,\n                                  String data)\n                           throws SAXException", "description": "Adapt a SAX2 processing instruction event."}, {"method_name": "skippedEntity", "method_sig": "public void skippedEntity (String name)\n                   throws SAXException", "description": "Adapt a SAX2 skipped entity event."}]}