{"name": "Interface ResourceBundleControlProvider", "module": "java.base", "package": "java.util.spi", "text": "An interface for service providers that provide implementations of ResourceBundle.Control. The default resource bundle loading\n behavior of the ResourceBundle.getBundle factory methods that take\n no ResourceBundle.Control instance can be modified with \n ResourceBundleControlProvider implementations.\n\n Provider implementations are loaded from the application's class path\n using ServiceLoader at the first invocation of the\n ResourceBundle.getBundle factory method that takes no\n ResourceBundle.Control instance.\n\n All ResourceBundleControlProviders are ignored in named modules.", "codes": ["public interface ResourceBundleControlProvider"], "fields": [], "methods": [{"method_name": "getControl", "method_sig": "ResourceBundle.Control getControl (String baseName)", "description": "Returns a ResourceBundle.Control instance that is used\n to handle resource bundle loading for the given \n baseName. This method must return null if the given\n baseName isn't handled by this provider."}]}