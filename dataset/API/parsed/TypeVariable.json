{"name": "Interface TypeVariable", "module": "java.compiler", "package": "javax.lang.model.type", "text": "Represents a type variable.\n A type variable may be explicitly declared by a\n type parameter of a\n type, method, or constructor.\n A type variable may also be declared implicitly, as by\n the capture conversion of a wildcard type argument\n (see chapter 5 of\n The Java\u2122 Language Specification).", "codes": ["public interface TypeVariable\nextends ReferenceType"], "fields": [], "methods": [{"method_name": "asElement", "method_sig": "Element asElement()", "description": "Returns the element corresponding to this type variable."}, {"method_name": "getUpperBound", "method_sig": "TypeMirror getUpperBound()", "description": "Returns the upper bound of this type variable.\n\n  If this type variable was declared with no explicit\n upper bounds, the result is java.lang.Object.\n If it was declared with multiple upper bounds,\n the result is an intersection type;\n individual bounds can be found by examining the result's\n bounds."}, {"method_name": "getLowerBound", "method_sig": "TypeMirror getLowerBound()", "description": "Returns the lower bound of this type variable.  While a type\n parameter cannot include an explicit lower bound declaration,\n capture conversion can produce a type variable with a\n non-trivial lower bound.  Type variables otherwise have a\n lower bound of NullType."}]}