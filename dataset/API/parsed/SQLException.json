{"name": "Class SQLException", "module": "java.sql", "package": "java.sql", "text": "An exception that provides information on a database access\n error or other errors.\n\n Each SQLException provides several kinds of information:\n \n a string describing the error.  This is used as the Java Exception\n       message, available via the method getMessage.\n    a \"SQLstate\" string, which follows either the XOPEN SQLstate conventions\n        or the SQL:2003 conventions.\n       The values of the SQLState string are described in the appropriate spec.\n       The DatabaseMetaData method getSQLStateType\n       can be used to discover whether the driver returns the XOPEN type or\n       the SQL:2003 type.\n    an integer error code that is specific to each vendor.  Normally this will\n       be the actual error code returned by the underlying database.\n    a chain to a next Exception.  This can be used to provide additional\n       error information.\n    the causal relationship, if any for this SQLException.\n ", "codes": ["public class SQLException\nextends Exception\nimplements Iterable<Throwable>"], "fields": [], "methods": [{"method_name": "getSQLState", "method_sig": "public String getSQLState()", "description": "Retrieves the SQLState for this SQLException object."}, {"method_name": "getErrorCode", "method_sig": "public int getErrorCode()", "description": "Retrieves the vendor-specific exception code\n for this SQLException object."}, {"method_name": "getNextException", "method_sig": "public SQLException getNextException()", "description": "Retrieves the exception chained to this\n SQLException object by setNextException(SQLException ex)."}, {"method_name": "setNextException", "method_sig": "public void setNextException (SQLException ex)", "description": "Adds an SQLException object to the end of the chain."}, {"method_name": "iterator", "method_sig": "public Iterator<Throwable> iterator()", "description": "Returns an iterator over the chained SQLExceptions.  The iterator will\n be used to iterate over each SQLException and its underlying cause\n (if any)."}]}