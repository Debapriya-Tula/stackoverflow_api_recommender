{"name": "Interface NodeIterator", "module": "java.xml", "package": "org.w3c.dom.traversal", "text": "NodeIterators are used to step through a set of nodes, e.g.\n the set of nodes in a NodeList, the document subtree\n governed by a particular Node, the results of a query, or\n any other set of nodes. The set of nodes to be iterated is determined by\n the implementation of the NodeIterator. DOM Level 2\n specifies a single NodeIterator implementation for\n document-order traversal of a document subtree. Instances of these\n NodeIterators are created by calling\n DocumentTraversal.createNodeIterator().\n See also the Document Object Model (DOM) Level 2 Traversal and Range Specification.", "codes": ["public interface NodeIterator"], "fields": [], "methods": [{"method_name": "getRoot", "method_sig": "Node getRoot()", "description": "The root node of the NodeIterator, as specified when it\n was created."}, {"method_name": "getWhatToShow", "method_sig": "int getWhatToShow()", "description": "This attribute determines which node types are presented via the\n NodeIterator. The available set of constants is defined\n in the NodeFilter interface.  Nodes not accepted by\n whatToShow will be skipped, but their children may still\n be considered. Note that this skip takes precedence over the filter,\n if any."}, {"method_name": "getFilter", "method_sig": "NodeFilter getFilter()", "description": "The NodeFilter used to screen nodes."}, {"method_name": "getExpandEntityReferences", "method_sig": "boolean getExpandEntityReferences()", "description": "The value of this flag determines whether the children of entity\n reference nodes are visible to the NodeIterator. If\n false, these children  and their descendants will be rejected. Note\n that this rejection takes precedence over whatToShow and\n the filter. Also note that this is currently the only situation where\n NodeIterators may reject a complete subtree rather than\n skipping individual nodes.\n \n To produce a view of the document that has entity references\n expanded and does not expose the entity reference node itself, use\n the whatToShow flags to hide the entity reference node\n and set expandEntityReferences to true when creating the\n NodeIterator. To produce a view of the document that has\n entity reference nodes but no entity expansion, use the\n whatToShow flags to show the entity reference node and\n set expandEntityReferences to false."}, {"method_name": "nextNode", "method_sig": "Node nextNode()\n       throws DOMException", "description": "Returns the next node in the set and advances the position of the\n NodeIterator in the set. After a\n NodeIterator is created, the first call to\n nextNode() returns the first node in the set."}, {"method_name": "previousNode", "method_sig": "Node previousNode()\n           throws DOMException", "description": "Returns the previous node in the set and moves the position of the\n NodeIterator backwards in the set."}, {"method_name": "detach", "method_sig": "void detach()", "description": "Detaches the NodeIterator from the set which it iterated\n over, releasing any computational resources and placing the\n NodeIterator in the INVALID state. After\n detach has been invoked, calls to nextNode\n or previousNode will raise the exception\n INVALID_STATE_ERR."}]}