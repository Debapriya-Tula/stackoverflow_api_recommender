{"name": "Interface StartElement", "module": "java.xml", "package": "javax.xml.stream.events", "text": "The StartElement interface provides access to information about\n start elements.  A StartElement is reported for each Start Tag\n in the document.", "codes": ["public interface StartElement\nextends XMLEvent"], "fields": [], "methods": [{"method_name": "getName", "method_sig": "QName getName()", "description": "Get the name of this event"}, {"method_name": "getAttributes", "method_sig": "Iterator<Attribute> getAttributes()", "description": "Returns an Iterator of non-namespace declared attributes declared on\n this START_ELEMENT,\n returns an empty iterator if there are no attributes.  The\n iterator must contain only implementations of the javax.xml.stream.Attribute\n interface.   Attributes are fundamentally unordered and may not be reported\n in any order."}, {"method_name": "getNamespaces", "method_sig": "Iterator<Namespace> getNamespaces()", "description": "Returns an Iterator of namespaces declared on this element.\n This Iterator does not contain previously declared namespaces\n unless they appear on the current START_ELEMENT.\n Therefore this list may contain redeclared namespaces and duplicate namespace\n declarations. Use the getNamespaceContext() method to get the\n current context of namespace declarations.\n\n The iterator must contain only implementations of the\n javax.xml.stream.Namespace interface.\n\n A Namespace isA Attribute.  One\n can iterate over a list of namespaces as a list of attributes.\n However this method returns only the list of namespaces\n declared on this START_ELEMENT and does not\n include the attributes declared on this START_ELEMENT.\n\n Returns an empty iterator if there are no namespaces."}, {"method_name": "getAttributeByName", "method_sig": "Attribute getAttributeByName (QName name)", "description": "Returns the attribute referred to by this name"}, {"method_name": "getNamespaceContext", "method_sig": "NamespaceContext getNamespaceContext()", "description": "Gets a read-only namespace context. If no context is\n available this method will return an empty namespace context.\n The NamespaceContext contains information about all namespaces\n in scope for this StartElement."}, {"method_name": "getNamespaceURI", "method_sig": "String getNamespaceURI (String prefix)", "description": "Gets the value that the prefix is bound to in the\n context of this element.  Returns null if\n the prefix is not bound in this context"}]}