{"name": "Enum ChronoUnit", "module": "java.base", "package": "java.time.temporal", "text": "A standard set of date periods units.\n \n This set of units provide unit-based access to manipulate a date, time or date-time.\n The standard set of units can be extended by implementing TemporalUnit.\n \n These units are intended to be applicable in multiple calendar systems.\n For example, most non-ISO calendar systems define units of years, months and days,\n just with slightly different rules.\n The documentation of each unit explains how it operates.", "codes": ["public enum ChronoUnit\nextends Enum<ChronoUnit>\nimplements TemporalUnit"], "fields": [], "methods": [{"method_name": "values", "method_sig": "public static ChronoUnit[] values()", "description": "Returns an array containing the constants of this enum type, in\nthe order they are declared. This method may be used to iterate\nover the constants as follows:\n\nfor (ChronoUnit c : ChronoUnit.values())\n\u00a0   System.out.println(c);\n"}, {"method_name": "valueOf", "method_sig": "public static ChronoUnit valueOf (String name)", "description": "Returns the enum constant of this type with the specified name.\nThe string must match exactly an identifier used to declare an\nenum constant in this type.  (Extraneous whitespace characters are \nnot permitted.)"}, {"method_name": "getDuration", "method_sig": "public Duration getDuration()", "description": "Gets the estimated duration of this unit in the ISO calendar system.\n \n All of the units in this class have an estimated duration.\n Days vary due to daylight saving time, while months have different lengths."}, {"method_name": "isDurationEstimated", "method_sig": "public boolean isDurationEstimated()", "description": "Checks if the duration of the unit is an estimate.\n \n All time units in this class are considered to be accurate, while all date\n units in this class are considered to be estimated.\n \n This definition ignores leap seconds, but considers that Days vary due to\n daylight saving time and months have different lengths."}, {"method_name": "isDateBased", "method_sig": "public boolean isDateBased()", "description": "Checks if this unit is a date unit.\n \n All units from days to eras inclusive are date-based.\n Time-based units and FOREVER return false."}, {"method_name": "isTimeBased", "method_sig": "public boolean isTimeBased()", "description": "Checks if this unit is a time unit.\n \n All units from nanos to half-days inclusive are time-based.\n Date-based units and FOREVER return false."}]}