{"name": "Interface MonitorWaitRequest", "module": "jdk.jdi", "package": "com.sun.jdi.request", "text": "Request for notification when a thread in the target VM is about to\n wait on a monitor object. That is, a thread is entering Object.wait().\n When an enabled MonitorWaitRequest is satisfied, an\n event set containing a\n MonitorWaitEvent\n will be placed on the EventQueue.\n The collection of existing MonitorWaitEvents is\n managed by the EventRequestManager", "codes": ["public interface MonitorWaitRequest\nextends EventRequest"], "fields": [], "methods": [{"method_name": "addThreadFilter", "method_sig": "void addThreadFilter (ThreadReference thread)", "description": "Restricts the events generated by this request to those in\n the given thread."}, {"method_name": "addClassFilter", "method_sig": "void addClassFilter (ReferenceType refType)", "description": "Restricts the events generated by this request to those whose\n monitor object is of the given reference type or any of\n its subtypes."}, {"method_name": "addClassFilter", "method_sig": "void addClassFilter (String classPattern)", "description": "Restricts the events generated by this request to those\n in which the name of the class of the monitor object matches this restricted\n regular expression. Regular expressions are limited\n to exact matches and patterns that begin with '*' or end with '*';\n for example, \"*.Foo\" or \"java.*\"."}, {"method_name": "addClassExclusionFilter", "method_sig": "void addClassExclusionFilter (String classPattern)", "description": "Restricts the events generated by this request to those\n in which the name of the class of the monitor object does notmatch this restricted\n regular expression, e.g.  \"java.*\" or \"*.Foo\"."}, {"method_name": "addInstanceFilter", "method_sig": "void addInstanceFilter (ObjectReference instance)", "description": "Restricts the events generated by this request to those in\n which the currently executing instance (\"this\") is the object\n specified.\n \n Not all targets support this operation.\n Use VirtualMachine.canUseInstanceFilters()\n to determine if the operation is supported."}]}