{"name": "Class FormatConversionProvider", "module": "java.desktop", "package": "javax.sound.sampled.spi", "text": "A format conversion provider provides format conversion services from one or\n more input formats to one or more output formats. Converters include codecs,\n which encode and/or decode audio data, as well as transcoders, etc. Format\n converters provide methods for determining what conversions are supported and\n for obtaining an audio stream from which converted data can be read.\n \n The source format represents the format of the incoming audio data, which\n will be converted.\n \n The target format represents the format of the processed, converted audio\n data. This is the format of the data that can be read from the stream\n returned by one of the getAudioInputStream methods.", "codes": ["public abstract class FormatConversionProvider\nextends Object"], "fields": [], "methods": [{"method_name": "getSourceEncodings", "method_sig": "public abstract AudioFormat.Encoding[] getSourceEncodings()", "description": "Obtains the set of source format encodings from which format conversion\n services are provided by this provider."}, {"method_name": "getTargetEncodings", "method_sig": "public abstract AudioFormat.Encoding[] getTargetEncodings()", "description": "Obtains the set of target format encodings to which format conversion\n services are provided by this provider."}, {"method_name": "isSourceEncodingSupported", "method_sig": "public boolean isSourceEncodingSupported (AudioFormat.Encoding sourceEncoding)", "description": "Indicates whether the format converter supports conversion from the\n specified source format encoding."}, {"method_name": "isTargetEncodingSupported", "method_sig": "public boolean isTargetEncodingSupported (AudioFormat.Encoding targetEncoding)", "description": "Indicates whether the format converter supports conversion to the\n specified target format encoding."}, {"method_name": "getTargetEncodings", "method_sig": "public abstract AudioFormat.Encoding[] getTargetEncodings (AudioFormat sourceFormat)", "description": "Obtains the set of target format encodings supported by the format\n converter given a particular source format. If no target format encodings\n are supported for this source format, an array of length 0 is returned."}, {"method_name": "isConversionSupported", "method_sig": "public boolean isConversionSupported (AudioFormat.Encoding targetEncoding,\n                                     AudioFormat sourceFormat)", "description": "Indicates whether the format converter supports conversion to a\n particular encoding from a particular format."}, {"method_name": "getTargetFormats", "method_sig": "public abstract AudioFormat[] getTargetFormats (AudioFormat.Encoding targetEncoding,\n                                               AudioFormat sourceFormat)", "description": "Obtains the set of target formats with the encoding specified supported\n by the format converter. If no target formats with the specified encoding\n are supported for this source format, an array of length 0 is returned."}, {"method_name": "isConversionSupported", "method_sig": "public boolean isConversionSupported (AudioFormat targetFormat,\n                                     AudioFormat sourceFormat)", "description": "Indicates whether the format converter supports conversion to one\n particular format from another."}, {"method_name": "getAudioInputStream", "method_sig": "public abstract AudioInputStream getAudioInputStream (AudioFormat.Encoding targetEncoding,\n                                                     AudioInputStream sourceStream)", "description": "Obtains an audio input stream with the specified encoding from the given\n audio input stream."}, {"method_name": "getAudioInputStream", "method_sig": "public abstract AudioInputStream getAudioInputStream (AudioFormat targetFormat,\n                                                     AudioInputStream sourceStream)", "description": "Obtains an audio input stream with the specified format from the given\n audio input stream."}]}