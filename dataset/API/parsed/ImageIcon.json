{"name": "Class ImageIcon", "module": "java.desktop", "package": "javax.swing", "text": "An implementation of the Icon interface that paints Icons\n from Images. Images that are created from a URL, filename or byte array\n are preloaded using MediaTracker to monitor the loaded state\n of the image.\n\n \n For further information and examples of using image icons, see\n How to Use Icons\n in The Java Tutorial.\n\nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["public class ImageIcon\nextends Object\nimplements Icon, Serializable, Accessible"], "fields": [{"field_name": "component", "field_sig": "@Deprecated\nprotected static final\u00a0Component component", "description": "Do not use this shared component, which is used to track image loading.\n It is left for backward compatibility only."}, {"field_name": "tracker", "field_sig": "@Deprecated\nprotected static final\u00a0MediaTracker tracker", "description": "Do not use this shared media tracker, which is used to load images.\n It is left for backward compatibility only."}], "methods": [{"method_name": "loadImage", "method_sig": "protected void loadImage (Image image)", "description": "Loads the image, returning only when the image is loaded."}, {"method_name": "getImageLoadStatus", "method_sig": "public int getImageLoadStatus()", "description": "Returns the status of the image loading operation."}, {"method_name": "getImage", "method_sig": "public Image getImage()", "description": "Returns this icon's Image."}, {"method_name": "setImage", "method_sig": "public void setImage (Image image)", "description": "Sets the image displayed by this icon."}, {"method_name": "getDescription", "method_sig": "public String getDescription()", "description": "Gets the description of the image.  This is meant to be a brief\n textual description of the object.  For example, it might be\n presented to a blind user to give an indication of the purpose\n of the image.\n The description may be null."}, {"method_name": "setDescription", "method_sig": "public void setDescription (String description)", "description": "Sets the description of the image.  This is meant to be a brief\n textual description of the object.  For example, it might be\n presented to a blind user to give an indication of the purpose\n of the image."}, {"method_name": "paintIcon", "method_sig": "public void paintIcon (Component c,\n                      Graphics g,\n                      int x,\n                      int y)", "description": "Paints the icon.\n The top-left corner of the icon is drawn at\n the point (x, y)\n in the coordinate space of the graphics context g.\n If this icon has no image observer,\n this method uses the c component\n as the observer."}, {"method_name": "getIconWidth", "method_sig": "public int getIconWidth()", "description": "Gets the width of the icon."}, {"method_name": "getIconHeight", "method_sig": "public int getIconHeight()", "description": "Gets the height of the icon."}, {"method_name": "setImageObserver", "method_sig": "public void setImageObserver (ImageObserver observer)", "description": "Sets the image observer for the image.  Set this\n property if the ImageIcon contains an animated GIF, so\n the observer is notified to update its display.\n For example:\n \n     icon = new ImageIcon(...)\n     button.setIcon(icon);\n     icon.setImageObserver(button);\n "}, {"method_name": "getImageObserver", "method_sig": "public ImageObserver getImageObserver()", "description": "Returns the image observer for the image."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns a string representation of this image."}, {"method_name": "getAccessibleContext", "method_sig": "@BeanProperty(expert=true,\n              description=\"The AccessibleContext associated with this ImageIcon.\")\npublic AccessibleContext getAccessibleContext()", "description": "Gets the AccessibleContext associated with this ImageIcon.\n For image icons, the AccessibleContext takes the form of an\n AccessibleImageIcon.\n A new AccessibleImageIcon instance is created if necessary."}]}