{"name": "Class EncryptionKey", "module": "java.security.jgss", "package": "javax.security.auth.kerberos", "text": "This class encapsulates an EncryptionKey used in Kerberos.\n\n An EncryptionKey is defined in Section 4.2.9 of the Kerberos Protocol\n Specification (RFC 4120) as:\n \n     EncryptionKey   ::= SEQUENCE {\n             keytype         [0] Int32 -- actually encryption type --,\n             keyvalue        [1] OCTET STRING\n     }\n \n The key material of an EncryptionKey is defined as the value\n of the keyValue above.", "codes": ["public final class EncryptionKey\nextends Object\nimplements SecretKey"], "fields": [], "methods": [{"method_name": "getKeyType", "method_sig": "public int getKeyType()", "description": "Returns the key type for this key."}, {"method_name": "getAlgorithm", "method_sig": "public String getAlgorithm()", "description": "Returns the standard algorithm name for this key. The algorithm names\n are the encryption type string defined on the IANA\n Kerberos Encryption Type Numbers\n page.\n \n This method can return the following value not defined on the IANA page:\n \nnone: for etype equal to 0\nunknown: for etype greater than 0 but unsupported by\n         the implementation\nprivate: for etype smaller than 0\n"}, {"method_name": "getFormat", "method_sig": "public String getFormat()", "description": "Returns the name of the encoding format for this key."}, {"method_name": "getEncoded", "method_sig": "public byte[] getEncoded()", "description": "Returns the key material of this key."}, {"method_name": "destroy", "method_sig": "public void destroy()\n             throws DestroyFailedException", "description": "Destroys this key by clearing out the key material of this key."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns an informative textual representation of this EncryptionKey."}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Returns a hash code for this EncryptionKey."}, {"method_name": "equals", "method_sig": "public boolean equals (Object other)", "description": "Compares the specified object with this key for equality.\n Returns true if the given object is also an\n EncryptionKey and the two\n EncryptionKey instances are equivalent. More formally two\n EncryptionKey instances are equal if they have equal key types\n and key material.\n A destroyed EncryptionKey object is only equal to itself."}]}