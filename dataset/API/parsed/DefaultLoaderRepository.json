{"name": "Class DefaultLoaderRepository", "module": "java.management", "package": "javax.management", "text": "Keeps the list of Class Loaders registered in the MBean Server.\n It provides the necessary methods to load classes using the registered\n Class Loaders.\nThis deprecated class is maintained for compatibility.  In\n previous versions of the JMX API, there was one\n DefaultLoaderRepository shared by all MBean servers.\n As of version 1.2 of the JMX API, that functionality is\n approximated by using MBeanServerFactory.findMBeanServer(java.lang.String) to\n find all known MBean servers, and consulting the ClassLoaderRepository of each one.  It is strongly recommended\n that code referencing DefaultLoaderRepository be\n rewritten.", "codes": ["@Deprecated\npublic class DefaultLoaderRepository\nextends Object"], "fields": [], "methods": [{"method_name": "loadClass", "method_sig": "public static Class<?> loadClass (String className)\n                          throws ClassNotFoundException", "description": "Go through the list of class loaders and try to load the requested class.\n The method will stop as soon as the class is found. If the class\n is not found the method will throw a ClassNotFoundException\n exception."}, {"method_name": "loadClassWithout", "method_sig": "public static Class<?> loadClassWithout (ClassLoader loader,\n                                        String className)\n                                 throws ClassNotFoundException", "description": "Go through the list of class loaders but exclude the given class loader, then try to load\n the requested class.\n The method will stop as soon as the class is found. If the class\n is not found the method will throw a ClassNotFoundException\n exception."}]}