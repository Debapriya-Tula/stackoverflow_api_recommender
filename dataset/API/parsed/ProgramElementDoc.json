{"name": "Interface ProgramElementDoc", "module": "jdk.javadoc", "package": "com.sun.javadoc", "text": "Represents a java program element: class, interface, field,\n constructor, or method.\n This is an abstract class dealing with information common to\n these elements.", "codes": ["@Deprecated(since=\"9\",\n            forRemoval=true)\npublic interface ProgramElementDoc\nextends Doc"], "fields": [], "methods": [{"method_name": "containingClass", "method_sig": "ClassDoc containingClass()", "description": "Get the containing class or interface of this program element."}, {"method_name": "containingPackage", "method_sig": "PackageDoc containingPackage()", "description": "Get the package that this program element is contained in."}, {"method_name": "qualifiedName", "method_sig": "String qualifiedName()", "description": "Get the fully qualified name of this program element.\n For example, for the class java.util.Hashtable,\n return \"java.util.Hashtable\".\n \n For the method bar() in class Foo\n in the unnamed package, return \"Foo.bar\"."}, {"method_name": "modifierSpecifier", "method_sig": "int modifierSpecifier()", "description": "Get the modifier specifier integer."}, {"method_name": "modifiers", "method_sig": "String modifiers()", "description": "Get modifiers string.\n For example, for:\n \n   public abstract int foo() { ... }\n \n return \"public abstract\".\n Annotations are not included."}, {"method_name": "annotations", "method_sig": "AnnotationDesc[] annotations()", "description": "Get the annotations of this program element.\n Return an empty array if there are none."}, {"method_name": "isPublic", "method_sig": "boolean isPublic()", "description": "Return true if this program element is public."}, {"method_name": "isProtected", "method_sig": "boolean isProtected()", "description": "Return true if this program element is protected."}, {"method_name": "isPrivate", "method_sig": "boolean isPrivate()", "description": "Return true if this program element is private."}, {"method_name": "isPackagePrivate", "method_sig": "boolean isPackagePrivate()", "description": "Return true if this program element is package private."}, {"method_name": "isStatic", "method_sig": "boolean isStatic()", "description": "Return true if this program element is static."}, {"method_name": "isFinal", "method_sig": "boolean isFinal()", "description": "Return true if this program element is final."}]}