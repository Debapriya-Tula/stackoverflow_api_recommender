{"name": "Class JarURLConnection", "module": "java.base", "package": "java.net", "text": "A URL Connection to a Java ARchive (JAR) file or an entry in a JAR\n file.\n\n The syntax of a JAR URL is:\n\n \n jar:<url>!/{entry}\n \nfor example:\n\n jar:http://www.foo.com/bar/baz.jar!/COM/foo/Quux.class\nJar URLs should be used to refer to a JAR file or entries in\n a JAR file. The example above is a JAR URL which refers to a JAR\n entry. If the entry name is omitted, the URL refers to the whole\n JAR file:\n\n jar:http://www.foo.com/bar/baz.jar!/\nUsers should cast the generic URLConnection to a\n JarURLConnection when they know that the URL they created is a JAR\n URL, and they need JAR-specific functionality. For example:\n\n \n URL url = new URL(\"jar:file:/home/duke/duke.jar!/\");\n JarURLConnection jarConnection = (JarURLConnection)url.openConnection();\n Manifest manifest = jarConnection.getManifest();\n \nJarURLConnection instances can only be used to read from JAR files.\n It is not possible to get a OutputStream to modify or write\n to the underlying JAR file using this class.\n Examples:\n\n \nA Jar entry\n jar:http://www.foo.com/bar/baz.jar!/COM/foo/Quux.class\nA Jar file\n jar:http://www.foo.com/bar/baz.jar!/\nA Jar directory\n jar:http://www.foo.com/bar/baz.jar!/COM/foo/\n\n!/ is referred to as the separator.\n\n When constructing a JAR url via new URL(context, spec),\n the following rules apply:\n\n \nif there is no context URL and the specification passed to the\n URL constructor doesn't contain a separator, the URL is considered\n to refer to a JarFile.\n\n if there is a context URL, the context URL is assumed to refer\n to a JAR file or a Jar directory.\n\n if the specification begins with a '/', the Jar directory is\n ignored, and the spec is considered to be at the root of the Jar\n file.\n\n Examples:\n\n \ncontext: jar:http://www.foo.com/bar/jar.jar!/,\n spec:baz/entry.txt\nurl:jar:http://www.foo.com/bar/jar.jar!/baz/entry.txt\ncontext: jar:http://www.foo.com/bar/jar.jar!/baz,\n spec:entry.txt\nurl:jar:http://www.foo.com/bar/jar.jar!/baz/entry.txt\ncontext: jar:http://www.foo.com/bar/jar.jar!/baz,\n spec:/entry.txt\nurl:jar:http://www.foo.com/bar/jar.jar!/entry.txt\n\n", "codes": ["public abstract class JarURLConnection\nextends URLConnection"], "fields": [{"field_name": "jarFileURLConnection", "field_sig": "protected\u00a0URLConnection jarFileURLConnection", "description": "The connection to the JAR file URL, if the connection has been\n initiated. This should be set by connect."}], "methods": [{"method_name": "getJarFileURL", "method_sig": "public URL getJarFileURL()", "description": "Returns the URL for the Jar file for this connection."}, {"method_name": "getEntryName", "method_sig": "public String getEntryName()", "description": "Return the entry name for this connection. This method\n returns null if the JAR file URL corresponding to this\n connection points to a JAR file and not a JAR file entry."}, {"method_name": "getJarFile", "method_sig": "public abstract JarFile getJarFile()\n                            throws IOException", "description": "Return the JAR file for this connection."}, {"method_name": "getManifest", "method_sig": "public Manifest getManifest()\n                     throws IOException", "description": "Returns the Manifest for this connection, or null if none."}, {"method_name": "getJarEntry", "method_sig": "public JarEntry getJarEntry()\n                     throws IOException", "description": "Return the JAR entry object for this connection, if any. This\n method returns null if the JAR file URL corresponding to this\n connection points to a JAR file and not a JAR file entry."}, {"method_name": "getAttributes", "method_sig": "public Attributes getAttributes()\n                         throws IOException", "description": "Return the Attributes object for this connection if the URL\n for it points to a JAR file entry, null otherwise."}, {"method_name": "getMainAttributes", "method_sig": "public Attributes getMainAttributes()\n                             throws IOException", "description": "Returns the main Attributes for the JAR file for this\n connection."}, {"method_name": "getCertificates", "method_sig": "public Certificate[] getCertificates()\n                              throws IOException", "description": "Return the Certificate object for this connection if the URL\n for it points to a JAR file entry, null otherwise. This method\n can only be called once\n the connection has been completely verified by reading\n from the input stream until the end of the stream has been\n reached. Otherwise, this method will return null"}]}