{"name": "Class RMIServerImpl", "module": "java.management.rmi", "package": "javax.management.remote.rmi", "text": "An RMI object representing a connector server.  Remote clients\n can make connections using the newClient(Object) method.  This\n method returns an RMI object representing the connection.\nUser code does not usually reference this class directly.\n RMI connection servers are usually created with the class RMIConnectorServer.  Remote clients usually create connections\n either with JMXConnectorFactory\n or by instantiating RMIConnector.\nThis is an abstract class.  Concrete subclasses define the\n details of the client connection objects.", "codes": ["public abstract class RMIServerImpl\nextends Object\nimplements Closeable, RMIServer"], "fields": [], "methods": [{"method_name": "export", "method_sig": "protected abstract void export()\n                        throws IOException", "description": "Exports this RMI object."}, {"method_name": "toStub", "method_sig": "public abstract Remote toStub()\n                       throws IOException", "description": "Returns a remotable stub for this server object."}, {"method_name": "setDefaultClassLoader", "method_sig": "public void setDefaultClassLoader (ClassLoader cl)", "description": "Sets the default ClassLoader for this connector\n server. New client connections will use this classloader.\n Existing client connections are unaffected."}, {"method_name": "getDefaultClassLoader", "method_sig": "public ClassLoader getDefaultClassLoader()", "description": "Gets the default ClassLoader used by this connector\n server."}, {"method_name": "setMBeanServer", "method_sig": "public void setMBeanServer (MBeanServer mbs)", "description": "Sets the MBeanServer to which this connector\n server is attached. New client connections will interact\n with this MBeanServer. Existing client connections are\n unaffected."}, {"method_name": "getMBeanServer", "method_sig": "public MBeanServer getMBeanServer()", "description": "The MBeanServer to which this connector server\n is attached.  This is the last value passed to setMBeanServer(javax.management.MBeanServer) on this object, or null if that method has\n never been called."}, {"method_name": "newClient", "method_sig": "public RMIConnection newClient (Object credentials)\n                        throws IOException", "description": "Creates a new client connection.  This method calls makeClient and adds the returned client connection\n object to an internal list.  When this\n RMIServerImpl is shut down via its close() method, the close()\n method of each object remaining in the list is called.\nThe fact that a client connection object is in this internal\n list does not prevent it from being garbage collected."}, {"method_name": "makeClient", "method_sig": "protected abstract RMIConnection makeClient (String connectionId,\n                                            Subject subject)\n                                     throws IOException", "description": "Creates a new client connection.  This method is called by\n the public method newClient(Object)."}, {"method_name": "closeClient", "method_sig": "protected abstract void closeClient (RMIConnection client)\n                             throws IOException", "description": "Closes a client connection made by makeClient."}, {"method_name": "getProtocol", "method_sig": "protected abstract String getProtocol()", "description": "Returns the protocol string for this object.  The string is\n rmi for RMI/JRMP."}, {"method_name": "clientClosed", "method_sig": "protected void clientClosed (RMIConnection client)\n                     throws IOException", "description": "Method called when a client connection created by makeClient is closed.  A subclass that defines\n makeClient must arrange for this method to be\n called when the resultant object's close method is called.  This enables it to be removed from\n the RMIServerImpl's list of connections.  It is\n not an error for client not to be in that\n list.\nAfter removing client from the list of\n connections, this method calls closeClient(client)."}, {"method_name": "close", "method_sig": "public void close()\n           throws IOException", "description": "Closes this connection server.  This method first calls the\n closeServer() method so that no new client connections\n will be accepted.  Then, for each remaining RMIConnection object returned by makeClient, its close method is\n called.\nThe behavior when this method is called more than once is\n unspecified.\nIf closeServer() throws an\n IOException, the individual connections are\n nevertheless closed, and then the IOException is\n thrown from this method.\nIf closeServer() returns normally but one or more\n of the individual connections throws an\n IOException, then, after closing all the\n connections, one of those IOExceptions is thrown\n from this method.  If more than one connection throws an\n IOException, it is unspecified which one is thrown\n from this method."}, {"method_name": "closeServer", "method_sig": "protected abstract void closeServer()\n                             throws IOException", "description": "Called by close() to close the connector server.\n After returning from this method, the connector server must\n not accept any new connections."}]}