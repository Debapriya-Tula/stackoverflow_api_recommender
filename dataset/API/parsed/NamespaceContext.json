{"name": "Interface NamespaceContext", "module": "java.xml", "package": "javax.xml.namespace", "text": "Interface for read only XML Namespace context processing.\n\n An XML Namespace has the properties:\n \nNamespace URI:\n       Namespace name expressed as a URI to which the prefix is bound\nprefix: syntactically, this is the part of the attribute name\n       following the XMLConstants.XMLNS_ATTRIBUTE\n       (\"xmlns\") in the Namespace declaration\n\nexample:\n <element xmlns:prefix=\"http://Namespace-name-URI\">\nAll get*(*) methods operate in the current scope\n for Namespace URI and prefix resolution.\n\n Note that a Namespace URI can be bound to\n multiple prefixes in the current scope.  This can\n occur when multiple XMLConstants.XMLNS_ATTRIBUTE\n (\"xmlns\") Namespace declarations occur in the same Start-Tag and\n refer to the same Namespace URI. e.g.\n \n <element xmlns:prefix1=\"http://Namespace-name-URI\"\n          xmlns:prefix2=\"http://Namespace-name-URI\"> \n \n This can also occur when the same Namespace URI is used in multiple\n XMLConstants.XMLNS_ATTRIBUTE (\"xmlns\") Namespace\n declarations in the logical parent element hierarchy.  e.g.\n \n <parent xmlns:prefix1=\"http://Namespace-name-URI\">\n   <child xmlns:prefix2=\"http://Namespace-name-URI\">\n     ...\n   </child>\n </parent> \n \nA prefix can only be bound to a single\n Namespace URI in the current scope.", "codes": ["public interface NamespaceContext"], "fields": [], "methods": [{"method_name": "getNamespaceURI", "method_sig": "String getNamespaceURI (String prefix)", "description": "Get Namespace URI bound to a prefix in the current scope.\n\n When requesting a Namespace URI by prefix, the following\n table describes the returned Namespace URI value for all\n possible prefix values:\n\n \nReturn value for specified prefixes\n\n\nprefix parameter\nNamespace URI return value\n\n\n\n\nDEFAULT_NS_PREFIX (\"\")\ndefault Namespace URI in the current scope or\n          XMLConstants.NULL_NS_URI(\"\")\n\n         when there is no default Namespace URI in the current scope\n\n\nbound prefix\nNamespace URI bound to prefix in current scope\n\n\nunbound prefix\n\n XMLConstants.NULL_NS_URI(\"\")\n\n\n\n\nXMLConstants.XML_NS_PREFIX (\"xml\")\nXMLConstants.XML_NS_URI\n           (\"http://www.w3.org/XML/1998/namespace\")\n\n\nXMLConstants.XMLNS_ATTRIBUTE (\"xmlns\")\nXMLConstants.XMLNS_ATTRIBUTE_NS_URI\n         (\"http://www.w3.org/2000/xmlns/\")\n\n\nnull\nIllegalArgumentException is thrown\n\n\n"}, {"method_name": "getPrefix", "method_sig": "String getPrefix (String namespaceURI)", "description": "Get prefix bound to Namespace URI in the current scope.\n\n To get all prefixes bound to a Namespace URI in the current\n scope, use getPrefixes(String namespaceURI).\n\n When requesting a prefix by Namespace URI, the following\n table describes the returned prefix value for all Namespace URI\n values:\n\n \nReturn value for specified Namespace URIs\n\n\nNamespace URI parameter\nprefix value returned\n\n\n\n\n<default Namespace URI>\nXMLConstants.DEFAULT_NS_PREFIX (\"\")\n       \n\n\nbound Namespace URI\nprefix bound to Namespace URI in the current scope,\n           if multiple prefixes are bound to the Namespace URI in\n           the current scope, a single arbitrary prefix, whose\n           choice is implementation dependent, is returned\n\n\nunbound Namespace URI\nnull\n\n\nXMLConstants.XML_NS_URI\n           (\"http://www.w3.org/XML/1998/namespace\")\nXMLConstants.XML_NS_PREFIX (\"xml\")\n\n\nXMLConstants.XMLNS_ATTRIBUTE_NS_URI\n           (\"http://www.w3.org/2000/xmlns/\")\nXMLConstants.XMLNS_ATTRIBUTE (\"xmlns\")\n\n\nnull\nIllegalArgumentException is thrown\n\n\n"}, {"method_name": "getPrefixes", "method_sig": "Iterator<String> getPrefixes (String namespaceURI)", "description": "Get all prefixes bound to a Namespace URI in the current\n scope.\n\n An Iterator over String elements is returned in an arbitrary,\n implementation dependent, order.\n\n The Iterator is\n not modifiable.  e.g. the\n remove() method will throw\n UnsupportedOperationException.\nWhen requesting prefixes by Namespace URI, the following\n table describes the returned prefixes value for all Namespace\n URI values:\n\n \nReturn value for specified Namespace URIs\n\n\nNamespace URI parameter\nprefixes value returned\n\n\n\n\nbound Namespace URI,\n         including the <default Namespace URI>\n\nIterator over prefixes bound to Namespace URI in\n         the current scope in an arbitrary,\n         implementation dependent,\n         order\n       \n\n\nunbound Namespace URI\nempty Iterator\n\n\nXMLConstants.XML_NS_URI\n           (\"http://www.w3.org/XML/1998/namespace\")\nIterator with one element set to\n         XMLConstants.XML_NS_PREFIX (\"xml\")\n\n\nXMLConstants.XMLNS_ATTRIBUTE_NS_URI\n           (\"http://www.w3.org/2000/xmlns/\")\nIterator with one element set to\n         XMLConstants.XMLNS_ATTRIBUTE (\"xmlns\")\n\n\nnull\nIllegalArgumentException is thrown\n\n\n"}]}