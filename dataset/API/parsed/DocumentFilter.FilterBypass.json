{"name": "Class DocumentFilter.FilterBypass", "module": "java.desktop", "package": "javax.swing.text", "text": "Used as a way to circumvent calling back into the Document to\n change it. Document implementations that wish to support\n a DocumentFilter must provide an implementation that will\n not callback into the DocumentFilter when the following methods\n are invoked from the DocumentFilter.", "codes": ["public abstract static class DocumentFilter.FilterBypass\nextends Object"], "fields": [], "methods": [{"method_name": "getDocument", "method_sig": "public abstract Document getDocument()", "description": "Returns the Document the mutation is occurring on."}, {"method_name": "remove", "method_sig": "public abstract void remove (int offset,\n                            int length)\n                     throws BadLocationException", "description": "Removes the specified region of text, bypassing the\n DocumentFilter."}, {"method_name": "insertString", "method_sig": "public abstract void insertString (int offset,\n                                  String string,\n                                  AttributeSet attr)\n                           throws BadLocationException", "description": "Inserts the specified text, bypassing the\n DocumentFilter."}, {"method_name": "replace", "method_sig": "public abstract void replace (int offset,\n                             int length,\n                             String string,\n                             AttributeSet attrs)\n                      throws BadLocationException", "description": "Deletes the region of text from offset to\n offset + length, and replaces it with\n  text."}]}