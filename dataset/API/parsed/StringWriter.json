{"name": "Class StringWriter", "module": "java.base", "package": "java.io", "text": "A character stream that collects its output in a string buffer, which can\n then be used to construct a string.\n \n Closing a StringWriter has no effect. The methods in this class\n can be called after the stream has been closed without generating an\n IOException.", "codes": ["public class StringWriter\nextends Writer"], "fields": [], "methods": [{"method_name": "write", "method_sig": "public void write (int c)", "description": "Write a single character."}, {"method_name": "write", "method_sig": "public void write (char[] cbuf,\n                  int off,\n                  int len)", "description": "Write a portion of an array of characters."}, {"method_name": "write", "method_sig": "public void write (String str)", "description": "Write a string."}, {"method_name": "write", "method_sig": "public void write (String str,\n                  int off,\n                  int len)", "description": "Write a portion of a string."}, {"method_name": "append", "method_sig": "public StringWriter append (CharSequence csq)", "description": "Appends the specified character sequence to this writer.\n\n  An invocation of this method of the form out.append(csq)\n behaves in exactly the same way as the invocation\n\n \n     out.write(csq.toString()) \n Depending on the specification of toString for the\n character sequence csq, the entire sequence may not be\n appended. For instance, invoking the toString method of a\n character buffer will return a subsequence whose content depends upon\n the buffer's position and limit."}, {"method_name": "append", "method_sig": "public StringWriter append (CharSequence csq,\n                           int start,\n                           int end)", "description": "Appends a subsequence of the specified character sequence to this writer.\n\n  An invocation of this method of the form\n out.append(csq, start, end) when csq\n is not null, behaves in\n exactly the same way as the invocation\n\n \n     out.write(csq.subSequence(start, end).toString())\n "}, {"method_name": "append", "method_sig": "public StringWriter append (char c)", "description": "Appends the specified character to this writer.\n\n  An invocation of this method of the form out.append(c)\n behaves in exactly the same way as the invocation\n\n \n     out.write(c) "}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Return the buffer's current value as a string."}, {"method_name": "getBuffer", "method_sig": "public StringBuffer getBuffer()", "description": "Return the string buffer itself."}, {"method_name": "flush", "method_sig": "public void flush()", "description": "Flush the stream."}, {"method_name": "close", "method_sig": "public void close()\n           throws IOException", "description": "Closing a StringWriter has no effect. The methods in this\n class can be called after the stream has been closed without generating\n an IOException."}]}