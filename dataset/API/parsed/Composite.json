{"name": "Interface Composite", "module": "java.desktop", "package": "java.awt", "text": "The Composite interface, along with\n CompositeContext, defines the methods to compose a draw\n primitive with the underlying graphics area.\n After the Composite is set in the\n Graphics2D context, it combines a shape, text, or an image\n being rendered with the colors that have already been rendered\n according to pre-defined rules. The classes\n implementing this interface provide the rules and a method to create\n the context for a particular operation.\n CompositeContext is an environment used by the\n compositing operation, which is created by the Graphics2D\n prior to the start of the operation.  CompositeContext\n contains private information and resources needed for a compositing\n operation.  When the CompositeContext is no longer needed,\n the Graphics2D object disposes of it in order to reclaim\n resources allocated for the operation.\n \n Instances of classes implementing Composite must be\n immutable because the Graphics2D does not clone\n these objects when they are set as an attribute with the\n setComposite method or when the Graphics2D\n object is cloned.  This is to avoid undefined rendering behavior of\n Graphics2D, resulting from the modification of\n the Composite object after it has been set in the\n Graphics2D context.\n \n Since this interface must expose the contents of pixels on the\n target device or image to potentially arbitrary code, the use of\n custom objects which implement this interface when rendering directly\n to a screen device is governed by the readDisplayPixels\nAWTPermission.  The permission check will occur when such\n a custom object is passed to the setComposite method\n of a Graphics2D retrieved from a Component.", "codes": ["public interface Composite"], "fields": [], "methods": [{"method_name": "createContext", "method_sig": "CompositeContext createContext (ColorModel srcColorModel,\n                               ColorModel dstColorModel,\n                               RenderingHints hints)", "description": "Creates a context containing state that is used to perform\n the compositing operation.  In a multi-threaded environment,\n several contexts can exist simultaneously for a single\n Composite object."}]}