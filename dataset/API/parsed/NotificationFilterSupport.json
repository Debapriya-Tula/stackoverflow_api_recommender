{"name": "Class NotificationFilterSupport", "module": "java.management", "package": "javax.management", "text": "Provides an implementation of the NotificationFilter interface.\n The filtering is performed on the notification type attribute.\n \n Manages a list of enabled notification types.\n A method allows users to enable/disable as many notification types as required.\n \n Then, before sending a notification to a listener registered with a filter,\n the notification broadcaster compares this notification type with all notification types\n enabled by the filter. The notification will be sent to the listener\n only if its filter enables this notification type.\n \n Example:\n \n\n NotificationFilterSupport myFilter = new NotificationFilterSupport();\n myFilter.enableType(\"my_example.my_type\");\n myBroadcaster.addListener(myListener, myFilter, null);\n \n\n The listener myListener will only receive notifications the type of which equals/starts with \"my_example.my_type\".", "codes": ["public class NotificationFilterSupport\nextends Object\nimplements NotificationFilter"], "fields": [], "methods": [{"method_name": "isNotificationEnabled", "method_sig": "public boolean isNotificationEnabled (Notification notification)", "description": "Invoked before sending the specified notification to the listener.\n This filter compares the type of the specified notification with each enabled type.\n If the notification type matches one of the enabled types,\n the notification should be sent to the listener and this method returns true."}, {"method_name": "enableType", "method_sig": "public void enableType (String prefix)\n                throws IllegalArgumentException", "description": "Enables all the notifications the type of which starts with the specified prefix\n to be sent to the listener.\n If the specified prefix is already in the list of enabled notification types,\n this method has no effect.\n \n Example:\n \n\n // Enables all notifications the type of which starts with \"my_example\" to be sent.\n myFilter.enableType(\"my_example\");\n // Enables all notifications the type of which is \"my_example.my_type\" to be sent.\n myFilter.enableType(\"my_example.my_type\");\n \n\n\n Note that:\n \n myFilter.enableType(\"my_example.*\");\n \n will no match any notification type."}, {"method_name": "disableType", "method_sig": "public void disableType (String prefix)", "description": "Removes the given prefix from the prefix list.\n If the specified prefix is not in the list of enabled notification types,\n this method has no effect."}, {"method_name": "disableAllTypes", "method_sig": "public void disableAllTypes()", "description": "Disables all notification types."}, {"method_name": "getEnabledTypes", "method_sig": "public Vector<String> getEnabledTypes()", "description": "Gets all the enabled notification types for this filter."}]}