{"name": "Interface AnnotatedTypeVariable", "module": "java.base", "package": "java.lang.reflect", "text": "AnnotatedTypeVariable represents the potentially annotated use of a\n type variable, whose declaration may have bounds which themselves represent\n annotated uses of types.", "codes": ["public interface AnnotatedTypeVariable\nextends AnnotatedType"], "fields": [], "methods": [{"method_name": "getAnnotatedBounds", "method_sig": "AnnotatedType[] getAnnotatedBounds()", "description": "Returns the potentially annotated bounds of this type variable.\n If no bound is explicitly declared, the bound is unannotated\n Object."}, {"method_name": "getAnnotatedOwnerType", "method_sig": "AnnotatedType getAnnotatedOwnerType()", "description": "Returns the potentially annotated type that this type is a member of, if\n this type represents a nested type. For example, if this type is\n @TA O<T>.I<S>, return a representation of @TA O<T>.\n\n Returns null for an AnnotatedType that is an instance\n     of AnnotatedTypeVariable."}]}