{"name": "Class AWTEventMonitor", "module": "jdk.accessibility", "package": "com.sun.java.accessibility.util", "text": "The AWTEventMonitor implements a suite of listeners that are\n conditionally installed on every AWT component instance in the Java\n Virtual Machine.  The events captured by these listeners are made\n available through a unified set of listeners supported by AWTEventMonitor.\n With this, all the individual events on each of the AWT component\n instances are funneled into one set of listeners broken down by category\n (see EventID for the categories).\n This class depends upon EventQueueMonitor, which provides the base\n level support for capturing the top-level containers as they are created.", "codes": ["public class AWTEventMonitor\nextends Object"], "fields": [{"field_name": "componentWithFocus", "field_sig": "@Deprecated(since=\"8\",\n            forRemoval=true)\nprotected static\u00a0Component componentWithFocus", "description": "The current component with keyboard focus."}, {"field_name": "componentListener", "field_sig": "@Deprecated(since=\"8\",\n            forRemoval=true)\nprotected static\u00a0ComponentListener componentListener", "description": "The current list of registered ComponentListener classes."}, {"field_name": "containerListener", "field_sig": "@Deprecated(since=\"8\",\n            forRemoval=true)\nprotected static\u00a0ContainerListener containerListener", "description": "The current list of registered ContainerListener classes."}, {"field_name": "focusListener", "field_sig": "@Deprecated(since=\"8\",\n            forRemoval=true)\nprotected static\u00a0FocusListener focusListener", "description": "The current list of registered FocusListener classes."}, {"field_name": "keyListener", "field_sig": "@Deprecated(since=\"8\",\n            forRemoval=true)\nprotected static\u00a0KeyListener keyListener", "description": "The current list of registered KeyListener classes."}, {"field_name": "mouseListener", "field_sig": "@Deprecated(since=\"8\",\n            forRemoval=true)\nprotected static\u00a0MouseListener mouseListener", "description": "The current list of registered MouseListener classes."}, {"field_name": "mouseMotionListener", "field_sig": "@Deprecated(since=\"8\",\n            forRemoval=true)\nprotected static\u00a0MouseMotionListener mouseMotionListener", "description": "The current list of registered MouseMotionListener classes."}, {"field_name": "windowListener", "field_sig": "@Deprecated(since=\"8\",\n            forRemoval=true)\nprotected static\u00a0WindowListener windowListener", "description": "The current list of registered WindowListener classes."}, {"field_name": "actionListener", "field_sig": "@Deprecated(since=\"8\",\n            forRemoval=true)\nprotected static\u00a0ActionListener actionListener", "description": "The current list of registered ActionListener classes."}, {"field_name": "adjustmentListener", "field_sig": "@Deprecated(since=\"8\",\n            forRemoval=true)\nprotected static\u00a0AdjustmentListener adjustmentListener", "description": "The current list of registered AdjustmentListener classes."}, {"field_name": "itemListener", "field_sig": "@Deprecated(since=\"8\",\n            forRemoval=true)\nprotected static\u00a0ItemListener itemListener", "description": "The current list of registered ItemListener classes."}, {"field_name": "textListener", "field_sig": "@Deprecated(since=\"8\",\n            forRemoval=true)\nprotected static\u00a0TextListener textListener", "description": "The current list of registered TextListener classes."}], "methods": [{"method_name": "getComponentWithFocus", "method_sig": "public static Component getComponentWithFocus()", "description": "Returns the component that currently has keyboard focus.  The return\n value can be null."}, {"method_name": "addComponentListener", "method_sig": "public static void addComponentListener (ComponentListener l)", "description": "Adds the specified listener to receive all COMPONENT\n events on each component instance in the Java Virtual Machine as they occur.\n Note: this listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeComponentListener", "method_sig": "public static void removeComponentListener (ComponentListener l)", "description": "Removes the specified listener so it no longer receives\n COMPONENT events when they occur."}, {"method_name": "addContainerListener", "method_sig": "public static void addContainerListener (ContainerListener l)", "description": "Adds the specified listener to receive all CONTAINER\n events on each component instance in the Java Virtual Machine as they occur.\n Note: this listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeContainerListener", "method_sig": "public static void removeContainerListener (ContainerListener l)", "description": "Removes the specified listener so it no longer receives\n CONTAINER events when they occur."}, {"method_name": "addFocusListener", "method_sig": "public static void addFocusListener (FocusListener l)", "description": "Adds the specified listener to receive all FOCUS events\n on each component instance in the Java Virtual Machine when they occur.\n Note: this listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeFocusListener", "method_sig": "public static void removeFocusListener (FocusListener l)", "description": "Removes the specified listener so it no longer receives FOCUS\n events when they occur."}, {"method_name": "addKeyListener", "method_sig": "public static void addKeyListener (KeyListener l)", "description": "Adds the specified listener to receive all KEY events on each\n component instance in the Java Virtual Machine when they occur.\n Note: this listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeKeyListener", "method_sig": "public static void removeKeyListener (KeyListener l)", "description": "Removes the specified listener so it no longer receives KEY\n events when they occur."}, {"method_name": "addMouseListener", "method_sig": "public static void addMouseListener (MouseListener l)", "description": "Adds the specified listener to receive all MOUSE events\n on each component instance in the Java Virtual Machine when they occur.\n Note: this listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeMouseListener", "method_sig": "public static void removeMouseListener (MouseListener l)", "description": "Removes the specified listener so it no longer receives\n MOUSE events when they occur."}, {"method_name": "addMouseMotionListener", "method_sig": "public static void addMouseMotionListener (MouseMotionListener l)", "description": "Adds the specified listener to receive all mouse MOTION\n events on each component instance in the Java Virtual Machine when they occur.\n Note: this listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeMouseMotionListener", "method_sig": "public static void removeMouseMotionListener (MouseMotionListener l)", "description": "Removes the specified listener so it no longer receives\n MOTION events when they occur."}, {"method_name": "addWindowListener", "method_sig": "public static void addWindowListener (WindowListener l)", "description": "Adds the specified listener to receive all WINDOW\n events on each component instance in the Java Virtual Machine when they occur.\n Note: this listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeWindowListener", "method_sig": "public static void removeWindowListener (WindowListener l)", "description": "Removes the specified listener so it no longer receives\n WINDOW events when they occur."}, {"method_name": "addActionListener", "method_sig": "public static void addActionListener (ActionListener l)", "description": "Adds the specified listener to receive all ACTION\n events on each component instance in the Java Virtual Machine when they occur.\n Note: This listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeActionListener", "method_sig": "public static void removeActionListener (ActionListener l)", "description": "Removes the specified listener so it no longer receives\n ACTION events when they occur."}, {"method_name": "addAdjustmentListener", "method_sig": "public static void addAdjustmentListener (AdjustmentListener l)", "description": "Adds the specified listener to receive all\n ADJUSTMENT events on each component instance\n in the Java Virtual Machine when they occur.\n Note: this listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeAdjustmentListener", "method_sig": "public static void removeAdjustmentListener (AdjustmentListener l)", "description": "Removes the specified listener so it no longer receives\n ADJUSTMENT events when they occur."}, {"method_name": "addItemListener", "method_sig": "public static void addItemListener (ItemListener l)", "description": "Adds the specified listener to receive all ITEM events\n on each component instance in the Java Virtual Machine when they occur.\n Note: this listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeItemListener", "method_sig": "public static void removeItemListener (ItemListener l)", "description": "Removes the specified listener so it no longer receives ITEM\n events when they occur."}, {"method_name": "addTextListener", "method_sig": "public static void addTextListener (TextListener l)", "description": "Adds the specified listener to receive all TEXT events\n on each component instance in the Java Virtual Machine when they occur.\n Note: this listener is automatically added to all component\n instances created after this method is called.  In addition, it\n is only added to component instances that support this listener type."}, {"method_name": "removeTextListener", "method_sig": "public static void removeTextListener (TextListener l)", "description": "Removes the specified listener so it no longer receives TEXT\n events when they occur."}]}