{"name": "Interface Connector", "module": "jdk.jdi", "package": "com.sun.jdi.connect", "text": "A method of connection between a debugger and a target VM.\n A connector encapsulates exactly one Transport. used\n to establish the connection. Each connector has a set of arguments\n which controls its operation. The arguments are stored as a\n map, keyed by a string. Each implementation defines the string\n argument keys it accepts.", "codes": ["public interface Connector"], "fields": [], "methods": [{"method_name": "name", "method_sig": "String name()", "description": "Returns a short identifier for the connector. Connector implementors\n should follow similar naming conventions as are used with packages\n to avoid name collisions. For example, the Sun connector\n implementations have names prefixed with \"com.sun.jdi.\".\n Not intended for exposure to end-user."}, {"method_name": "description", "method_sig": "String description()", "description": "Returns a human-readable description of this connector\n and its purpose."}, {"method_name": "transport", "method_sig": "Transport transport()", "description": "Returns the transport mechanism used by this connector to establish\n connections with a target VM."}, {"method_name": "defaultArguments", "method_sig": "Map<String, Connector.Argument> defaultArguments()", "description": "Returns the arguments accepted by this Connector and their\n default values. The keys of the returned map are string argument\n names. The values are Connector.Argument containing\n information about the argument and its default value."}]}