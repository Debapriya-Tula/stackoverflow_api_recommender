{"name": "Interface DosFileAttributes", "module": "java.base", "package": "java.nio.file.attribute", "text": "File attributes associated with a file in a file system that supports\n legacy \"DOS\" attributes.\n\n  Usage Example:\n\n    Path file = ...\n    DosFileAttributes attrs = Files.readAttributes(file, DosFileAttributes.class);\n ", "codes": ["public interface DosFileAttributes\nextends BasicFileAttributes"], "fields": [], "methods": [{"method_name": "isReadOnly", "method_sig": "boolean isReadOnly()", "description": "Returns the value of the read-only attribute.\n\n  This attribute is often used as a simple access control mechanism\n to prevent files from being deleted or updated. Whether the file system\n or platform does any enforcement to prevent read-only files\n from being updated is implementation specific."}, {"method_name": "isHidden", "method_sig": "boolean isHidden()", "description": "Returns the value of the hidden attribute.\n\n  This attribute is often used to indicate if the file is visible to\n users."}, {"method_name": "isArchive", "method_sig": "boolean isArchive()", "description": "Returns the value of the archive attribute.\n\n  This attribute is typically used by backup programs."}, {"method_name": "isSystem", "method_sig": "boolean isSystem()", "description": "Returns the value of the system attribute.\n\n  This attribute is often used to indicate that the file is a component\n of the operating system."}]}