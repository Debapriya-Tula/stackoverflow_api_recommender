{"name": "Class ConcurrentHashMap.KeySetView<K,\u200bV>", "module": "java.base", "package": "java.util.concurrent", "text": "A view of a ConcurrentHashMap as a Set of keys, in\n which additions may optionally be enabled by mapping to a\n common value.  This class cannot be directly instantiated.\n See keySet(),\n keySet(V),\n newKeySet(),\n newKeySet(int).", "codes": ["public static class ConcurrentHashMap.KeySetView<K, V>\nextends Object\nimplements Set<K>, Serializable"], "fields": [], "methods": [{"method_name": "getMappedValue", "method_sig": "public V getMappedValue()", "description": "Returns the default mapped value for additions,\n or null if additions are not supported."}, {"method_name": "contains", "method_sig": "public boolean contains (Object o)", "description": "Returns true if this collection contains the specified element.\n More formally, returns true if and only if this collection\n contains at least one element e such that\n Objects.equals(o, e)."}, {"method_name": "remove", "method_sig": "public boolean remove (Object o)", "description": "Removes the key from this map view, by removing the key (and its\n corresponding value) from the backing map.  This method does\n nothing if the key is not in the map."}, {"method_name": "iterator", "method_sig": "public Iterator<K> iterator()", "description": "Returns an iterator over the elements in this collection.\n\n The returned iterator is\n weakly consistent."}, {"method_name": "add", "method_sig": "public boolean add (K e)", "description": "Adds the specified key to this set view by mapping the key to\n the default mapped value in the backing map, if defined."}, {"method_name": "addAll", "method_sig": "public boolean addAll (Collection<? extends K> c)", "description": "Adds all of the elements in the specified collection to this set,\n as if by calling add(K) on each one."}, {"method_name": "getMap", "method_sig": "public ConcurrentHashMap<K, V> getMap()", "description": "Returns the map backing this view."}, {"method_name": "clear", "method_sig": "public final void clear()", "description": "Removes all of the elements from this view, by removing all\n the mappings from the map backing this view."}, {"method_name": "size", "method_sig": "public final int size()", "description": "Description copied from interface:\u00a0Collection"}, {"method_name": "isEmpty", "method_sig": "public final boolean isEmpty()", "description": "Description copied from interface:\u00a0Collection"}, {"method_name": "toArray", "method_sig": "public final Object[] toArray()", "description": "Description copied from interface:\u00a0Collection"}, {"method_name": "toArray", "method_sig": "public final <T> T[] toArray (T[] a)", "description": "Description copied from interface:\u00a0Collection"}, {"method_name": "toString", "method_sig": "public final String toString()", "description": "Returns a string representation of this collection.\n The string representation consists of the string representations\n of the collection's elements in the order they are returned by\n its iterator, enclosed in square brackets (\"[]\").\n Adjacent elements are separated by the characters \", \"\n (comma and space).  Elements are converted to strings as by\n String.valueOf(Object)."}, {"method_name": "containsAll", "method_sig": "public final boolean containsAll (Collection<?> c)", "description": "Description copied from interface:\u00a0Collection"}, {"method_name": "removeAll", "method_sig": "public boolean removeAll (Collection<?> c)", "description": "Description copied from interface:\u00a0Collection"}, {"method_name": "retainAll", "method_sig": "public final boolean retainAll (Collection<?> c)", "description": "Description copied from interface:\u00a0Collection"}]}