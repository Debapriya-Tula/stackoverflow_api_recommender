{"name": "Interface OperatingSystemMXBean", "module": "java.management", "package": "java.lang.management", "text": "The management interface for the operating system on which\n the Java virtual machine is running.\n\n  A Java virtual machine has a single instance of the implementation\n class of this interface.  This instance implementing this interface is\n an MXBean\n that can be obtained by calling\n the ManagementFactory.getOperatingSystemMXBean() method or\n from the platform MBeanServer method.\n\n The ObjectName for uniquely identifying the MXBean for\n the operating system within an MBeanServer is:\n \njava.lang:type=OperatingSystem\n\n\n It can be obtained by calling the\n PlatformManagedObject.getObjectName() method.\n\n  This interface defines several convenient methods for accessing\n system properties about the operating system on which the Java\n virtual machine is running.", "codes": ["public interface OperatingSystemMXBean\nextends PlatformManagedObject"], "fields": [], "methods": [{"method_name": "getName", "method_sig": "String getName()", "description": "Returns the operating system name.\n This method is equivalent to System.getProperty(\"os.name\")."}, {"method_name": "getArch", "method_sig": "String getArch()", "description": "Returns the operating system architecture.\n This method is equivalent to System.getProperty(\"os.arch\")."}, {"method_name": "getVersion", "method_sig": "String getVersion()", "description": "Returns the operating system version.\n This method is equivalent to System.getProperty(\"os.version\")."}, {"method_name": "getAvailableProcessors", "method_sig": "int getAvailableProcessors()", "description": "Returns the number of processors available to the Java virtual machine.\n This method is equivalent to the Runtime.availableProcessors()\n method.\n  This value may change during a particular invocation of\n the virtual machine."}, {"method_name": "getSystemLoadAverage", "method_sig": "double getSystemLoadAverage()", "description": "Returns the system load average for the last minute.\n The system load average is the sum of the number of runnable entities\n queued to the available processors\n and the number of runnable entities running on the available processors\n averaged over a period of time.\n The way in which the load average is calculated is operating system\n specific but is typically a damped time-dependent average.\n \n If the load average is not available, a negative value is returned.\n \n This method is designed to provide a hint about the system load\n and may be queried frequently.\n The load average may be unavailable on some platform where it is\n expensive to implement this method."}]}