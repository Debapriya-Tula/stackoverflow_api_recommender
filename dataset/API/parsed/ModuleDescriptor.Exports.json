{"name": "Class ModuleDescriptor.Exports", "module": "java.base", "package": "java.lang.module", "text": " A package exported by a module, may be qualified or unqualified. ", "codes": ["public static final class ModuleDescriptor.Exports\nextends Object\nimplements Comparable<ModuleDescriptor.Exports>"], "fields": [], "methods": [{"method_name": "modifiers", "method_sig": "public Set<ModuleDescriptor.Exports.Modifier> modifiers()", "description": "Returns the set of modifiers."}, {"method_name": "isQualified", "method_sig": "public boolean isQualified()", "description": "Returns true if this is a qualified export."}, {"method_name": "source", "method_sig": "public String source()", "description": "Returns the package name."}, {"method_name": "targets", "method_sig": "public Set<String> targets()", "description": "For a qualified export, returns the non-empty and immutable set\n of the module names to which the package is exported. For an\n unqualified export, returns an empty set."}, {"method_name": "compareTo", "method_sig": "public int compareTo (ModuleDescriptor.Exports that)", "description": "Compares this module export to another.\n\n  Two Exports objects are compared by comparing the package\n names lexicographically. Where the packages names are equal then the\n sets of modifiers are compared in the same way that module modifiers\n are compared (see ModuleDescriptor.compareTo). Where the package names are equal and\n the set of modifiers are equal then the set of target modules are\n compared. This is done by sorting the names of the target modules\n in ascending order, and according to their natural ordering, and then\n comparing the corresponding elements lexicographically. Where the\n sets differ in size, and the larger set contains all elements of the\n smaller set, then the larger set is considered to succeed the smaller\n set. "}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Computes a hash code for this module export.\n\n  The hash code is based upon the modifiers, the package name,\n and for a qualified export, the set of modules names to which the\n package is exported. It satisfies the general contract of the\n Object.hashCode method."}, {"method_name": "equals", "method_sig": "public boolean equals (Object ob)", "description": "Tests this module export for equality with the given object.\n\n  If the given object is not an Exports then this method\n returns false. Two module exports objects are equal if their\n set of modifiers is equal, the package names are equal and the set\n of target module names is equal. \n This method satisfies the general contract of the Object.equals method. "}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns a string describing the exported package."}]}