{"name": "Interface MethodEntryRequest", "module": "jdk.jdi", "package": "com.sun.jdi.request", "text": "Request for notification when a method is invoked in the target VM.\n When an enabled MethodEntryRequest is satisfied, an\n event set containing a\n MethodEntryEvent\n will be placed on the EventQueue.\n The collection of existing MethodEntryRequests is\n managed by the EventRequestManager", "codes": ["public interface MethodEntryRequest\nextends EventRequest"], "fields": [], "methods": [{"method_name": "addThreadFilter", "method_sig": "void addThreadFilter (ThreadReference thread)", "description": "Restricts the events generated by this request to those in\n the given thread."}, {"method_name": "addClassFilter", "method_sig": "void addClassFilter (ReferenceType refType)", "description": "Restricts the events generated by this request to those whose\n method is in the given reference type or any of its subtypes.\n An event will be generated for any location in a reference type\n that can be safely cast to the given reference type."}, {"method_name": "addClassFilter", "method_sig": "void addClassFilter (String classPattern)", "description": "Restricts the events generated by this request to those\n whose method is in a class whose name matches this restricted\n regular expression. Regular expressions are limited\n to exact matches and patterns that begin with '*' or end with '*';\n for example, \"*.Foo\" or \"java.*\"."}, {"method_name": "addClassExclusionFilter", "method_sig": "void addClassExclusionFilter (String classPattern)", "description": "Restricts the events generated by this request to those\n whose method is in a class whose name does not match this restricted\n regular expression, e.g. \"java.*\" or \"*.Foo\"."}, {"method_name": "addInstanceFilter", "method_sig": "void addInstanceFilter (ObjectReference instance)", "description": "Restricts the events generated by this request to those in\n which the currently executing instance (\"this\") is the object\n specified.\n \n Not all targets support this operation.\n Use VirtualMachine.canUseInstanceFilters()\n to determine if the operation is supported."}]}