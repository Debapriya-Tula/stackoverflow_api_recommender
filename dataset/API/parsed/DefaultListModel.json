{"name": "Class DefaultListModel<E>", "module": "java.desktop", "package": "javax.swing", "text": "This class loosely implements the java.util.Vector\n API, in that it implements the 1.1.x version of\n java.util.Vector, has no collection class support,\n and notifies the ListDataListeners when changes occur.\n Presently it delegates to a Vector,\n in a future release it will be a real Collection implementation.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["public class DefaultListModel<E>\nextends AbstractListModel<E>"], "fields": [], "methods": [{"method_name": "getSize", "method_sig": "public int getSize()", "description": "Returns the number of components in this list.\n \n This method is identical to size, which implements the\n List interface defined in the 1.2 Collections framework.\n This method exists in conjunction with setSize so that\n size is identifiable as a JavaBean property."}, {"method_name": "getElementAt", "method_sig": "public E getElementAt (int index)", "description": "Returns the component at the specified index.\n \nNote: Although this method is not deprecated, the preferred\n    method to use is get(int), which implements the List\n    interface defined in the 1.2 Collections framework.\n "}, {"method_name": "copyInto", "method_sig": "public void copyInto (Object[] anArray)", "description": "Copies the components of this list into the specified array.\n The array must be big enough to hold all the objects in this list,\n else an IndexOutOfBoundsException is thrown."}, {"method_name": "trimToSize", "method_sig": "public void trimToSize()", "description": "Trims the capacity of this list to be the list's current size."}, {"method_name": "ensureCapacity", "method_sig": "public void ensureCapacity (int minCapacity)", "description": "Increases the capacity of this list, if necessary, to ensure\n that it can hold at least the number of components specified by\n the minimum capacity argument."}, {"method_name": "setSize", "method_sig": "public void setSize (int newSize)", "description": "Sets the size of this list."}, {"method_name": "capacity", "method_sig": "public int capacity()", "description": "Returns the current capacity of this list."}, {"method_name": "size", "method_sig": "public int size()", "description": "Returns the number of components in this list."}, {"method_name": "isEmpty", "method_sig": "public boolean isEmpty()", "description": "Tests whether this list has any components."}, {"method_name": "elements", "method_sig": "public Enumeration<E> elements()", "description": "Returns an enumeration of the components of this list."}, {"method_name": "contains", "method_sig": "public boolean contains (Object elem)", "description": "Tests whether the specified object is a component in this list."}, {"method_name": "indexOf", "method_sig": "public int indexOf (Object elem)", "description": "Searches for the first occurrence of elem."}, {"method_name": "indexOf", "method_sig": "public int indexOf (Object elem,\n                   int index)", "description": "Searches for the first occurrence of elem, beginning\n the search at index."}, {"method_name": "lastIndexOf", "method_sig": "public int lastIndexOf (Object elem)", "description": "Returns the index of the last occurrence of elem."}, {"method_name": "lastIndexOf", "method_sig": "public int lastIndexOf (Object elem,\n                       int index)", "description": "Searches backwards for elem, starting from the\n specified index, and returns an index to it."}, {"method_name": "elementAt", "method_sig": "public E elementAt (int index)", "description": "Returns the component at the specified index.\n \nNote: Although this method is not deprecated, the preferred\n    method to use is get(int), which implements the\n    List interface defined in the 1.2 Collections framework.\n "}, {"method_name": "firstElement", "method_sig": "public E firstElement()", "description": "Returns the first component of this list."}, {"method_name": "lastElement", "method_sig": "public E lastElement()", "description": "Returns the last component of the list."}, {"method_name": "setElementAt", "method_sig": "public void setElementAt (E element,\n                         int index)", "description": "Sets the component at the specified index of this\n list to be the specified element. The previous component at that\n position is discarded.\n \nNote: Although this method is not deprecated, the preferred\n    method to use is set(int,Object), which implements the\n    List interface defined in the 1.2 Collections framework.\n "}, {"method_name": "removeElementAt", "method_sig": "public void removeElementAt (int index)", "description": "Deletes the component at the specified index.\n \nNote: Although this method is not deprecated, the preferred\n    method to use is remove(int), which implements the\n    List interface defined in the 1.2 Collections framework.\n "}, {"method_name": "insertElementAt", "method_sig": "public void insertElementAt (E element,\n                            int index)", "description": "Inserts the specified element as a component in this list at the\n specified index.\n \nNote: Although this method is not deprecated, the preferred\n    method to use is add(int,Object), which implements the\n    List interface defined in the 1.2 Collections framework.\n "}, {"method_name": "addElement", "method_sig": "public void addElement (E element)", "description": "Adds the specified component to the end of this list."}, {"method_name": "removeElement", "method_sig": "public boolean removeElement (Object obj)", "description": "Removes the first (lowest-indexed) occurrence of the argument\n from this list."}, {"method_name": "removeAllElements", "method_sig": "public void removeAllElements()", "description": "Removes all components from this list and sets its size to zero.\n \nNote: Although this method is not deprecated, the preferred\n    method to use is clear, which implements the\n    List interface defined in the 1.2 Collections framework.\n "}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns a string that displays and identifies this\n object's properties."}, {"method_name": "toArray", "method_sig": "public Object[] toArray()", "description": "Returns an array containing all of the elements in this list in the\n correct order."}, {"method_name": "get", "method_sig": "public E get (int index)", "description": "Returns the element at the specified position in this list."}, {"method_name": "set", "method_sig": "public E set (int index,\n             E element)", "description": "Replaces the element at the specified position in this list with the\n specified element."}, {"method_name": "add", "method_sig": "public void add (int index,\n                E element)", "description": "Inserts the specified element at the specified position in this list."}, {"method_name": "remove", "method_sig": "public E remove (int index)", "description": "Removes the element at the specified position in this list.\n Returns the element that was removed from the list"}, {"method_name": "clear", "method_sig": "public void clear()", "description": "Removes all of the elements from this list.  The list will\n be empty after this call returns (unless it throws an exception)."}, {"method_name": "removeRange", "method_sig": "public void removeRange (int fromIndex,\n                        int toIndex)", "description": "Deletes the components at the specified range of indexes.\n The removal is inclusive, so specifying a range of (1,5)\n removes the component at index 1 and the component at index 5,\n as well as all components in between."}, {"method_name": "addAll", "method_sig": "public void addAll (Collection<? extends E> c)", "description": "Adds all of the elements present in the collection to the list."}, {"method_name": "addAll", "method_sig": "public void addAll (int index,\n                   Collection<? extends E> c)", "description": "Adds all of the elements present in the collection, starting\n from the specified index."}]}