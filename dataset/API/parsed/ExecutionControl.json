{"name": "Interface ExecutionControl", "module": "jdk.jshell", "package": "jdk.jshell.spi", "text": "This interface specifies the functionality that must provided to implement a\n pluggable JShell execution engine.\n \n The audience for this Service Provider Interface is engineers wishing to\n implement their own version of the execution engine in support of the JShell\n API.\n \n A Snippet is compiled into code wrapped in a 'wrapper class'. The execution\n engine is used by the core JShell implementation to load and, for executable\n Snippets, execute the Snippet.\n \n Methods defined in this interface should only be called by the core JShell\n implementation.", "codes": ["public interface ExecutionControl\nextends AutoCloseable"], "fields": [], "methods": [{"method_name": "load", "method_sig": "void load (ExecutionControl.ClassBytecodes[] cbcs)\n   throws ExecutionControl.ClassInstallException,\n          ExecutionControl.NotImplementedException,\n          ExecutionControl.EngineTerminationException", "description": "Attempts to load new classes."}, {"method_name": "redefine", "method_sig": "void redefine (ExecutionControl.ClassBytecodes[] cbcs)\n       throws ExecutionControl.ClassInstallException,\n              ExecutionControl.NotImplementedException,\n              ExecutionControl.EngineTerminationException", "description": "Attempts to redefine previously loaded classes."}, {"method_name": "invoke", "method_sig": "String invoke (String className,\n              String methodName)\n       throws ExecutionControl.RunException,\n              ExecutionControl.EngineTerminationException,\n              ExecutionControl.InternalException", "description": "Invokes an executable Snippet by calling a method on the specified\n wrapper class. The method must have no arguments and return String."}, {"method_name": "varValue", "method_sig": "String varValue (String className,\n                String varName)\n         throws ExecutionControl.RunException,\n                ExecutionControl.EngineTerminationException,\n                ExecutionControl.InternalException", "description": "Returns the value of a variable."}, {"method_name": "addToClasspath", "method_sig": "void addToClasspath (String path)\n             throws ExecutionControl.EngineTerminationException,\n                    ExecutionControl.InternalException", "description": "Adds the path to the execution class path."}, {"method_name": "stop", "method_sig": "void stop()\n   throws ExecutionControl.EngineTerminationException,\n          ExecutionControl.InternalException", "description": "Interrupts a running invoke."}, {"method_name": "extensionCommand", "method_sig": "Object extensionCommand (String command,\n                        Object arg)\n                 throws ExecutionControl.RunException,\n                        ExecutionControl.EngineTerminationException,\n                        ExecutionControl.InternalException", "description": "Run a non-standard command (or a standard command from a newer version)."}, {"method_name": "close", "method_sig": "void close()", "description": "Shuts down this execution engine. Implementation should free all\n resources held by this execution engine.\n \n No calls to methods on this interface should be made after close."}, {"method_name": "generate", "method_sig": "static ExecutionControl generate (ExecutionEnv env,\n                                 String name,\n                                 Map<String, String> parameters)\n                          throws Throwable", "description": "Search for a provider, then create and return the\n ExecutionControl instance."}, {"method_name": "generate", "method_sig": "static ExecutionControl generate (ExecutionEnv env,\n                                 String spec)\n                          throws Throwable", "description": "Search for a provider, then create and return the\n ExecutionControl instance."}]}