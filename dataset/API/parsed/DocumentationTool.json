{"name": "Interface DocumentationTool", "module": "java.compiler", "package": "javax.tools", "text": "Interface to invoke Java\u2122 programming language documentation tools from\n programs.", "codes": ["public interface DocumentationTool\nextends Tool, OptionChecker"], "fields": [], "methods": [{"method_name": "getTask", "method_sig": "DocumentationTool.DocumentationTask getTask (Writer out,\n                                            JavaFileManager fileManager,\n                                            DiagnosticListener<? super JavaFileObject> diagnosticListener,\n                                            Class<?> docletClass,\n                                            Iterable<String> options,\n                                            Iterable<? extends JavaFileObject> compilationUnits)", "description": "Creates a future for a documentation task with the given\n components and arguments.  The task might not have\n completed as described in the DocumentationTask interface.\n\n If a file manager is provided, it must be able to handle all\n locations defined in DocumentationTool.Location,\n as well as\n StandardLocation.SOURCE_PATH,\n StandardLocation.CLASS_PATH, and\n StandardLocation.PLATFORM_CLASS_PATH."}, {"method_name": "getStandardFileManager", "method_sig": "StandardJavaFileManager getStandardFileManager (DiagnosticListener<? super JavaFileObject> diagnosticListener,\n                                               Locale locale,\n                                               Charset charset)", "description": "Returns a new instance of the standard file manager implementation\n for this tool.  The file manager will use the given diagnostic\n listener for producing any non-fatal diagnostics.  Fatal errors\n will be signaled with the appropriate exceptions.\n\n The standard file manager will be automatically reopened if\n it is accessed after calls to flush or close.\n The standard file manager must be usable with other tools."}]}