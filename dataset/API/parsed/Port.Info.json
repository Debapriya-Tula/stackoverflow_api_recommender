{"name": "Class Port.Info", "module": "java.desktop", "package": "javax.sound.sampled", "text": "The Port.Info class extends Line.Info with additional\n information specific to ports, including the port's name and whether it\n is a source or a target for its mixer. By definition, a port acts as\n either a source or a target to its mixer, but not both. (Audio input\n ports are sources; audio output ports are targets.)\n \n To learn what ports are available, you can retrieve port info objects\n through the getSourceLineInfo and\n getTargetLineInfo methods of the\n Mixer interface. Instances of the Port.Info class may\n also be constructed and used to obtain lines matching the parameters\n specified in the Port.Info object.", "codes": ["public static class Port.Info\nextends Line.Info"], "fields": [{"field_name": "MICROPHONE", "field_sig": "public static final\u00a0Port.Info MICROPHONE", "description": "A type of port that gets audio from a built-in microphone or a\n microphone jack."}, {"field_name": "LINE_IN", "field_sig": "public static final\u00a0Port.Info LINE_IN", "description": "A type of port that gets audio from a line-level audio input jack."}, {"field_name": "COMPACT_DISC", "field_sig": "public static final\u00a0Port.Info COMPACT_DISC", "description": "A type of port that gets audio from a CD-ROM drive."}, {"field_name": "SPEAKER", "field_sig": "public static final\u00a0Port.Info SPEAKER", "description": "A type of port that sends audio to a built-in speaker or a speaker\n jack."}, {"field_name": "HEADPHONE", "field_sig": "public static final\u00a0Port.Info HEADPHONE", "description": "A type of port that sends audio to a headphone jack."}, {"field_name": "LINE_OUT", "field_sig": "public static final\u00a0Port.Info LINE_OUT", "description": "A type of port that sends audio to a line-level audio output jack."}], "methods": [{"method_name": "getName", "method_sig": "public String getName()", "description": "Obtains the name of the port."}, {"method_name": "isSource", "method_sig": "public boolean isSource()", "description": "Indicates whether the port is a source or a target for its mixer."}, {"method_name": "matches", "method_sig": "public boolean matches (Line.Info info)", "description": "Indicates whether this info object specified matches this one. To\n match, the match requirements of the superclass must be met and the\n types must be equal."}, {"method_name": "equals", "method_sig": "public final boolean equals (Object obj)", "description": "Indicates whether the specified object is equal to this info object,\n returning true if the objects are the same."}, {"method_name": "hashCode", "method_sig": "public final int hashCode()", "description": "Returns a hash code value for this info object."}, {"method_name": "toString", "method_sig": "public final String toString()", "description": "Provides a String representation of the port."}]}