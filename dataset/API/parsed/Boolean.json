{"name": "Class Boolean", "module": "java.base", "package": "java.lang", "text": "The Boolean class wraps a value of the primitive type\n boolean in an object. An object of type\n Boolean contains a single field whose type is\n boolean.\n \n In addition, this class provides many methods for\n converting a boolean to a String and a\n String to a boolean, as well as other\n constants and methods useful when dealing with a\n boolean.", "codes": ["public final class Boolean\nextends Object\nimplements Serializable, Comparable<Boolean>"], "fields": [{"field_name": "TRUE", "field_sig": "public static final\u00a0Boolean TRUE", "description": "The Boolean object corresponding to the primitive\n value true."}, {"field_name": "FALSE", "field_sig": "public static final\u00a0Boolean FALSE", "description": "The Boolean object corresponding to the primitive\n value false."}, {"field_name": "TYPE", "field_sig": "public static final\u00a0Class<Boolean> TYPE", "description": "The Class object representing the primitive type boolean."}], "methods": [{"method_name": "parseBoolean", "method_sig": "public static boolean parseBoolean (String s)", "description": "Parses the string argument as a boolean.  The boolean\n returned represents the value true if the string argument\n is not null and is equal, ignoring case, to the string\n \"true\".\n Otherwise, a false value is returned, including for a null\n argument.\n Example: Boolean.parseBoolean(\"True\") returns true.\n Example: Boolean.parseBoolean(\"yes\") returns false."}, {"method_name": "booleanValue", "method_sig": "public boolean booleanValue()", "description": "Returns the value of this Boolean object as a boolean\n primitive."}, {"method_name": "valueOf", "method_sig": "public static Boolean valueOf (boolean b)", "description": "Returns a Boolean instance representing the specified\n boolean value.  If the specified boolean value\n is true, this method returns Boolean.TRUE;\n if it is false, this method returns Boolean.FALSE.\n If a new Boolean instance is not required, this method\n should generally be used in preference to the constructor\n Boolean(boolean), as this method is likely to yield\n significantly better space and time performance."}, {"method_name": "valueOf", "method_sig": "public static Boolean valueOf (String s)", "description": "Returns a Boolean with a value represented by the\n specified string.  The Boolean returned represents a\n true value if the string argument is not null\n and is equal, ignoring case, to the string \"true\".\n Otherwise, a false value is returned, including for a null\n argument."}, {"method_name": "toString", "method_sig": "public static String toString (boolean b)", "description": "Returns a String object representing the specified\n boolean.  If the specified boolean is true, then\n the string \"true\" will be returned, otherwise the\n string \"false\" will be returned."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns a String object representing this Boolean's\n value.  If this object represents the value true,\n a string equal to \"true\" is returned. Otherwise, a\n string equal to \"false\" is returned."}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Returns a hash code for this Boolean object."}, {"method_name": "hashCode", "method_sig": "public static int hashCode (boolean value)", "description": "Returns a hash code for a boolean value; compatible with\n Boolean.hashCode()."}, {"method_name": "equals", "method_sig": "public boolean equals (Object obj)", "description": "Returns true if and only if the argument is not\n null and is a Boolean object that\n represents the same boolean value as this object."}, {"method_name": "getBoolean", "method_sig": "public static boolean getBoolean (String name)", "description": "Returns true if and only if the system property named\n by the argument exists and is equal to, ignoring case, the\n string \"true\".\n A system property is accessible through getProperty, a\n method defined by the System class.   If there is no\n property with the specified name, or if the specified name is\n empty or null, then false is returned."}, {"method_name": "compareTo", "method_sig": "public int compareTo (Boolean b)", "description": "Compares this Boolean instance with another."}, {"method_name": "compare", "method_sig": "public static int compare (boolean x,\n                          boolean y)", "description": "Compares two boolean values.\n The value returned is identical to what would be returned by:\n \n    Boolean.valueOf(x).compareTo(Boolean.valueOf(y))\n "}, {"method_name": "logicalAnd", "method_sig": "public static boolean logicalAnd (boolean a,\n                                 boolean b)", "description": "Returns the result of applying the logical AND operator to the\n specified boolean operands."}, {"method_name": "logicalOr", "method_sig": "public static boolean logicalOr (boolean a,\n                                boolean b)", "description": "Returns the result of applying the logical OR operator to the\n specified boolean operands."}, {"method_name": "logicalXor", "method_sig": "public static boolean logicalXor (boolean a,\n                                 boolean b)", "description": "Returns the result of applying the logical XOR operator to the\n specified boolean operands."}]}