{"name": "Interface OpenMBeanAttributeInfo", "module": "java.management", "package": "javax.management.openmbean", "text": "Describes an attribute of an open MBean.\nThis interface declares the same methods as the class MBeanAttributeInfo.  A class implementing this\n interface (typically OpenMBeanAttributeInfoSupport) should\n extend MBeanAttributeInfo.", "codes": ["public interface OpenMBeanAttributeInfo\nextends OpenMBeanParameterInfo"], "fields": [], "methods": [{"method_name": "isReadable", "method_sig": "boolean isReadable()", "description": "Returns true if the attribute described by this OpenMBeanAttributeInfo\n instance is readable, false otherwise."}, {"method_name": "isWritable", "method_sig": "boolean isWritable()", "description": "Returns true if the attribute described by this OpenMBeanAttributeInfo\n instance is writable, false otherwise."}, {"method_name": "isIs", "method_sig": "boolean isIs()", "description": "Returns true if the attribute described by this OpenMBeanAttributeInfo instance\n is accessed through a isXXX getter\n (applies only to boolean and Boolean values),\n false otherwise."}, {"method_name": "equals", "method_sig": "boolean equals (Object obj)", "description": "Compares the specified obj parameter with this\n OpenMBeanAttributeInfo instance for equality.\n \n Returns true if and only if all of the following statements are true:\n \nobj is non null,\nobj also implements the OpenMBeanAttributeInfo interface,\ntheir names are equal\ntheir open types are equal\ntheir access properties (isReadable, isWritable and isIs) are equal\ntheir default, min, max and legal values are equal.\n\n This ensures that this equals method works properly for obj parameters which are\n different implementations of the OpenMBeanAttributeInfo interface.\n \u00a0"}, {"method_name": "hashCode", "method_sig": "int hashCode()", "description": "Returns the hash code value for this OpenMBeanAttributeInfo instance.\n \n The hash code of an OpenMBeanAttributeInfo instance is the sum of the hash codes\n of all elements of information used in equals comparisons\n (ie: its name, its open type, and its default, min, max and legal values).\n \n This ensures that t1.equals(t2) implies that t1.hashCode()==t2.hashCode()\n for any two OpenMBeanAttributeInfo instances t1 and t2,\n as required by the general contract of the method\n Object.hashCode()."}, {"method_name": "toString", "method_sig": "String toString()", "description": "Returns a string representation of this OpenMBeanAttributeInfo instance.\n \n The string representation consists of the name of this class\n (ie javax.management.openmbean.OpenMBeanAttributeInfo),\n the string representation of the name and open type of the described attribute,\n and the string representation of its default, min, max and legal values."}]}