{"name": "Class JCheckBoxMenuItem", "module": "java.desktop", "package": "javax.swing", "text": "A menu item that can be selected or deselected. If selected, the menu\n item typically appears with a checkmark next to it. If unselected or\n deselected, the menu item appears without a checkmark. Like a regular\n menu item, a check box menu item can have either text or a graphic\n icon associated with it, or both.\n \n Either isSelected/setSelected or\n getState/setState can be used\n to determine/specify the menu item's selection state. The\n preferred methods are isSelected and\n setSelected, which work for all menus and buttons.\n The getState and setState methods exist for\n compatibility with other component sets.\n \n Menu items can be configured, and to some degree controlled, by\n Actions.  Using an\n Action with a menu item has many benefits beyond directly\n configuring a menu item.  Refer to \n Swing Components Supporting Action for more\n details, and you can find more information in How\n to Use Actions, a section in The Java Tutorial.\n \n Some times it is required to select several check box menu items from a menu.\n In this case it is useful that clicking on one check box menu item does not\n close the menu. Such behavior can be controlled either by client\n JComponent.putClientProperty(java.lang.Object, java.lang.Object) or the Look and Feel\n UIManager.put(java.lang.Object, java.lang.Object) property named\n \"CheckBoxMenuItem.doNotCloseOnMouseClick\". The default value is\n false. Setting the property to true prevents the menu from\n closing when it is clicked by the mouse. If the client property is set its\n value is always used; otherwise the L&F property is queried.\n Note: some L&Fs may ignore this property. All built-in L&Fs\n inherit this behaviour.\n \n For further information and examples of using check box menu items,\n see How to Use Menus,\n a section in The Java Tutorial.\n\nWarning: Swing is not thread safe. For more\n information see Swing's Threading\n Policy.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["@JavaBean(description=\"A menu item which can be selected or deselected.\")\npublic class JCheckBoxMenuItem\nextends JMenuItem\nimplements SwingConstants, Accessible"], "fields": [], "methods": [{"method_name": "getUIClassID", "method_sig": "@BeanProperty(bound=false)\npublic String getUIClassID()", "description": "Returns the name of the L&F class\n that renders this component."}, {"method_name": "getState", "method_sig": "public boolean getState()", "description": "Returns the selected-state of the item. This method\n exists for AWT compatibility only.  New code should\n use isSelected() instead."}, {"method_name": "setState", "method_sig": "@BeanProperty(bound=false,\n              hidden=true,\n              description=\"The selection state of the check box menu item\")\npublic void setState (boolean b)", "description": "Sets the selected-state of the item. This method\n exists for AWT compatibility only.  New code should\n use setSelected() instead."}, {"method_name": "getSelectedObjects", "method_sig": "@BeanProperty(bound=false)\npublic Object[] getSelectedObjects()", "description": "Returns an array (length 1) containing the check box menu item\n label or null if the check box is not selected."}, {"method_name": "paramString", "method_sig": "protected String paramString()", "description": "Returns a string representation of this JCheckBoxMenuItem. This method\n is intended to be used only for debugging purposes, and the\n content and format of the returned string may vary between\n implementations. The returned string may be empty but may not\n be null."}, {"method_name": "getAccessibleContext", "method_sig": "@BeanProperty(bound=false)\npublic AccessibleContext getAccessibleContext()", "description": "Gets the AccessibleContext associated with this JCheckBoxMenuItem.\n For JCheckBoxMenuItems, the AccessibleContext takes the form of an\n AccessibleJCheckBoxMenuItem.\n A new AccessibleJCheckBoxMenuItem instance is created if necessary."}]}