{"name": "Class JLabel.AccessibleJLabel", "module": "java.desktop", "package": "javax.swing", "text": "The class used to obtain the accessible role for this object.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["protected class JLabel.AccessibleJLabel\nextends JComponent.AccessibleJComponent\nimplements AccessibleText, AccessibleExtendedComponent"], "fields": [], "methods": [{"method_name": "getAccessibleName", "method_sig": "public String getAccessibleName()", "description": "Get the accessible name of this object."}, {"method_name": "getAccessibleRole", "method_sig": "public AccessibleRole getAccessibleRole()", "description": "Get the role of this object."}, {"method_name": "getAccessibleIcon", "method_sig": "public AccessibleIcon[] getAccessibleIcon()", "description": "Get the AccessibleIcons associated with this object if one\n or more exist.  Otherwise return null."}, {"method_name": "getAccessibleRelationSet", "method_sig": "public AccessibleRelationSet getAccessibleRelationSet()", "description": "Get the AccessibleRelationSet associated with this object if one\n exists.  Otherwise return null."}, {"method_name": "getIndexAtPoint", "method_sig": "public int getIndexAtPoint (Point p)", "description": "Given a point in local coordinates, return the zero-based index\n of the character under that Point.  If the point is invalid,\n this method returns -1."}, {"method_name": "getCharacterBounds", "method_sig": "public Rectangle getCharacterBounds (int i)", "description": "Returns the bounding box of the character at the given\n index in the string.  The bounds are returned in local\n coordinates. If the index is invalid, null is returned."}, {"method_name": "getCharCount", "method_sig": "public int getCharCount()", "description": "Return the number of characters (valid indicies)"}, {"method_name": "getCaretPosition", "method_sig": "public int getCaretPosition()", "description": "Return the zero-based offset of the caret.\n\n Note: That to the right of the caret will have the same index\n value as the offset (the caret is between two characters)."}, {"method_name": "getAtIndex", "method_sig": "public String getAtIndex (int part,\n                         int index)", "description": "Returns the String at a given index."}, {"method_name": "getAfterIndex", "method_sig": "public String getAfterIndex (int part,\n                            int index)", "description": "Returns the String after a given index."}, {"method_name": "getBeforeIndex", "method_sig": "public String getBeforeIndex (int part,\n                             int index)", "description": "Returns the String before a given index."}, {"method_name": "getCharacterAttribute", "method_sig": "public AttributeSet getCharacterAttribute (int i)", "description": "Return the AttributeSet for a given character at a given index"}, {"method_name": "getSelectionStart", "method_sig": "public int getSelectionStart()", "description": "Returns the start offset within the selected text.\n If there is no selection, but there is\n a caret, the start and end offsets will be the same."}, {"method_name": "getSelectionEnd", "method_sig": "public int getSelectionEnd()", "description": "Returns the end offset within the selected text.\n If there is no selection, but there is\n a caret, the start and end offsets will be the same."}, {"method_name": "getSelectedText", "method_sig": "public String getSelectedText()", "description": "Returns the portion of the text that is selected."}, {"method_name": "getToolTipText", "method_sig": "public String getToolTipText()", "description": "Returns the tool tip text"}, {"method_name": "getTitledBorderText", "method_sig": "public String getTitledBorderText()", "description": "Returns the titled border text"}, {"method_name": "getAccessibleKeyBinding", "method_sig": "public AccessibleKeyBinding getAccessibleKeyBinding()", "description": "Returns key bindings associated with this object"}]}