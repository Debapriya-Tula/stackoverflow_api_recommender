{"name": "Class TIFFDirectory", "module": "java.desktop", "package": "javax.imageio.plugins.tiff", "text": "A convenience class for simplifying interaction with TIFF native\n image metadata. A TIFF image metadata tree represents an Image File\n Directory (IFD) from a TIFF 6.0 stream. An IFD consists of a number of\n IFD Entries each of which associates an identifying tag number with\n a compatible value. A TIFFDirectory instance corresponds\n to an IFD and contains a set of TIFFFields each of which\n corresponds to an IFD Entry in the IFD.\n\n When reading, a TIFFDirectory may be created by passing\n the value returned by ImageReader.getImageMetadata() to createFromMetadata(). The TIFFFields in the directory may then\n be obtained using the accessor methods provided in this class.\nWhen writing, an IIOMetadata object for use by one of the\n write() methods of ImageWriter may be\n created from a TIFFDirectory by getAsMetadata().\n The TIFFDirectory itself may be created by construction or\n from the IIOMetadata object returned by\n ImageWriter.getDefaultImageMetadata(). The TIFFFields in the\n directory may be set using the mutator methods provided in this class.\nA TIFFDirectory is aware of the tag numbers in the\n group of TIFFTagSets associated with it. When\n a TIFFDirectory is created from a native image metadata\n object, these tag sets are derived from the tagSets attribute\n of the TIFFIFD node.\nA TIFFDirectory might also have a parent TIFFTag.\n This will occur if the directory represents an IFD other than the root\n IFD of the image. The parent tag is the tag of the IFD Entry which is a\n pointer to the IFD represented by this TIFFDirectory. The\n TIFFTag.isIFDPointer() method of this parent TIFFTag\n must return true.  When a TIFFDirectory is\n created from a native image metadata object, the parent tag set is set\n from the parentTagName attribute of the corresponding\n TIFFIFD node. Note that a TIFFDirectory instance\n which has a non-null parent tag will be contained in the\n data field of a TIFFField instance which has a tag field\n equal to the contained directory's parent tag.\nAs an example consider an Exif image. The TIFFDirectory\n instance corresponding to the Exif IFD in the Exif stream would have parent\n tag TAG_EXIF_IFD_POINTER\n and would include ExifTIFFTagSet in its group of known tag sets.\n The TIFFDirectory corresponding to this Exif IFD will be\n contained in the data field of a TIFFField which will in turn\n be contained in the TIFFDirectory corresponding to the primary\n IFD of the Exif image which will itself have a null-valued\n parent tag.\nNote that this implementation is not synchronized. If multiple\n threads use a TIFFDirectory instance concurrently, and at\n least one of the threads modifies the directory, for example, by adding\n or removing TIFFFields or TIFFTagSets, it\n must be synchronized externally.", "codes": ["public class TIFFDirectory\nextends Object\nimplements Cloneable"], "fields": [], "methods": [{"method_name": "createFromMetadata", "method_sig": "public static TIFFDirectory createFromMetadata (IIOMetadata tiffImageMetadata)\n                                        throws IIOInvalidTreeException", "description": "Creates a TIFFDirectory instance from the contents of\n an image metadata object. The supplied object must support an image\n metadata format supported by the TIFF ImageWriter\n plug-in. This will usually be either the TIFF native image metadata\n format javax_imageio_tiff_image_1.0 or the Java\n Image I/O standard metadata format javax_imageio_1.0."}, {"method_name": "getTagSets", "method_sig": "public TIFFTagSet[] getTagSets()", "description": "Returns the TIFFTagSets of which this directory is aware."}, {"method_name": "addTagSet", "method_sig": "public void addTagSet (TIFFTagSet tagSet)", "description": "Adds an element to the group of TIFFTagSets of which this\n directory is aware."}, {"method_name": "removeTagSet", "method_sig": "public void removeTagSet (TIFFTagSet tagSet)", "description": "Removes an element from the group of TIFFTagSets of which this\n directory is aware."}, {"method_name": "getParentTag", "method_sig": "public TIFFTag getParentTag()", "description": "Returns the parent TIFFTag of this directory if one\n has been defined or null otherwise."}, {"method_name": "getTag", "method_sig": "public TIFFTag getTag (int tagNumber)", "description": "Returns the TIFFTag which has tag number equal to\n tagNumber or null if no such tag\n exists in the TIFFTagSets associated with this\n directory."}, {"method_name": "getNumTIFFFields", "method_sig": "public int getNumTIFFFields()", "description": "Returns the number of TIFFFields in this directory."}, {"method_name": "containsTIFFField", "method_sig": "public boolean containsTIFFField (int tagNumber)", "description": "Determines whether a TIFF field with the given tag number is\n contained in this directory."}, {"method_name": "addTIFFField", "method_sig": "public void addTIFFField (TIFFField f)", "description": "Adds a TIFF field to the directory."}, {"method_name": "getTIFFField", "method_sig": "public TIFFField getTIFFField (int tagNumber)", "description": "Retrieves a TIFF field from the directory."}, {"method_name": "removeTIFFField", "method_sig": "public void removeTIFFField (int tagNumber)", "description": "Removes a TIFF field from the directory."}, {"method_name": "getTIFFFields", "method_sig": "public TIFFField[] getTIFFFields()", "description": "Retrieves all TIFF fields from the directory."}, {"method_name": "removeTIFFFields", "method_sig": "public void removeTIFFFields()", "description": "Removes all TIFF fields from the directory."}, {"method_name": "getAsMetadata", "method_sig": "public IIOMetadata getAsMetadata()", "description": "Converts the directory to a metadata object."}, {"method_name": "clone", "method_sig": "public TIFFDirectory clone()\n                    throws CloneNotSupportedException", "description": "Clones the directory and all the fields contained therein."}]}