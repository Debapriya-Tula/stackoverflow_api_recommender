{"name": "Class ConstantBootstraps", "module": "java.base", "package": "java.lang.invoke", "text": "Bootstrap methods for dynamically-computed constants.\n\n The bootstrap methods in this class will throw a\n NullPointerException for any reference argument that is null,\n unless the argument is specified to be unused or specified to accept a\n null value.", "codes": ["public final class ConstantBootstraps\nextends Object"], "fields": [], "methods": [{"method_name": "nullConstant", "method_sig": "public static Object nullConstant (MethodHandles.Lookup lookup,\n                                  String name,\n                                  Class<?> type)", "description": "Returns a null object reference for the reference type specified\n by type."}, {"method_name": "primitiveClass", "method_sig": "public static Class<?> primitiveClass (MethodHandles.Lookup lookup,\n                                      String name,\n                                      Class<?> type)", "description": "Returns a Class mirror for the primitive type whose type\n descriptor is specified by name."}, {"method_name": "enumConstant", "method_sig": "public static <E extends Enum<E>> E enumConstant (MethodHandles.Lookup lookup,\n                                                 String name,\n                                                 Class<E> type)", "description": "Returns an enum constant of the type specified by type\n with the name specified by name."}, {"method_name": "getStaticFinal", "method_sig": "public static Object getStaticFinal (MethodHandles.Lookup lookup,\n                                    String name,\n                                    Class<?> type,\n                                    Class<?> declaringClass)", "description": "Returns the value of a static final field."}, {"method_name": "getStaticFinal", "method_sig": "public static Object getStaticFinal (MethodHandles.Lookup lookup,\n                                    String name,\n                                    Class<?> type)", "description": "Returns the value of a static final field declared in the class which\n is the same as the field's type (or, for primitive-valued fields,\n declared in the wrapper class.)  This is a simplified form of\n getStaticFinal(MethodHandles.Lookup, String, Class, Class)\n for the case where a class declares distinguished constant instances of\n itself."}, {"method_name": "invoke", "method_sig": "public static Object invoke (MethodHandles.Lookup lookup,\n                            String name,\n                            Class<?> type,\n                            MethodHandle handle,\n                            Object... args)\n                     throws Throwable", "description": "Returns the result of invoking a method handle with the provided\n arguments.\n \n This method behaves as if the method handle to be invoked is the result\n of adapting the given method handle, via MethodHandle.asType(java.lang.invoke.MethodType), to\n adjust the return type to the desired type."}, {"method_name": "fieldVarHandle", "method_sig": "public static VarHandle fieldVarHandle (MethodHandles.Lookup lookup,\n                                       String name,\n                                       Class<VarHandle> type,\n                                       Class<?> declaringClass,\n                                       Class<?> fieldType)", "description": "Finds a VarHandle for an instance field."}, {"method_name": "staticFieldVarHandle", "method_sig": "public static VarHandle staticFieldVarHandle (MethodHandles.Lookup lookup,\n                                             String name,\n                                             Class<VarHandle> type,\n                                             Class<?> declaringClass,\n                                             Class<?> fieldType)", "description": "Finds a VarHandle for a static field."}, {"method_name": "arrayVarHandle", "method_sig": "public static VarHandle arrayVarHandle (MethodHandles.Lookup lookup,\n                                       String name,\n                                       Class<VarHandle> type,\n                                       Class<?> arrayClass)", "description": "Finds a VarHandle for an array type."}]}