{"name": "Class KeyStore.PasswordProtection", "module": "java.base", "package": "java.security", "text": "A password-based implementation of ProtectionParameter.", "codes": ["public static class KeyStore.PasswordProtection\nextends Object\nimplements KeyStore.ProtectionParameter, Destroyable"], "fields": [], "methods": [{"method_name": "getProtectionAlgorithm", "method_sig": "public String getProtectionAlgorithm()", "description": "Gets the name of the protection algorithm.\n If none was set then the keystore provider will use its default\n protection algorithm. The name of the default protection algorithm\n for a given keystore type is set using the\n 'keystore.<type>.keyProtectionAlgorithm' security property.\n For example, the\n keystore.PKCS12.keyProtectionAlgorithm property stores the\n name of the default key protection algorithm used for PKCS12\n keystores. If the security property is not set, an\n implementation-specific algorithm will be used."}, {"method_name": "getProtectionParameters", "method_sig": "public AlgorithmParameterSpec getProtectionParameters()", "description": "Gets the parameters supplied for the protection algorithm."}, {"method_name": "getPassword", "method_sig": "public char[] getPassword()", "description": "Gets the password.\n\n Note that this method returns a reference to the password.\n If a clone of the array is created it is the caller's\n responsibility to zero out the password information\n after it is no longer needed."}, {"method_name": "destroy", "method_sig": "public void destroy()\n             throws DestroyFailedException", "description": "Clears the password."}, {"method_name": "isDestroyed", "method_sig": "public boolean isDestroyed()", "description": "Determines if password has been cleared."}]}