{"name": "Class ActivationID", "module": "java.rmi", "package": "java.rmi.activation", "text": "Activation makes use of special identifiers to denote remote\n objects that can be activated over time. An activation identifier\n (an instance of the class ActivationID) contains several\n pieces of information needed for activating an object:\n \n a remote reference to the object's activator (a RemoteRef\n instance), and\n  a unique identifier (a UID\n instance) for the object.  \n\n An activation identifier for an object can be obtained by registering\n an object with the activation system. Registration is accomplished\n in a few ways: \nvia the Activatable.register method\n via the first Activatable constructor (that takes\n three arguments and both registers and exports the object, and\n via the first Activatable.exportObject method\n that takes the activation descriptor, object and port as arguments;\n this method both registers and exports the object. ", "codes": ["public class ActivationID\nextends Object\nimplements Serializable"], "fields": [], "methods": [{"method_name": "activate", "method_sig": "public Remote activate (boolean force)\n                throws ActivationException,\n                       UnknownObjectException,\n                       RemoteException", "description": "Activate the object for this id."}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Returns a hashcode for the activation id.  Two identifiers that\n refer to the same remote object will have the same hash code."}, {"method_name": "equals", "method_sig": "public boolean equals (Object obj)", "description": "Compares two activation ids for content equality.\n Returns true if both of the following conditions are true:\n 1) the unique identifiers equivalent (by content), and\n 2) the activator specified in each identifier\n    refers to the same remote object."}]}