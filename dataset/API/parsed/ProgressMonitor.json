{"name": "Class ProgressMonitor", "module": "java.desktop", "package": "javax.swing", "text": "A class to monitor the progress of some operation. If it looks\n like the operation will take a while, a progress dialog will be popped up.\n When the ProgressMonitor is created it is given a numeric range and a\n descriptive string. As the operation progresses, call the setProgress method\n to indicate how far along the [min,max] range the operation is.\n Initially, there is no ProgressDialog. After the first millisToDecideToPopup\n milliseconds (default 500) the progress monitor will predict how long\n the operation will take.  If it is longer than millisToPopup (default 2000,\n 2 seconds) a ProgressDialog will be popped up.\n \n From time to time, when the Dialog box is visible, the progress bar will\n be updated when setProgress is called.  setProgress won't always update\n the progress bar, it will only be done if the amount of progress is\n visibly significant.\n\n \n\n For further documentation and examples see\n How to Monitor Progress,\n a section in The Java Tutorial.", "codes": ["public class ProgressMonitor\nextends Object\nimplements Accessible"], "fields": [{"field_name": "accessibleContext", "field_sig": "protected\u00a0AccessibleContext accessibleContext", "description": "The AccessibleContext for the ProgressMonitor"}], "methods": [{"method_name": "setProgress", "method_sig": "public void setProgress (int nv)", "description": "Indicate the progress of the operation being monitored.\n If the specified value is >= the maximum, the progress\n monitor is closed."}, {"method_name": "close", "method_sig": "public void close()", "description": "Indicate that the operation is complete.  This happens automatically\n when the value set by setProgress is >= max, but it may be called\n earlier if the operation ends early."}, {"method_name": "getMinimum", "method_sig": "public int getMinimum()", "description": "Returns the minimum value -- the lower end of the progress value."}, {"method_name": "setMinimum", "method_sig": "public void setMinimum (int m)", "description": "Specifies the minimum value."}, {"method_name": "getMaximum", "method_sig": "public int getMaximum()", "description": "Returns the maximum value -- the higher end of the progress value."}, {"method_name": "setMaximum", "method_sig": "public void setMaximum (int m)", "description": "Specifies the maximum value."}, {"method_name": "isCanceled", "method_sig": "public boolean isCanceled()", "description": "Returns true if the user hits the Cancel button or closes\n the progress dialog."}, {"method_name": "setMillisToDecideToPopup", "method_sig": "public void setMillisToDecideToPopup (int millisToDecideToPopup)", "description": "Specifies the amount of time to wait before deciding whether or\n not to popup a progress monitor."}, {"method_name": "getMillisToDecideToPopup", "method_sig": "public int getMillisToDecideToPopup()", "description": "Returns the amount of time this object waits before deciding whether\n or not to popup a progress monitor."}, {"method_name": "setMillisToPopup", "method_sig": "public void setMillisToPopup (int millisToPopup)", "description": "Specifies the amount of time it will take for the popup to appear.\n (If the predicted time remaining is less than this time, the popup\n won't be displayed.)"}, {"method_name": "getMillisToPopup", "method_sig": "public int getMillisToPopup()", "description": "Returns the amount of time it will take for the popup to appear."}, {"method_name": "setNote", "method_sig": "public void setNote (String note)", "description": "Specifies the additional note that is displayed along with the\n progress message. Used, for example, to show which file the\n is currently being copied during a multiple-file copy."}, {"method_name": "getNote", "method_sig": "public String getNote()", "description": "Specifies the additional note that is displayed along with the\n progress message."}, {"method_name": "getAccessibleContext", "method_sig": "public AccessibleContext getAccessibleContext()", "description": "Gets the AccessibleContext for the\n ProgressMonitor"}]}