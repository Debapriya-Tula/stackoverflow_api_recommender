{"name": "Class JavacTask", "module": "jdk.compiler", "package": "com.sun.source.util", "text": "Provides access to functionality specific to the JDK Java Compiler, javac.", "codes": ["public abstract class JavacTask\nextends Object\nimplements JavaCompiler.CompilationTask"], "fields": [], "methods": [{"method_name": "instance", "method_sig": "public static JavacTask instance (ProcessingEnvironment processingEnvironment)", "description": "Returns the JavacTask for a ProcessingEnvironment.\n If the compiler is being invoked using a\n CompilationTask,\n then that task will be returned."}, {"method_name": "parse", "method_sig": "public abstract Iterable<? extends CompilationUnitTree> parse()\n                                                       throws IOException", "description": "Parses the specified files returning a list of abstract syntax trees."}, {"method_name": "analyze", "method_sig": "public abstract Iterable<? extends Element> analyze()\n                                             throws IOException", "description": "Completes all analysis."}, {"method_name": "generate", "method_sig": "public abstract Iterable<? extends JavaFileObject> generate()\n                                                     throws IOException", "description": "Generates code."}, {"method_name": "setTaskListener", "method_sig": "public abstract void setTaskListener (TaskListener taskListener)", "description": "Sets a specified listener to receive notification of events\n describing the progress of this compilation task.\n\n If another listener is receiving notifications as a result of a prior\n call of this method, then that listener will no longer receive notifications.\n\n Informally, this method is equivalent to calling removeTaskListener for\n any listener that has been previously set, followed by addTaskListener\n for the new listener."}, {"method_name": "addTaskListener", "method_sig": "public abstract void addTaskListener (TaskListener taskListener)", "description": "Adds a specified listener so that it receives notification of events\n describing the progress of this compilation task.\n\n This method may be called at any time before or during the compilation."}, {"method_name": "removeTaskListener", "method_sig": "public abstract void removeTaskListener (TaskListener taskListener)", "description": "Removes the specified listener so that it no longer receives\n notification of events describing the progress of this\n compilation task.\n\n This method may be called at any time before or during the compilation."}, {"method_name": "getTypeMirror", "method_sig": "public abstract TypeMirror getTypeMirror (Iterable<? extends Tree> path)", "description": "Returns a type mirror of the tree node determined by the specified path.\n This method has been superceded by methods on\n Trees."}, {"method_name": "getElements", "method_sig": "public abstract Elements getElements()", "description": "Returns a utility object for dealing with program elements."}, {"method_name": "getTypes", "method_sig": "public abstract Types getTypes()", "description": "Returns a utility object for dealing with type mirrors."}]}