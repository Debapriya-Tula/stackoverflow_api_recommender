{"name": "Interface XMLSignature", "module": "java.xml.crypto", "package": "javax.xml.crypto.dsig", "text": "A representation of the XML Signature element as\n defined in the \n W3C Recommendation for XML-Signature Syntax and Processing.\n This class contains methods for signing and validating XML signatures\n with behavior as defined by the W3C specification. The XML Schema Definition\n is defined as:\n \n <element name=\"Signature\" type=\"ds:SignatureType\"/>\n <complexType name=\"SignatureType\">\n    <sequence>\n      <element ref=\"ds:SignedInfo\"/>\n      <element ref=\"ds:SignatureValue\"/>\n      <element ref=\"ds:KeyInfo\" minOccurs=\"0\"/>\n      <element ref=\"ds:Object\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n    </sequence>\n    <attribute name=\"Id\" type=\"ID\" use=\"optional\"/>\n </complexType>\n \n\n An XMLSignature instance may be created by invoking one of the\n newXMLSignature methods of the\n XMLSignatureFactory class.\n\n If the contents of the underlying document containing the\n XMLSignature are subsequently modified, the behavior is\n undefined.\n\n Note that this class is named XMLSignature rather than\n Signature to avoid naming clashes with the existing\n java.security.Signature class.", "codes": ["public interface XMLSignature\nextends XMLStructure"], "fields": [{"field_name": "XMLNS", "field_sig": "static final\u00a0String XMLNS", "description": "The XML Namespace URI of the W3C Recommendation for XML-Signature\n Syntax and Processing."}], "methods": [{"method_name": "validate", "method_sig": "boolean validate (XMLValidateContext validateContext)\n          throws XMLSignatureException", "description": "Validates the signature according to the\n \n core validation processing rules. This method validates the\n signature using the existing state, it does not unmarshal and\n reinitialize the contents of the XMLSignature using the\n location information specified in the context.\n\n This method only validates the signature the first time it is\n invoked. On subsequent invocations, it returns a cached result."}, {"method_name": "getKeyInfo", "method_sig": "KeyInfo getKeyInfo()", "description": "Returns the key info of this XMLSignature."}, {"method_name": "getSignedInfo", "method_sig": "SignedInfo getSignedInfo()", "description": "Returns the signed info of this XMLSignature."}, {"method_name": "getObjects", "method_sig": "List<XMLObject> getObjects()", "description": "Returns an unmodifiable\n list of XMLObjects contained in this XMLSignature."}, {"method_name": "getId", "method_sig": "String getId()", "description": "Returns the optional Id of this XMLSignature."}, {"method_name": "getSignatureValue", "method_sig": "XMLSignature.SignatureValue getSignatureValue()", "description": "Returns the signature value of this XMLSignature."}, {"method_name": "sign", "method_sig": "void sign (XMLSignContext signContext)\n   throws MarshalException,\n          XMLSignatureException", "description": "Signs this XMLSignature.\n\n If this method throws an exception, this XMLSignature and\n the signContext parameter will be left in the state that\n it was in prior to the invocation."}, {"method_name": "getKeySelectorResult", "method_sig": "KeySelectorResult getKeySelectorResult()", "description": "Returns the result of the KeySelector, if specified, after\n this XMLSignature has been signed or validated."}]}