{"name": "Class PipedWriter", "module": "java.base", "package": "java.io", "text": "Piped character-output streams.", "codes": ["public class PipedWriter\nextends Writer"], "fields": [], "methods": [{"method_name": "connect", "method_sig": "public void connect (PipedReader snk)\n             throws IOException", "description": "Connects this piped writer to a receiver. If this object\n is already connected to some other piped reader, an\n IOException is thrown.\n \n If snk is an unconnected piped reader and\n src is an unconnected piped writer, they may\n be connected by either the call:\n \n src.connect(snk)\n or the call:\n \n snk.connect(src)\n The two calls have the same effect."}, {"method_name": "write", "method_sig": "public void write (int c)\n           throws IOException", "description": "Writes the specified char to the piped output stream.\n If a thread was reading data characters from the connected piped input\n stream, but the thread is no longer alive, then an\n IOException is thrown.\n \n Implements the write method of Writer."}, {"method_name": "write", "method_sig": "public void write (char[] cbuf,\n                  int off,\n                  int len)\n           throws IOException", "description": "Writes len characters from the specified character array\n starting at offset off to this piped output stream.\n This method blocks until all the characters are written to the output\n stream.\n If a thread was reading data characters from the connected piped input\n stream, but the thread is no longer alive, then an\n IOException is thrown."}, {"method_name": "flush", "method_sig": "public void flush()\n           throws IOException", "description": "Flushes this output stream and forces any buffered output characters\n to be written out.\n This will notify any readers that characters are waiting in the pipe."}, {"method_name": "close", "method_sig": "public void close()\n           throws IOException", "description": "Closes this piped output stream and releases any system resources\n associated with this stream. This stream may no longer be used for\n writing characters."}]}