{"name": "Class FocusManager", "module": "java.desktop", "package": "javax.swing", "text": "This class has been obsoleted by the 1.4 focus APIs. While client code may\n still use this class, developers are strongly encouraged to use\n java.awt.KeyboardFocusManager and\n java.awt.DefaultKeyboardFocusManager instead.\n \n Please see\n \n How to Use the Focus Subsystem,\n a section in The Java Tutorial, and the\n Focus Specification\n for more information.", "codes": ["public abstract class FocusManager\nextends DefaultKeyboardFocusManager"], "fields": [{"field_name": "FOCUS_MANAGER_CLASS_PROPERTY", "field_sig": "public static final\u00a0String FOCUS_MANAGER_CLASS_PROPERTY", "description": "This field is obsolete, and its use is discouraged since its\n specification is incompatible with the 1.4 focus APIs.\n The current FocusManager is no longer a property of the UI.\n Client code must query for the current FocusManager using\n KeyboardFocusManager.getCurrentKeyboardFocusManager().\n See the Focus Specification for more information."}], "methods": [{"method_name": "getCurrentManager", "method_sig": "public static FocusManager getCurrentManager()", "description": "Returns the current KeyboardFocusManager instance\n for the calling thread's context."}, {"method_name": "setCurrentManager", "method_sig": "public static void setCurrentManager (FocusManager aFocusManager)\n                              throws SecurityException", "description": "Sets the current KeyboardFocusManager instance\n for the calling thread's context. If null is\n specified, then the current KeyboardFocusManager\n is replaced with a new instance of\n DefaultKeyboardFocusManager.\n \n If a SecurityManager is installed,\n the calling thread must be granted the AWTPermission\n \"replaceKeyboardFocusManager\" in order to replace the\n the current KeyboardFocusManager.\n If this permission is not granted,\n this method will throw a SecurityException,\n and the current KeyboardFocusManager will be unchanged."}, {"method_name": "disableSwingFocusManager", "method_sig": "@Deprecated\npublic static void disableSwingFocusManager()", "description": "Changes the current KeyboardFocusManager's default\n FocusTraversalPolicy to\n DefaultFocusTraversalPolicy."}, {"method_name": "isFocusManagerEnabled", "method_sig": "@Deprecated\npublic static boolean isFocusManagerEnabled()", "description": "Returns whether the application has invoked\n disableSwingFocusManager()."}]}