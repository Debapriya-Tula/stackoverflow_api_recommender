{"name": "Interface ExecutableType", "module": "java.compiler", "package": "javax.lang.model.type", "text": "Represents the type of an executable.  An executable\n is a method, constructor, or initializer.\n\n  The executable is\n represented as when viewed as a method (or constructor or\n initializer) of some reference type.\n If that reference type is parameterized, then its actual\n type arguments are substituted into any types returned by the methods of\n this interface.", "codes": ["public interface ExecutableType\nextends TypeMirror"], "fields": [], "methods": [{"method_name": "getTypeVariables", "method_sig": "List<? extends TypeVariable> getTypeVariables()", "description": "Returns the type variables declared by the formal type parameters\n of this executable."}, {"method_name": "getReturnType", "method_sig": "TypeMirror getReturnType()", "description": "Returns the return type of this executable.\n Returns a NoType with kind VOID\n if this executable is not a method, or is a method that does not\n return a value."}, {"method_name": "getParameterTypes", "method_sig": "List<? extends TypeMirror> getParameterTypes()", "description": "Returns the types of this executable's formal parameters."}, {"method_name": "getReceiverType", "method_sig": "TypeMirror getReceiverType()", "description": "Returns the receiver type of this executable,\n or NoType with\n kind NONE\n if the executable has no receiver type.\n\n An executable which is an instance method, or a constructor of an\n inner class, has a receiver type derived from the declaring type.\n\n An executable which is a static method, or a constructor of a\n non-inner class, or an initializer (static or instance), has no\n receiver type."}, {"method_name": "getThrownTypes", "method_sig": "List<? extends TypeMirror> getThrownTypes()", "description": "Returns the exceptions and other throwables listed in this\n executable's throws clause."}]}