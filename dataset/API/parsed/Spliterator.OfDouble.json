{"name": "Interface Spliterator.OfDouble", "module": "java.base", "package": "java.util", "text": "A Spliterator specialized for double values.", "codes": ["public static interface Spliterator.OfDouble\nextends Spliterator.OfPrimitive<Double, DoubleConsumer, Spliterator.OfDouble>"], "fields": [], "methods": [{"method_name": "tryAdvance", "method_sig": "default boolean tryAdvance (Consumer<? super Double> action)", "description": "If a remaining element exists, performs the given action on it,\n returning true; else returns false.  If this\n Spliterator is Spliterator.ORDERED the action is performed on the\n next element in encounter order.  Exceptions thrown by the\n action are relayed to the caller."}, {"method_name": "forEachRemaining", "method_sig": "default void forEachRemaining (Consumer<? super Double> action)", "description": "Performs the given action for each remaining element, sequentially in\n the current thread, until all elements have been processed or the action\n throws an exception.  If this Spliterator is Spliterator.ORDERED, actions\n are performed in encounter order.  Exceptions thrown by the action\n are relayed to the caller."}]}