{"name": "Class SimpleScriptContext", "module": "java.scripting", "package": "javax.script", "text": "Simple implementation of ScriptContext.", "codes": ["public class SimpleScriptContext\nextends Object\nimplements ScriptContext"], "fields": [{"field_name": "writer", "field_sig": "protected\u00a0Writer writer", "description": "This is the writer to be used to output from scripts.\n By default, a PrintWriter based on System.out\n is used. Accessor methods getWriter, setWriter are used to manage\n this field."}, {"field_name": "errorWriter", "field_sig": "protected\u00a0Writer errorWriter", "description": "This is the writer to be used to output errors from scripts.\n By default, a PrintWriter based on System.err is\n used. Accessor methods getErrorWriter, setErrorWriter are used to manage\n this field."}, {"field_name": "reader", "field_sig": "protected\u00a0Reader reader", "description": "This is the reader to be used for input from scripts.\n By default, a InputStreamReader based on System.in\n is used and default charset is used by this reader. Accessor methods\n getReader, setReader are used to manage this field."}, {"field_name": "engineScope", "field_sig": "protected\u00a0Bindings engineScope", "description": "This is the engine scope bindings.\n By default, a SimpleBindings is used. Accessor\n methods setBindings, getBindings are used to manage this field."}, {"field_name": "globalScope", "field_sig": "protected\u00a0Bindings globalScope", "description": "This is the global scope bindings.\n By default, a null value (which means no global scope) is used. Accessor\n methods setBindings, getBindings are used to manage this field."}], "methods": [{"method_name": "setBindings", "method_sig": "public void setBindings (Bindings bindings,\n                        int scope)", "description": "Sets a Bindings of attributes for the given scope.  If the value\n of scope is ENGINE_SCOPE the given Bindings replaces the\n engineScope field.  If the value\n of scope is GLOBAL_SCOPE the given Bindings replaces the\n globalScope field."}, {"method_name": "getAttribute", "method_sig": "public Object getAttribute (String name)", "description": "Retrieves the value of the attribute with the given name in\n the scope occurring earliest in the search order.  The order\n is determined by the numeric value of the scope parameter (lowest\n scope values first.)"}, {"method_name": "getAttribute", "method_sig": "public Object getAttribute (String name,\n                           int scope)", "description": "Gets the value of an attribute in a given scope."}, {"method_name": "removeAttribute", "method_sig": "public Object removeAttribute (String name,\n                              int scope)", "description": "Remove an attribute in a given scope."}, {"method_name": "setAttribute", "method_sig": "public void setAttribute (String name,\n                         Object value,\n                         int scope)", "description": "Sets the value of an attribute in a given scope. If the scope is GLOBAL_SCOPE\n and no Bindings is set for GLOBAL_SCOPE, then setAttribute call is a no-op."}, {"method_name": "getAttributesScope", "method_sig": "public int getAttributesScope (String name)", "description": "Get the lowest scope in which an attribute is defined."}, {"method_name": "getBindings", "method_sig": "public Bindings getBindings (int scope)", "description": "Returns the value of the engineScope field if specified scope is\n ENGINE_SCOPE.  Returns the value of the globalScope field if the specified scope is\n GLOBAL_SCOPE."}]}