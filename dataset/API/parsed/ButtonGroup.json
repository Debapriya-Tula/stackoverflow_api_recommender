{"name": "Class ButtonGroup", "module": "java.desktop", "package": "javax.swing", "text": "This class is used to create a multiple-exclusion scope for\n a set of buttons. Creating a set of buttons with the\n same ButtonGroup object means that\n turning \"on\" one of those buttons\n turns off all other buttons in the group.\n \n A ButtonGroup can be used with\n any set of objects that inherit from AbstractButton.\n Typically a button group contains instances of\n JRadioButton,\n JRadioButtonMenuItem,\n or JToggleButton.\n It wouldn't make sense to put an instance of\n JButton or JMenuItem\n in a button group\n because JButton and JMenuItem\n don't implement the selected state.\n \n Initially, all buttons in the group are unselected.\n \n For examples and further information on using button groups see\n How to Use Radio Buttons,\n a section in The Java Tutorial.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["public class ButtonGroup\nextends Object\nimplements Serializable"], "fields": [{"field_name": "buttons", "field_sig": "protected\u00a0Vector<AbstractButton> buttons", "description": "The list of buttons participating in this group."}], "methods": [{"method_name": "add", "method_sig": "public void add (AbstractButton b)", "description": "Adds the button to the group."}, {"method_name": "remove", "method_sig": "public void remove (AbstractButton b)", "description": "Removes the button from the group."}, {"method_name": "clearSelection", "method_sig": "public void clearSelection()", "description": "Clears the selection such that none of the buttons\n in the ButtonGroup are selected."}, {"method_name": "getElements", "method_sig": "public Enumeration<AbstractButton> getElements()", "description": "Returns all the buttons that are participating in\n this group."}, {"method_name": "getSelection", "method_sig": "public ButtonModel getSelection()", "description": "Returns the model of the selected button."}, {"method_name": "setSelected", "method_sig": "public void setSelected (ButtonModel m,\n                        boolean b)", "description": "Sets the selected value for the ButtonModel.\n Only one button in the group may be selected at a time."}, {"method_name": "isSelected", "method_sig": "public boolean isSelected (ButtonModel m)", "description": "Returns whether a ButtonModel is selected."}, {"method_name": "getButtonCount", "method_sig": "public int getButtonCount()", "description": "Returns the number of buttons in the group."}]}