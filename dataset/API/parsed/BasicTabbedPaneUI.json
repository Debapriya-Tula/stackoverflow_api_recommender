{"name": "Class BasicTabbedPaneUI", "module": "java.desktop", "package": "javax.swing.plaf.basic", "text": "A Basic L&F implementation of TabbedPaneUI.", "codes": ["public class BasicTabbedPaneUI\nextends TabbedPaneUI\nimplements SwingConstants"], "fields": [{"field_name": "tabPane", "field_sig": "protected\u00a0JTabbedPane tabPane", "description": "The tab pane"}, {"field_name": "highlight", "field_sig": "protected\u00a0Color highlight", "description": "Highlight color"}, {"field_name": "lightHighlight", "field_sig": "protected\u00a0Color lightHighlight", "description": "Light highlight color"}, {"field_name": "shadow", "field_sig": "protected\u00a0Color shadow", "description": "Shadow color"}, {"field_name": "darkShadow", "field_sig": "protected\u00a0Color darkShadow", "description": "Dark shadow color"}, {"field_name": "focus", "field_sig": "protected\u00a0Color focus", "description": "Focus color"}, {"field_name": "textIconGap", "field_sig": "protected\u00a0int textIconGap", "description": "Text icon gap"}, {"field_name": "tabRunOverlay", "field_sig": "protected\u00a0int tabRunOverlay", "description": "Tab run overlay"}, {"field_name": "tabInsets", "field_sig": "protected\u00a0Insets tabInsets", "description": "Tab insets"}, {"field_name": "selectedTabPadInsets", "field_sig": "protected\u00a0Insets selectedTabPadInsets", "description": "Selected tab insets"}, {"field_name": "tabAreaInsets", "field_sig": "protected\u00a0Insets tabAreaInsets", "description": "Tab area insets"}, {"field_name": "contentBorderInsets", "field_sig": "protected\u00a0Insets contentBorderInsets", "description": "Content border insets"}, {"field_name": "upKey", "field_sig": "@Deprecated\nprotected\u00a0KeyStroke upKey", "description": "As of Java 2 platform v1.3 this previously undocumented field is no\n longer used.\n Key bindings are now defined by the LookAndFeel, please refer to\n the key bindings specification for further details."}, {"field_name": "downKey", "field_sig": "@Deprecated\nprotected\u00a0KeyStroke downKey", "description": "As of Java 2 platform v1.3 this previously undocumented field is no\n longer used.\n Key bindings are now defined by the LookAndFeel, please refer to\n the key bindings specification for further details."}, {"field_name": "leftKey", "field_sig": "@Deprecated\nprotected\u00a0KeyStroke leftKey", "description": "As of Java 2 platform v1.3 this previously undocumented field is no\n longer used.\n Key bindings are now defined by the LookAndFeel, please refer to\n the key bindings specification for further details."}, {"field_name": "rightKey", "field_sig": "@Deprecated\nprotected\u00a0KeyStroke rightKey", "description": "As of Java 2 platform v1.3 this previously undocumented field is no\n longer used.\n Key bindings are now defined by the LookAndFeel, please refer to\n the key bindings specification for further details."}, {"field_name": "tabRuns", "field_sig": "protected\u00a0int[] tabRuns", "description": "Tab runs"}, {"field_name": "runCount", "field_sig": "protected\u00a0int runCount", "description": "Run count"}, {"field_name": "selectedRun", "field_sig": "protected\u00a0int selectedRun", "description": "Selected run"}, {"field_name": "rects", "field_sig": "protected\u00a0Rectangle[] rects", "description": "Tab rects"}, {"field_name": "maxTabHeight", "field_sig": "protected\u00a0int maxTabHeight", "description": "Maximum tab height"}, {"field_name": "maxTabWidth", "field_sig": "protected\u00a0int maxTabWidth", "description": "Maximum tab width"}, {"field_name": "tabChangeListener", "field_sig": "protected\u00a0ChangeListener tabChangeListener", "description": "Tab change listener"}, {"field_name": "propertyChangeListener", "field_sig": "protected\u00a0PropertyChangeListener propertyChangeListener", "description": "Property change listener"}, {"field_name": "mouseListener", "field_sig": "protected\u00a0MouseListener mouseListener", "description": "Mouse change listener"}, {"field_name": "focusListener", "field_sig": "protected\u00a0FocusListener focusListener", "description": "Focus change listener"}, {"field_name": "calcRect", "field_sig": "protected transient\u00a0Rectangle calcRect", "description": "A rectangle used for general layout calculations in order\n to avoid constructing many new Rectangles on the fly."}], "methods": [{"method_name": "createUI", "method_sig": "public static ComponentUI createUI (JComponent c)", "description": "Create a UI."}, {"method_name": "createLayoutManager", "method_sig": "protected LayoutManager createLayoutManager()", "description": "Invoked by installUI to create\n a layout manager object to manage\n the JTabbedPane."}, {"method_name": "installComponents", "method_sig": "protected void installComponents()", "description": "Creates and installs any required subcomponents for the JTabbedPane.\n Invoked by installUI."}, {"method_name": "createScrollButton", "method_sig": "protected JButton createScrollButton (int direction)", "description": "Creates and returns a JButton that will provide the user\n with a way to scroll the tabs in a particular direction. The\n returned JButton must be instance of UIResource."}, {"method_name": "uninstallComponents", "method_sig": "protected void uninstallComponents()", "description": "Removes any installed subcomponents from the JTabbedPane.\n Invoked by uninstallUI."}, {"method_name": "installDefaults", "method_sig": "protected void installDefaults()", "description": "Install the defaults."}, {"method_name": "uninstallDefaults", "method_sig": "protected void uninstallDefaults()", "description": "Uninstall the defaults."}, {"method_name": "installListeners", "method_sig": "protected void installListeners()", "description": "Install the listeners."}, {"method_name": "uninstallListeners", "method_sig": "protected void uninstallListeners()", "description": "Uninstall the listeners."}, {"method_name": "createMouseListener", "method_sig": "protected MouseListener createMouseListener()", "description": "Creates a mouse listener."}, {"method_name": "createFocusListener", "method_sig": "protected FocusListener createFocusListener()", "description": "Creates a focus listener."}, {"method_name": "createChangeListener", "method_sig": "protected ChangeListener createChangeListener()", "description": "Creates a change listener."}, {"method_name": "createPropertyChangeListener", "method_sig": "protected PropertyChangeListener createPropertyChangeListener()", "description": "Creates a property change listener."}, {"method_name": "installKeyboardActions", "method_sig": "protected void installKeyboardActions()", "description": "Installs the keyboard actions."}, {"method_name": "uninstallKeyboardActions", "method_sig": "protected void uninstallKeyboardActions()", "description": "Uninstalls the keyboard actions."}, {"method_name": "setRolloverTab", "method_sig": "protected void setRolloverTab (int index)", "description": "Sets the tab the mouse is currently over to index.\n index will be -1 if the mouse is no longer over any\n tab. No checking is done to ensure the passed in index identifies a\n valid tab."}, {"method_name": "getRolloverTab", "method_sig": "protected int getRolloverTab()", "description": "Returns the tab the mouse is currently over, or -1 if the mouse is no\n longer over any tab."}, {"method_name": "getBaseline", "method_sig": "public int getBaseline (JComponent c,\n                       int width,\n                       int height)", "description": "Returns the baseline."}, {"method_name": "getBaselineResizeBehavior", "method_sig": "public Component.BaselineResizeBehavior getBaselineResizeBehavior (JComponent c)", "description": "Returns an enum indicating how the baseline of the component\n changes as the size changes."}, {"method_name": "getBaseline", "method_sig": "protected int getBaseline (int tab)", "description": "Returns the baseline for the specified tab."}, {"method_name": "getBaselineOffset", "method_sig": "protected int getBaselineOffset()", "description": "Returns the amount the baseline is offset by.  This is typically\n the same as getTabLabelShiftY."}, {"method_name": "paintTabArea", "method_sig": "protected void paintTabArea (Graphics g,\n                            int tabPlacement,\n                            int selectedIndex)", "description": "Paints the tabs in the tab area.\n Invoked by paint().\n The graphics parameter must be a valid Graphics\n object.  Tab placement may be either:\n JTabbedPane.TOP, JTabbedPane.BOTTOM,\n JTabbedPane.LEFT, or JTabbedPane.RIGHT.\n The selected index must be a valid tabbed pane tab index (0 to\n tab count - 1, inclusive) or -1 if no tab is currently selected.\n The handling of invalid parameters is unspecified."}, {"method_name": "paintTab", "method_sig": "protected void paintTab (Graphics g,\n                        int tabPlacement,\n                        Rectangle[] rects,\n                        int tabIndex,\n                        Rectangle iconRect,\n                        Rectangle textRect)", "description": "Paints a tab."}, {"method_name": "layoutLabel", "method_sig": "protected void layoutLabel (int tabPlacement,\n                           FontMetrics metrics,\n                           int tabIndex,\n                           String title,\n                           Icon icon,\n                           Rectangle tabRect,\n                           Rectangle iconRect,\n                           Rectangle textRect,\n                           boolean isSelected)", "description": "Laysout a label."}, {"method_name": "paintIcon", "method_sig": "protected void paintIcon (Graphics g,\n                         int tabPlacement,\n                         int tabIndex,\n                         Icon icon,\n                         Rectangle iconRect,\n                         boolean isSelected)", "description": "Paints an icon."}, {"method_name": "paintText", "method_sig": "protected void paintText (Graphics g,\n                         int tabPlacement,\n                         Font font,\n                         FontMetrics metrics,\n                         int tabIndex,\n                         String title,\n                         Rectangle textRect,\n                         boolean isSelected)", "description": "Paints text."}, {"method_name": "getTabLabelShiftX", "method_sig": "protected int getTabLabelShiftX (int tabPlacement,\n                                int tabIndex,\n                                boolean isSelected)", "description": "Returns the tab label shift x."}, {"method_name": "getTabLabelShiftY", "method_sig": "protected int getTabLabelShiftY (int tabPlacement,\n                                int tabIndex,\n                                boolean isSelected)", "description": "Returns the tab label shift y."}, {"method_name": "paintFocusIndicator", "method_sig": "protected void paintFocusIndicator (Graphics g,\n                                   int tabPlacement,\n                                   Rectangle[] rects,\n                                   int tabIndex,\n                                   Rectangle iconRect,\n                                   Rectangle textRect,\n                                   boolean isSelected)", "description": "Paints the focus indicator."}, {"method_name": "paintTabBorder", "method_sig": "protected void paintTabBorder (Graphics g,\n                              int tabPlacement,\n                              int tabIndex,\n                              int x,\n                              int y,\n                              int w,\n                              int h,\n                              boolean isSelected)", "description": "this function draws the border around each tab\n note that this function does now draw the background of the tab.\n that is done elsewhere"}, {"method_name": "paintTabBackground", "method_sig": "protected void paintTabBackground (Graphics g,\n                                  int tabPlacement,\n                                  int tabIndex,\n                                  int x,\n                                  int y,\n                                  int w,\n                                  int h,\n                                  boolean isSelected)", "description": "Paints the tab background."}, {"method_name": "paintContentBorder", "method_sig": "protected void paintContentBorder (Graphics g,\n                                  int tabPlacement,\n                                  int selectedIndex)", "description": "Paints the content border."}, {"method_name": "paintContentBorderTopEdge", "method_sig": "protected void paintContentBorderTopEdge (Graphics g,\n                                         int tabPlacement,\n                                         int selectedIndex,\n                                         int x,\n                                         int y,\n                                         int w,\n                                         int h)", "description": "Paints the content border top edge."}, {"method_name": "paintContentBorderLeftEdge", "method_sig": "protected void paintContentBorderLeftEdge (Graphics g,\n                                          int tabPlacement,\n                                          int selectedIndex,\n                                          int x,\n                                          int y,\n                                          int w,\n                                          int h)", "description": "Paints the content border left edge."}, {"method_name": "paintContentBorderBottomEdge", "method_sig": "protected void paintContentBorderBottomEdge (Graphics g,\n                                            int tabPlacement,\n                                            int selectedIndex,\n                                            int x,\n                                            int y,\n                                            int w,\n                                            int h)", "description": "Paints the content border bottom edge."}, {"method_name": "paintContentBorderRightEdge", "method_sig": "protected void paintContentBorderRightEdge (Graphics g,\n                                           int tabPlacement,\n                                           int selectedIndex,\n                                           int x,\n                                           int y,\n                                           int w,\n                                           int h)", "description": "Paints the content border right edge."}, {"method_name": "getTabBounds", "method_sig": "public Rectangle getTabBounds (JTabbedPane pane,\n                              int i)", "description": "Returns the bounds of the specified tab index.  The bounds are\n with respect to the JTabbedPane's coordinate space."}, {"method_name": "tabForCoordinate", "method_sig": "public int tabForCoordinate (JTabbedPane pane,\n                            int x,\n                            int y)", "description": "Returns the tab index which intersects the specified point\n in the JTabbedPane's coordinate space."}, {"method_name": "getTabBounds", "method_sig": "protected Rectangle getTabBounds (int tabIndex,\n                                 Rectangle dest)", "description": "Returns the bounds of the specified tab in the coordinate space\n of the JTabbedPane component.  This is required because the tab rects\n are by default defined in the coordinate space of the component where\n they are rendered, which could be the JTabbedPane\n (for WRAP_TAB_LAYOUT) or a ScrollableTabPanel (SCROLL_TAB_LAYOUT).\n This method should be used whenever the tab rectangle must be relative\n to the JTabbedPane itself and the result should be placed in a\n designated Rectangle object (rather than instantiating and returning\n a new Rectangle each time). The tab index parameter must be a valid\n tabbed pane tab index (0 to tab count - 1, inclusive).  The destination\n rectangle parameter must be a valid Rectangle instance.\n The handling of invalid parameters is unspecified."}, {"method_name": "getVisibleComponent", "method_sig": "protected Component getVisibleComponent()", "description": "Returns the visible component."}, {"method_name": "setVisibleComponent", "method_sig": "protected void setVisibleComponent (Component component)", "description": "Sets the visible component."}, {"method_name": "assureRectsCreated", "method_sig": "protected void assureRectsCreated (int tabCount)", "description": "Assure the rectangles are created."}, {"method_name": "expandTabRunsArray", "method_sig": "protected void expandTabRunsArray()", "description": "Expands the tab runs array."}, {"method_name": "getRunForTab", "method_sig": "protected int getRunForTab (int tabCount,\n                           int tabIndex)", "description": "Returns the run for a tab."}, {"method_name": "lastTabInRun", "method_sig": "protected int lastTabInRun (int tabCount,\n                           int run)", "description": "Returns the last tab in a run."}, {"method_name": "getTabRunOverlay", "method_sig": "protected int getTabRunOverlay (int tabPlacement)", "description": "Returns the tab run overlay."}, {"method_name": "getTabRunIndent", "method_sig": "protected int getTabRunIndent (int tabPlacement,\n                              int run)", "description": "Returns the tab run indent."}, {"method_name": "shouldPadTabRun", "method_sig": "protected boolean shouldPadTabRun (int tabPlacement,\n                                  int run)", "description": "Returns whether or not the tab run should be padded."}, {"method_name": "shouldRotateTabRuns", "method_sig": "protected boolean shouldRotateTabRuns (int tabPlacement)", "description": "Returns whether or not the tab run should be rotated."}, {"method_name": "getIconForTab", "method_sig": "protected Icon getIconForTab (int tabIndex)", "description": "Returns the icon for a tab."}, {"method_name": "getTextViewForTab", "method_sig": "protected View getTextViewForTab (int tabIndex)", "description": "Returns the text View object required to render stylized text (HTML) for\n the specified tab or null if no specialized text rendering is needed\n for this tab. This is provided to support html rendering inside tabs."}, {"method_name": "calculateTabHeight", "method_sig": "protected int calculateTabHeight (int tabPlacement,\n                                 int tabIndex,\n                                 int fontHeight)", "description": "Calculates the tab height."}, {"method_name": "calculateMaxTabHeight", "method_sig": "protected int calculateMaxTabHeight (int tabPlacement)", "description": "Calculates the maximum tab height."}, {"method_name": "calculateTabWidth", "method_sig": "protected int calculateTabWidth (int tabPlacement,\n                                int tabIndex,\n                                FontMetrics metrics)", "description": "Calculates the tab width."}, {"method_name": "calculateMaxTabWidth", "method_sig": "protected int calculateMaxTabWidth (int tabPlacement)", "description": "Calculates the maximum tab width."}, {"method_name": "calculateTabAreaHeight", "method_sig": "protected int calculateTabAreaHeight (int tabPlacement,\n                                     int horizRunCount,\n                                     int maxTabHeight)", "description": "Calculates the tab area height."}, {"method_name": "calculateTabAreaWidth", "method_sig": "protected int calculateTabAreaWidth (int tabPlacement,\n                                    int vertRunCount,\n                                    int maxTabWidth)", "description": "Calculates the tab area width."}, {"method_name": "getTabInsets", "method_sig": "protected Insets getTabInsets (int tabPlacement,\n                              int tabIndex)", "description": "Returns the tab insets."}, {"method_name": "getSelectedTabPadInsets", "method_sig": "protected Insets getSelectedTabPadInsets (int tabPlacement)", "description": "Returns the selected tab pad insets."}, {"method_name": "getTabAreaInsets", "method_sig": "protected Insets getTabAreaInsets (int tabPlacement)", "description": "Returns the tab area insets."}, {"method_name": "getContentBorderInsets", "method_sig": "protected Insets getContentBorderInsets (int tabPlacement)", "description": "Returns the content border insets."}, {"method_name": "getFontMetrics", "method_sig": "protected FontMetrics getFontMetrics()", "description": "Returns the font metrics."}, {"method_name": "navigateSelectedTab", "method_sig": "protected void navigateSelectedTab (int direction)", "description": "Navigate the selected tab."}, {"method_name": "selectNextTabInRun", "method_sig": "protected void selectNextTabInRun (int current)", "description": "Select the next tab in the run."}, {"method_name": "selectPreviousTabInRun", "method_sig": "protected void selectPreviousTabInRun (int current)", "description": "Select the previous tab in the run."}, {"method_name": "selectNextTab", "method_sig": "protected void selectNextTab (int current)", "description": "Select the next tab."}, {"method_name": "selectPreviousTab", "method_sig": "protected void selectPreviousTab (int current)", "description": "Select the previous tab."}, {"method_name": "selectAdjacentRunTab", "method_sig": "protected void selectAdjacentRunTab (int tabPlacement,\n                                    int tabIndex,\n                                    int offset)", "description": "Selects an adjacent run of tabs."}, {"method_name": "getFocusIndex", "method_sig": "protected int getFocusIndex()", "description": "Returns the index of the tab that has focus."}, {"method_name": "getTabRunOffset", "method_sig": "protected int getTabRunOffset (int tabPlacement,\n                              int tabCount,\n                              int tabIndex,\n                              boolean forward)", "description": "Returns the tab run offset."}, {"method_name": "getPreviousTabIndex", "method_sig": "protected int getPreviousTabIndex (int base)", "description": "Returns the previous tab index."}, {"method_name": "getNextTabIndex", "method_sig": "protected int getNextTabIndex (int base)", "description": "Returns the next tab index."}, {"method_name": "getNextTabIndexInRun", "method_sig": "protected int getNextTabIndexInRun (int tabCount,\n                                   int base)", "description": "Returns the next tab index in the run."}, {"method_name": "getPreviousTabIndexInRun", "method_sig": "protected int getPreviousTabIndexInRun (int tabCount,\n                                       int base)", "description": "Returns the previous tab index in the run."}, {"method_name": "getPreviousTabRun", "method_sig": "protected int getPreviousTabRun (int baseRun)", "description": "Returns the previous tab run."}, {"method_name": "getNextTabRun", "method_sig": "protected int getNextTabRun (int baseRun)", "description": "Returns the next tab run."}, {"method_name": "rotateInsets", "method_sig": "protected static void rotateInsets (Insets topInsets,\n                                   Insets targetInsets,\n                                   int targetPlacement)", "description": "Rotates the insets."}]}