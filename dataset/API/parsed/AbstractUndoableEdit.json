{"name": "Class AbstractUndoableEdit", "module": "java.desktop", "package": "javax.swing.undo", "text": "An abstract implementation of UndoableEdit,\n implementing simple responses to all boolean methods in\n that interface.", "codes": ["public class AbstractUndoableEdit\nextends Object\nimplements UndoableEdit, Serializable"], "fields": [{"field_name": "UndoName", "field_sig": "protected static final\u00a0String UndoName", "description": "String returned by getUndoPresentationName;\n as of Java 2 platform v1.3.1 this field is no longer used. This value\n is now localized and comes from the defaults table with key\n AbstractUndoableEdit.undoText."}, {"field_name": "RedoName", "field_sig": "protected static final\u00a0String RedoName", "description": "String returned by getRedoPresentationName;\n as of Java 2 platform v1.3.1 this field is no longer used. This value\n is now localized and comes from the defaults table with key\n AbstractUndoableEdit.redoText."}], "methods": [{"method_name": "die", "method_sig": "public void die()", "description": "Sets alive to false. Note that this\n is a one way operation; dead edits cannot be resurrected.\n Sending undo or redo to\n a dead edit results in an exception being thrown.\n\n Typically an edit is killed when it is consolidated by\n another edit's addEdit or replaceEdit\n method, or when it is dequeued from an UndoManager."}, {"method_name": "undo", "method_sig": "public void undo()\n          throws CannotUndoException", "description": "Throws CannotUndoException if canUndo\n returns false. Sets hasBeenDone\n to false. Subclasses should override to undo the\n operation represented by this edit. Override should begin with\n a call to super."}, {"method_name": "canUndo", "method_sig": "public boolean canUndo()", "description": "Returns true if this edit is alive\n and hasBeenDone is true."}, {"method_name": "redo", "method_sig": "public void redo()\n          throws CannotRedoException", "description": "Throws CannotRedoException if canRedo\n returns false. Sets hasBeenDone to true.\n Subclasses should override to redo the operation represented by\n this edit. Override should begin with a call to super."}, {"method_name": "canRedo", "method_sig": "public boolean canRedo()", "description": "Returns true if this edit is alive\n and hasBeenDone is false."}, {"method_name": "addEdit", "method_sig": "public boolean addEdit (UndoableEdit anEdit)", "description": "This default implementation returns false."}, {"method_name": "replaceEdit", "method_sig": "public boolean replaceEdit (UndoableEdit anEdit)", "description": "This default implementation returns false."}, {"method_name": "isSignificant", "method_sig": "public boolean isSignificant()", "description": "This default implementation returns true."}, {"method_name": "getPresentationName", "method_sig": "public String getPresentationName()", "description": "This default implementation returns \"\". Used by\n getUndoPresentationName and\n getRedoPresentationName to\n construct the strings they return. Subclasses should override to\n return an appropriate description of the operation this edit\n represents."}, {"method_name": "getUndoPresentationName", "method_sig": "public String getUndoPresentationName()", "description": "Retreives the value from the defaults table with key\n AbstractUndoableEdit.undoText and returns\n that value followed by a space, followed by\n getPresentationName.\n If getPresentationName returns \"\",\n then the defaults value is returned alone."}, {"method_name": "getRedoPresentationName", "method_sig": "public String getRedoPresentationName()", "description": "Retreives the value from the defaults table with key\n AbstractUndoableEdit.redoText and returns\n that value followed by a space, followed by\n getPresentationName.\n If getPresentationName returns \"\",\n then the defaults value is returned alone."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns a string that displays and identifies this\n object's properties."}]}