{"name": "Class SnippetEvent", "module": "jdk.jshell", "package": "jdk.jshell", "text": "A description of a change to a Snippet. These are generated by direct changes\n to state with JShell.eval(String) or\n JShell.drop(Snippet),\n or indirectly by these same methods as\n dependencies change or Snippets are overwritten. For direct changes, the\n causeSnippet() is null.\n \nSnippetEvent is immutable: an access to\n any of its methods will always return the same result.\n and thus is thread-safe.", "codes": ["public class SnippetEvent\nextends Object"], "fields": [], "methods": [{"method_name": "snippet", "method_sig": "public Snippet snippet()", "description": "The Snippet which has changed"}, {"method_name": "previousStatus", "method_sig": "public Snippet.Status previousStatus()", "description": "The status before the transition. If this event describes a Snippet\n creation return NONEXISTENT."}, {"method_name": "status", "method_sig": "public Snippet.Status status()", "description": "The after status. Note: this may be the same as the previous status (not\n all changes cause a Status change."}, {"method_name": "isSignatureChange", "method_sig": "public boolean isSignatureChange()", "description": "Indicates whether the signature has changed. Coming in or out of\n definition is always a signature change.\n An overwritten Snippet\n (status == OVERWRITTEN)\n is always false as responsibility for the\n definition has passed to the overwriting definition."}, {"method_name": "causeSnippet", "method_sig": "public Snippet causeSnippet()", "description": "Either the snippet whose change caused this update or\n null. This returns null if this change is the\n creation of a new Snippet via\n eval or it is the\n explicit drop of a Snippet with\n drop."}, {"method_name": "exception", "method_sig": "public JShellException exception()", "description": "An instance of UnresolvedReferenceException, if an unresolved reference was\n encountered, or an instance of EvalException if an exception was thrown\n during execution, otherwise null."}, {"method_name": "value", "method_sig": "public String value()", "description": "The result value of successful run. The value is null if not executed\n or an exception was thrown."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Return a string representation of the event"}]}