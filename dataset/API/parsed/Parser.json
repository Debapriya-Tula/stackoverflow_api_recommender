{"name": "Interface Parser", "module": "jdk.scripting.nashorn", "package": "jdk.nashorn.api.tree", "text": "Represents nashorn ECMAScript parser instance.", "codes": ["@Deprecated(since=\"11\",\n            forRemoval=true)\npublic interface Parser"], "fields": [], "methods": [{"method_name": "parse", "method_sig": "CompilationUnitTree parse (File file,\n                          DiagnosticListener listener)\n                   throws IOException,\n                          NashornException", "description": "Parses the source file and returns compilation unit tree"}, {"method_name": "parse", "method_sig": "CompilationUnitTree parse (Path path,\n                          DiagnosticListener listener)\n                   throws IOException,\n                          NashornException", "description": "Parses the source Path and returns compilation unit tree"}, {"method_name": "parse", "method_sig": "CompilationUnitTree parse (URL url,\n                          DiagnosticListener listener)\n                   throws IOException,\n                          NashornException", "description": "Parses the source url and returns compilation unit tree"}, {"method_name": "parse", "method_sig": "CompilationUnitTree parse (String name,\n                          Reader reader,\n                          DiagnosticListener listener)\n                   throws IOException,\n                          NashornException", "description": "Parses the reader and returns compilation unit tree"}, {"method_name": "parse", "method_sig": "CompilationUnitTree parse (String name,\n                          String code,\n                          DiagnosticListener listener)\n                   throws NashornException", "description": "Parses the string source and returns compilation unit tree"}, {"method_name": "parse", "method_sig": "CompilationUnitTree parse (ScriptObjectMirror scriptObj,\n                          DiagnosticListener listener)\n                   throws NashornException", "description": "Parses the source from script object and returns compilation unit tree"}, {"method_name": "create", "method_sig": "static Parser create (String... options)\n              throws IllegalArgumentException", "description": "Factory method to create a new instance of Parser."}]}