{"name": "Class XECPrivateKeySpec", "module": "java.base", "package": "java.security.spec", "text": "A class representing elliptic curve private keys as defined in RFC 7748,\n including the curve and other algorithm parameters. The private key is\n represented as an encoded scalar value. The decoding procedure defined in\n the RFC includes an operation that forces certain bits of the key to either\n 1 or 0. This operation is known as \"pruning\" or \"clamping\" the private key.\n All arrays in this spec are unpruned, and implementations will need to prune\n the array before using it in any numerical operations.", "codes": ["public class XECPrivateKeySpec\nextends Object\nimplements KeySpec"], "fields": [], "methods": [{"method_name": "getParams", "method_sig": "public AlgorithmParameterSpec getParams()", "description": "Get the algorithm parameters that define the curve and other settings."}, {"method_name": "getScalar", "method_sig": "public byte[] getScalar()", "description": "Get the scalar value encoded as an unpruned byte array. A new copy of\n the array is returned each time this method is called."}]}