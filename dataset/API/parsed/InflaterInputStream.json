{"name": "Class InflaterInputStream", "module": "java.base", "package": "java.util.zip", "text": "This class implements a stream filter for uncompressing data in the\n \"deflate\" compression format. It is also used as the basis for other\n decompression filters, such as GZIPInputStream.", "codes": ["public class InflaterInputStream\nextends FilterInputStream"], "fields": [{"field_name": "inf", "field_sig": "protected\u00a0Inflater inf", "description": "Decompressor for this stream."}, {"field_name": "buf", "field_sig": "protected\u00a0byte[] buf", "description": "Input buffer for decompression."}, {"field_name": "len", "field_sig": "protected\u00a0int len", "description": "Length of input buffer."}], "methods": [{"method_name": "read", "method_sig": "public int read()\n         throws IOException", "description": "Reads a byte of uncompressed data. This method will block until\n enough input is available for decompression."}, {"method_name": "read", "method_sig": "public int read (byte[] b,\n                int off,\n                int len)\n         throws IOException", "description": "Reads uncompressed data into an array of bytes. If len is not\n zero, the method will block until some input can be decompressed; otherwise,\n no bytes are read and 0 is returned."}, {"method_name": "available", "method_sig": "public int available()\n              throws IOException", "description": "Returns 0 after EOF has been reached, otherwise always return 1.\n \n Programs should not count on this method to return the actual number\n of bytes that could be read without blocking."}, {"method_name": "skip", "method_sig": "public long skip (long n)\n          throws IOException", "description": "Skips specified number of bytes of uncompressed data."}, {"method_name": "close", "method_sig": "public void close()\n           throws IOException", "description": "Closes this input stream and releases any system resources associated\n with the stream."}, {"method_name": "fill", "method_sig": "protected void fill()\n             throws IOException", "description": "Fills input buffer with more data to decompress."}, {"method_name": "markSupported", "method_sig": "public boolean markSupported()", "description": "Tests if this input stream supports the mark and\n reset methods. The markSupported\n method of InflaterInputStream returns\n false."}, {"method_name": "mark", "method_sig": "public void mark (int readlimit)", "description": "Marks the current position in this input stream.\n\n  The mark method of InflaterInputStream\n does nothing."}, {"method_name": "reset", "method_sig": "public void reset()\n           throws IOException", "description": "Repositions this stream to the position at the time the\n mark method was last called on this input stream.\n\n  The method reset for class\n InflaterInputStream does nothing except throw an\n IOException."}]}