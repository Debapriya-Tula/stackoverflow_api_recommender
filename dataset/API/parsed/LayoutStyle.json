{"name": "Class LayoutStyle", "module": "java.desktop", "package": "javax.swing", "text": "LayoutStyle provides information about how to position\n components.  This class is primarily useful for visual tools and\n layout managers.  Most developers will not need to use this class.\n \n You typically don't set or create a\n LayoutStyle.  Instead use the static method\n getInstance to obtain the current instance.", "codes": ["public abstract class LayoutStyle\nextends Object"], "fields": [], "methods": [{"method_name": "setInstance", "method_sig": "public static void setInstance (LayoutStyle style)", "description": "Sets the shared instance of LayoutStyle.  Specifying\n null results in using the LayoutStyle from\n the current LookAndFeel."}, {"method_name": "getInstance", "method_sig": "public static LayoutStyle getInstance()", "description": "Returns the shared instance of LayoutStyle.  If an instance\n has not been specified in setInstance, this will return\n the LayoutStyle from the current LookAndFeel."}, {"method_name": "getPreferredGap", "method_sig": "public abstract int getPreferredGap (JComponent component1,\n                                    JComponent component2,\n                                    LayoutStyle.ComponentPlacement type,\n                                    int position,\n                                    Container parent)", "description": "Returns the amount of space to use between two components.\n The return value indicates the distance to place\n component2 relative to component1.\n For example, the following returns the amount of space to place\n between component2 and component1\n when component2 is placed vertically above\n component1:\n \n   int gap = getPreferredGap(component1, component2,\n                             ComponentPlacement.RELATED,\n                             SwingConstants.NORTH, parent);\n \n The type parameter indicates the relation between\n the two components.  If the two components will be contained in\n the same parent and are showing similar logically related\n items, use RELATED.  If the two components will be\n contained in the same parent but show logically unrelated items\n use UNRELATED.  Some look and feels may not\n distinguish between the RELATED and\n UNRELATED types.\n \n The return value is not intended to take into account the\n current size and position of component2 or\n component1.  The return value may take into\n consideration various properties of the components.  For\n example, the space may vary based on font size, or the preferred\n size of the component."}, {"method_name": "getContainerGap", "method_sig": "public abstract int getContainerGap (JComponent component,\n                                    int position,\n                                    Container parent)", "description": "Returns the amount of space to place between the component and specified\n edge of its parent."}]}