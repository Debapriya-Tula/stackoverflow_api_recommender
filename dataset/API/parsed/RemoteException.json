{"name": "Class RemoteException", "module": "java.rmi", "package": "java.rmi", "text": "A RemoteException is the common superclass for a number of\n communication-related exceptions that may occur during the execution of a\n remote method call.  Each method of a remote interface, an interface that\n extends java.rmi.Remote, must list\n RemoteException in its throws clause.\n\n As of release 1.4, this exception has been retrofitted to conform to\n the general purpose exception-chaining mechanism.  The \"wrapped remote\n exception\" that may be provided at construction time and accessed via\n the public detail field is now known as the cause, and\n may be accessed via the Throwable.getCause() method, as well as\n the aforementioned \"legacy field.\"\n\n Invoking the method Throwable.initCause(Throwable) on an\n instance of RemoteException always throws IllegalStateException.", "codes": ["public class RemoteException\nextends IOException"], "fields": [{"field_name": "detail", "field_sig": "public\u00a0Throwable detail", "description": "The cause of the remote exception.\n\n This field predates the general-purpose exception chaining facility.\n The Throwable.getCause() method is now the preferred means of\n obtaining this information."}], "methods": [{"method_name": "getMessage", "method_sig": "public String getMessage()", "description": "Returns the detail message, including the message from the cause, if\n any, of this exception."}, {"method_name": "getCause", "method_sig": "public Throwable getCause()", "description": "Returns the cause of this exception.  This method returns the value\n of the detail field."}]}