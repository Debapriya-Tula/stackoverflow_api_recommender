{"name": "Class JSeparator", "module": "java.desktop", "package": "javax.swing", "text": "JSeparator provides a general purpose component for\n implementing divider lines - most commonly used as a divider\n between menu items that breaks them up into logical groupings.\n Instead of using JSeparator directly,\n you can use the JMenu or JPopupMenu\naddSeparator method to create and add a separator.\n JSeparators may also be used elsewhere in a GUI\n wherever a visual divider is useful.\n\n \n\n For more information and examples see\n How to Use Menus,\n a section in The Java Tutorial.\n\nWarning: Swing is not thread safe. For more\n information see Swing's Threading\n Policy.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["@JavaBean(defaultProperty=\"UI\",\n          description=\"A divider between menu items.\")\npublic class JSeparator\nextends JComponent\nimplements SwingConstants, Accessible"], "fields": [], "methods": [{"method_name": "getUI", "method_sig": "public SeparatorUI getUI()", "description": "Returns the L&F object that renders this component."}, {"method_name": "setUI", "method_sig": "@BeanProperty(hidden=true,\n              visualUpdate=true,\n              description=\"The UI object that implements the Component\\'s LookAndFeel.\")\npublic void setUI (SeparatorUI ui)", "description": "Sets the L&F object that renders this component."}, {"method_name": "updateUI", "method_sig": "public void updateUI()", "description": "Resets the UI property to a value from the current look and feel."}, {"method_name": "getUIClassID", "method_sig": "@BeanProperty(bound=false)\npublic String getUIClassID()", "description": "Returns the name of the L&F class that renders this component."}, {"method_name": "getOrientation", "method_sig": "public int getOrientation()", "description": "Returns the orientation of this separator."}, {"method_name": "setOrientation", "method_sig": "@BeanProperty(preferred=true,\n              visualUpdate=true,\n              enumerationValues={\"SwingConstants.HORIZONTAL\",\"SwingConstants.VERTICAL\"},\n              description=\"The orientation of the separator.\")\npublic void setOrientation (int orientation)", "description": "Sets the orientation of the separator.\n The default value of this property is HORIZONTAL."}, {"method_name": "paramString", "method_sig": "protected String paramString()", "description": "Returns a string representation of this JSeparator.\n This method\n is intended to be used only for debugging purposes, and the\n content and format of the returned string may vary between\n implementations. The returned string may be empty but may not\n be null."}, {"method_name": "getAccessibleContext", "method_sig": "@BeanProperty(bound=false)\npublic AccessibleContext getAccessibleContext()", "description": "Gets the AccessibleContext associated with this JSeparator.\n For separators, the AccessibleContext takes the form of an\n AccessibleJSeparator.\n A new AccessibleJSeparator instance is created if necessary."}]}