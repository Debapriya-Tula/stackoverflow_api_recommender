{"name": "Interface X509IssuerSerial", "module": "java.xml.crypto", "package": "javax.xml.crypto.dsig.keyinfo", "text": "A representation of the XML X509IssuerSerial element as\n defined in the \n W3C Recommendation for XML-Signature Syntax and Processing.\n An X509IssuerSerial object contains an X.509 issuer\n distinguished name (DN) and serial number pair. The XML schema definition is\n defined as:\n\n \n   <element name=\"X509IssuerSerial\" type=\"ds:X509IssuerSerialType\"/>\n   <complexType name=\"X509IssuerSerialType\">\n     <sequence>\n       <element name=\"X509IssuerName\" type=\"string\"/>\n       <element name=\"X509SerialNumber\" type=\"integer\"/>\n     </sequence>\n   </complexType>\n \n\n An X509IssuerSerial instance may be created by invoking the\n newX509IssuerSerial method\n of the KeyInfoFactory class, and passing it a\n String and BigInteger representing the X.500\n DN and serial number. Here is an example of creating an\n X509IssuerSerial from the issuer DN and serial number of an\n existing X509Certificate:\n \n KeyInfoFactory factory = KeyInfoFactory.getInstance(\"DOM\");\n X509IssuerSerial issuer = factory.newX509IssuerSerial\n     (cert.getIssuerX500Principal().getName(), cert.getSerialNumber());\n ", "codes": ["public interface X509IssuerSerial\nextends XMLStructure"], "fields": [], "methods": [{"method_name": "getIssuerName", "method_sig": "String getIssuerName()", "description": "Returns the X.500 distinguished name of this\n X509IssuerSerial in\n RFC 2253 String format."}, {"method_name": "getSerialNumber", "method_sig": "BigInteger getSerialNumber()", "description": "Returns the serial number of this X509IssuerSerial."}]}