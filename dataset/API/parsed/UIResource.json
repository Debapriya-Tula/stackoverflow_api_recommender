{"name": "Interface UIResource", "module": "java.desktop", "package": "javax.swing.plaf", "text": "This interface is used to mark objects created by ComponentUI delegates.\n The ComponentUI.installUI() and\n ComponentUI.uninstallUI() methods can use this interface\n to decide if a properties value has been overridden.  For example, the\n JList cellRenderer property is initialized by BasicListUI.installUI(),\n only if it's initial value is null:\n \n if (list.getCellRenderer() == null) {\n     list.setCellRenderer((ListCellRenderer)(UIManager.get(\"List.cellRenderer\")));\n }\n \n At uninstallUI() time we reset the property to null if its value\n is an instance of UIResource:\n \n if (list.getCellRenderer() instanceof UIResource) {\n     list.setCellRenderer(null);\n }\n\n This pattern applies to all properties except the java.awt.Component\n properties font, foreground, and background.  If one of these\n properties isn't initialized, or is explicitly set to null,\n its container provides the value.  For this reason the\n \"== null\" is unreliable when installUI() is called\n to dynamically change a components look and feel.  So at installUI()\n time we check to see if the current value is a UIResource:\n\n if (!(list.getFont() instanceof UIResource)) {\n     list.setFont(UIManager.getFont(\"List.font\"));\n }\n ", "codes": ["public interface UIResource"], "fields": [], "methods": []}