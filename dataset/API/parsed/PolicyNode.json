{"name": "Interface PolicyNode", "module": "java.base", "package": "java.security.cert", "text": "An immutable valid policy tree node as defined by the PKIX certification\n path validation algorithm.\n\n One of the outputs of the PKIX certification path validation\n algorithm is a valid policy tree, which includes the policies that\n were determined to be valid, how this determination was reached,\n and any policy qualifiers encountered. This tree is of depth\n n, where n is the length of the certification\n path that has been validated.\n\n Most applications will not need to examine the valid policy tree.\n They can achieve their policy processing goals by setting the\n policy-related parameters in PKIXParameters. However,\n the valid policy tree is available for more sophisticated applications,\n especially those that process policy qualifiers.\n\n PKIXCertPathValidatorResult.getPolicyTree returns the root node of the\n valid policy tree. The tree can be traversed using the\n getChildren and getParent methods.\n Data about a particular node can be retrieved using other methods of\n PolicyNode.\n\n Concurrent Access\nAll PolicyNode objects must be immutable and\n thread-safe. Multiple threads may concurrently invoke the methods defined\n in this class on a single PolicyNode object (or more than one)\n with no ill effects. This stipulation applies to all public fields and\n methods of this class and any added or overridden by subclasses.", "codes": ["public interface PolicyNode"], "fields": [], "methods": [{"method_name": "getParent", "method_sig": "PolicyNode getParent()", "description": "Returns the parent of this node, or null if this is the\n root node."}, {"method_name": "getChildren", "method_sig": "Iterator<? extends PolicyNode> getChildren()", "description": "Returns an iterator over the children of this node. Any attempts to\n modify the children of this node through the\n Iterator's remove method must throw an\n UnsupportedOperationException."}, {"method_name": "getDepth", "method_sig": "int getDepth()", "description": "Returns the depth of this node in the valid policy tree."}, {"method_name": "getValidPolicy", "method_sig": "String getValidPolicy()", "description": "Returns the valid policy represented by this node."}, {"method_name": "getPolicyQualifiers", "method_sig": "Set<? extends PolicyQualifierInfo> getPolicyQualifiers()", "description": "Returns the set of policy qualifiers associated with the\n valid policy represented by this node."}, {"method_name": "getExpectedPolicies", "method_sig": "Set<String> getExpectedPolicies()", "description": "Returns the set of expected policies that would satisfy this\n node's valid policy in the next certificate to be processed."}, {"method_name": "isCritical", "method_sig": "boolean isCritical()", "description": "Returns the criticality indicator of the certificate policy extension\n in the most recently processed certificate."}]}