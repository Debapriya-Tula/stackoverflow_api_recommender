{"name": "Interface PrintService", "module": "java.desktop", "package": "javax.print", "text": "Interface PrintService is the factory for a DocPrintJob. A\n PrintService describes the capabilities of a printer and can be\n queried regarding a printer's supported attributes.\n \n Example:\n   \n   DocFlavor flavor = DocFlavor.INPUT_STREAM.POSTSCRIPT;\n   PrintRequestAttributeSet aset = new HashPrintRequestAttributeSet();\n   aset.add(MediaSizeName.ISO_A4);\n   PrintService[] pservices =\n                 PrintServiceLookup.lookupPrintServices(flavor, aset);\n   if (pservices.length > 0) {\n       DocPrintJob pj = pservices[0].createPrintJob();\n       try {\n           FileInputStream fis = new FileInputStream(\"test.ps\");\n           Doc doc = new SimpleDoc(fis, flavor, null);\n           pj.print(doc, aset);\n        } catch (FileNotFoundException fe) {\n        } catch (PrintException e) {\n        }\n   }\n   ", "codes": ["public interface PrintService"], "fields": [], "methods": [{"method_name": "getName", "method_sig": "String getName()", "description": "Returns a string name for this print service which may be used by\n applications to request a particular print service. In a suitable\n context, such as a name service, this name must be unique. In some\n environments this unique name may be the same as the user friendly\n printer name defined as the\n PrinterName attribute."}, {"method_name": "createPrintJob", "method_sig": "DocPrintJob createPrintJob()", "description": "Creates and returns a PrintJob capable of handling data from any\n of the supported document flavors."}, {"method_name": "addPrintServiceAttributeListener", "method_sig": "void addPrintServiceAttributeListener (PrintServiceAttributeListener listener)", "description": "Registers a listener for events on this PrintService."}, {"method_name": "removePrintServiceAttributeListener", "method_sig": "void removePrintServiceAttributeListener (PrintServiceAttributeListener listener)", "description": "Removes the print-service listener from this print service. This means\n the listener is no longer interested in PrintService events."}, {"method_name": "getAttributes", "method_sig": "PrintServiceAttributeSet getAttributes()", "description": "Obtains this print service's set of printer description attributes giving\n this Print Service's status. The returned attribute set object is\n unmodifiable. The returned attribute set object is a \"snapshot\" of this\n Print Service's attribute set at the time of the getAttributes()\n method call: that is, the returned attribute set's contents will\n not be updated if this print service's attribute set's contents\n change in the future. To detect changes in attribute values, call\n getAttributes() again and compare the new attribute set to the\n previous attribute set; alternatively, register a listener for print\n service events."}, {"method_name": "getAttribute", "method_sig": "<T extends PrintServiceAttribute> T getAttribute (Class<T> category)", "description": "Gets the value of the single specified service attribute. This may be\n useful to clients which only need the value of one attribute and want to\n minimize overhead."}, {"method_name": "getSupportedDocFlavors", "method_sig": "DocFlavor[] getSupportedDocFlavors()", "description": "Determines the print data formats a client can specify when setting up a\n job for this PrintService. A print data format is designated by a\n \"doc flavor\" (class DocFlavor) consisting of a MIME\n type plus a print data representation class.\n \n Note that some doc flavors may not be supported in combination with all\n attributes. Use getUnsupportedAttributes(..) to validate specific\n combinations."}, {"method_name": "isDocFlavorSupported", "method_sig": "boolean isDocFlavorSupported (DocFlavor flavor)", "description": "Determines if this print service supports a specific DocFlavor.\n This is a convenience method to determine if the DocFlavor would\n be a member of the result of getSupportedDocFlavors().\n \n Note that some doc flavors may not be supported in combination with all\n attributes. Use getUnsupportedAttributes(..) to validate specific\n combinations."}, {"method_name": "getSupportedAttributeCategories", "method_sig": "Class<?>[] getSupportedAttributeCategories()", "description": "Determines the printing attribute categories a client can specify when\n setting up a job for this print service. A printing attribute category is\n designated by a Class that implements interface\n Attribute. This method returns just the attribute\n categories that are supported; it does not return the particular\n attribute values that are supported.\n \n This method returns all the printing attribute categories this print\n service supports for any possible job. Some categories may not be\n supported in a particular context (ie for a particular\n DocFlavor). Use one of the methods that include a\n DocFlavor to validate the request before submitting it, such as\n getSupportedAttributeValues(..)."}, {"method_name": "isAttributeCategorySupported", "method_sig": "boolean isAttributeCategorySupported (Class<? extends Attribute> category)", "description": "Determines whether a client can specify the given printing attribute\n category when setting up a job for this print service. A printing\n attribute category is designated by a Class that implements\n interface Attribute. This method\n tells whether the attribute category is supported; it does not\n tell whether a particular attribute value is supported.\n \n Some categories may not be supported in a particular context (ie for a\n particular DocFlavor). Use one of the methods which include a\n DocFlavor to validate the request before submitting it, such as\n getSupportedAttributeValues(..).\n \n This is a convenience method to determine if the category would be a\n member of the result of getSupportedAttributeCategories()."}, {"method_name": "getDefaultAttributeValue", "method_sig": "Object getDefaultAttributeValue (Class<? extends Attribute> category)", "description": "Determines this print service's default printing attribute value in the\n given category. A printing attribute value is an instance of a class that\n implements interface Attribute. If a client sets up a\n print job and does not specify any attribute value in the given category,\n this Print Service will use the default attribute value instead.\n \n Some attributes may not be supported in a particular context (ie for a\n particular DocFlavor). Use one of the methods that include a\n DocFlavor to validate the request before submitting it, such as\n getSupportedAttributeValues(..).\n \n Not all attributes have a default value. For example the service will not\n have a default value for RequestingUser i.e. a null\n return for a supported category means there is no service default value\n for that category. Use the isAttributeCategorySupported(Class)\n method to distinguish these cases."}, {"method_name": "getSupportedAttributeValues", "method_sig": "Object getSupportedAttributeValues (Class<? extends Attribute> category,\n                                   DocFlavor flavor,\n                                   AttributeSet attributes)", "description": "Determines the printing attribute values a client can specify in the\n given category when setting up a job for this print service. A printing\n attribute value is an instance of a class that implements interface\n Attribute.\n \n If flavor is null and attributes is null\n or is an empty set, this method returns all the printing attribute values\n this Print Service supports for any possible job. If flavor is not\n null or attributes is not an empty set, this method\n returns just the printing attribute values that are compatible with the\n given doc flavor and/or set of attributes. That is, a null return\n value may indicate that specifying this attribute is incompatible with\n the specified DocFlavor. Also if DocFlavor is not null it\n must be a flavor supported by this PrintService, else\n IllegalArgumentException will be thrown.\n \n If the attributes parameter contains an Attribute whose\n category is the same as the category parameter, the service must\n ignore this attribute in the AttributeSet.\n \nDocAttributes which are to be specified on the Doc must\n be included in this set to accurately represent the context.\n \n This method returns an Object because different printing\n attribute categories indicate the supported attribute values in different\n ways. The documentation for each printing attribute in package\n javax.print.attribute.standard\n describes how each attribute indicates its supported values. Possible\n ways of indicating support include:\n \nReturn a single instance of the attribute category to indicate that\n   any value is legal -- used, for example, by an attribute whose value is\n   an arbitrary text string. (The value of the returned attribute object\n   is irrelevant.)\n   Return an array of one or more instances of the attribute category,\n   containing the legal values -- used, for example, by an attribute with\n   a list of enumerated values. The type of the array is an array of the\n   specified attribute category type as returned by its\n   getCategory(Class).\n   Return a single object (of some class other than the attribute\n   category) that indicates bounds on the legal values -- used, for\n   example, by an integer-valued attribute that must lie within a certain\n   range.\n "}, {"method_name": "isAttributeValueSupported", "method_sig": "boolean isAttributeValueSupported (Attribute attrval,\n                                  DocFlavor flavor,\n                                  AttributeSet attributes)", "description": "Determines whether a client can specify the given printing attribute\n value when setting up a job for this Print Service. A printing attribute\n value is an instance of a class that implements interface\n Attribute.\n \n If flavor is null and attributes is null\n or is an empty set, this method tells whether this Print Service supports\n the given printing attribute value for some possible combination of doc\n flavor and set of attributes. If flavor is not null or\n attributes is not an empty set, this method tells whether this\n Print Service supports the given printing attribute value in combination\n with the given doc flavor and/or set of attributes.\n \n Also if DocFlavor is not null it must be a flavor\n supported by this PrintService, else\n IllegalArgumentException will be thrown.\n \nDocAttributes which are to be specified on the Doc must\n be included in this set to accurately represent the context.\n \n This is a convenience method to determine if the value would be a member\n of the result of getSupportedAttributeValues(...)."}, {"method_name": "getUnsupportedAttributes", "method_sig": "AttributeSet getUnsupportedAttributes (DocFlavor flavor,\n                                      AttributeSet attributes)", "description": "Identifies the attributes that are unsupported for a print request in the\n context of a particular DocFlavor. This method is useful for\n validating a potential print job and identifying the specific attributes\n which cannot be supported. It is important to supply only a supported\n DocFlavor or an IllegalArgumentException will be thrown.\n If the return value from this method is null, all attributes are\n supported.\n \nDocAttributes which are to be specified on the Doc must\n be included in this set to accurately represent the context.\n \n If the return value is non-null, all attributes in the returned\n set are unsupported with this DocFlavor. The returned set does\n not distinguish attribute categories that are unsupported from\n unsupported attribute values.\n \n A supported print request can then be created by removing all unsupported\n attributes from the original attribute set, except in the case that the\n DocFlavor is unsupported.\n \n If any attributes are unsupported only because they are in conflict with\n other attributes then it is at the discretion of the service to select\n the attribute(s) to be identified as the cause of the conflict.\n \n Use isDocFlavorSupported() to verify that a DocFlavor is\n supported before calling this method."}, {"method_name": "getServiceUIFactory", "method_sig": "ServiceUIFactory getServiceUIFactory()", "description": "Returns a factory for UI components which allow users to interact with\n the service in various roles. Services which do not provide any UI should\n return null. Print Services which do provide UI but want to be\n supported in an environment with no UI support should ensure that the\n factory is not initialised unless the application calls this method to\n obtain the factory. See ServiceUIFactory for more information."}, {"method_name": "equals", "method_sig": "boolean equals (Object obj)", "description": "Determines if two services are referring to the same underlying service.\n Objects encapsulating a print service may not exhibit equality of\n reference even though they refer to the same underlying service.\n \n Clients should call this method to determine if two services are\n referring to the same underlying service.\n \n Services must implement this method and return true only if the\n service objects being compared may be used interchangeably by the client.\n Services are free to return the same object reference to an underlying\n service if that, but clients must not depend on equality of reference."}, {"method_name": "hashCode", "method_sig": "int hashCode()", "description": "This method should be implemented consistently with\n equals(Object)."}]}