{"name": "Class WindowEvent", "module": "java.desktop", "package": "java.awt.event", "text": "A low-level event that indicates that a window has changed its status. This\n low-level event is generated by a Window object when it is opened, closed,\n activated, deactivated, iconified, or deiconified, or when focus is\n transferred into or out of the Window.\n \n The event is passed to every WindowListener\n or WindowAdapter object which registered to receive such\n events using the window's addWindowListener method.\n (WindowAdapter objects implement the\n WindowListener interface.) Each such listener object\n gets this WindowEvent when the event occurs.\n \n An unspecified behavior will be caused if the id parameter\n of any particular WindowEvent instance is not\n in the range from WINDOW_FIRST to WINDOW_LAST.", "codes": ["public class WindowEvent\nextends ComponentEvent"], "fields": [{"field_name": "WINDOW_FIRST", "field_sig": "public static final\u00a0int WINDOW_FIRST", "description": "The first number in the range of ids used for window events."}, {"field_name": "WINDOW_OPENED", "field_sig": "@Native\npublic static final\u00a0int WINDOW_OPENED", "description": "The window opened event.  This event is delivered only\n the first time a window is made visible."}, {"field_name": "WINDOW_CLOSING", "field_sig": "@Native\npublic static final\u00a0int WINDOW_CLOSING", "description": "The \"window is closing\" event. This event is delivered when\n the user attempts to close the window from the window's system menu.\n If the program does not explicitly hide or dispose the window\n while processing this event, the window close operation will be\n cancelled."}, {"field_name": "WINDOW_CLOSED", "field_sig": "@Native\npublic static final\u00a0int WINDOW_CLOSED", "description": "The window closed event. This event is delivered after the displayable\n window has been closed as the result of a call to dispose."}, {"field_name": "WINDOW_ICONIFIED", "field_sig": "@Native\npublic static final\u00a0int WINDOW_ICONIFIED", "description": "The window iconified event. This event is delivered when\n the window has been changed from a normal to a minimized state.\n For many platforms, a minimized window is displayed as\n the icon specified in the window's iconImage property."}, {"field_name": "WINDOW_DEICONIFIED", "field_sig": "@Native\npublic static final\u00a0int WINDOW_DEICONIFIED", "description": "The window deiconified event type. This event is delivered when\n the window has been changed from a minimized to a normal state."}, {"field_name": "WINDOW_ACTIVATED", "field_sig": "@Native\npublic static final\u00a0int WINDOW_ACTIVATED", "description": "The window-activated event type. This event is delivered when the Window\n becomes the active Window. Only a Frame or a Dialog can be the active\n Window. The native windowing system may denote the active Window or its\n children with special decorations, such as a highlighted title bar. The\n active Window is always either the focused Window, or the first Frame or\n Dialog that is an owner of the focused Window."}, {"field_name": "WINDOW_DEACTIVATED", "field_sig": "@Native\npublic static final\u00a0int WINDOW_DEACTIVATED", "description": "The window-deactivated event type. This event is delivered when the\n Window is no longer the active Window. Only a Frame or a Dialog can be\n the active Window. The native windowing system may denote the active\n Window or its children with special decorations, such as a highlighted\n title bar. The active Window is always either the focused Window, or the\n first Frame or Dialog that is an owner of the focused Window."}, {"field_name": "WINDOW_GAINED_FOCUS", "field_sig": "@Native\npublic static final\u00a0int WINDOW_GAINED_FOCUS", "description": "The window-gained-focus event type. This event is delivered when the\n Window becomes the focused Window, which means that the Window, or one\n of its subcomponents, will receive keyboard events."}, {"field_name": "WINDOW_LOST_FOCUS", "field_sig": "@Native\npublic static final\u00a0int WINDOW_LOST_FOCUS", "description": "The window-lost-focus event type. This event is delivered when a Window\n is no longer the focused Window, which means keyboard events will no\n longer be delivered to the Window or any of its subcomponents."}, {"field_name": "WINDOW_STATE_CHANGED", "field_sig": "@Native\npublic static final\u00a0int WINDOW_STATE_CHANGED", "description": "The window-state-changed event type.  This event is delivered\n when a Window's state is changed by virtue of it being\n iconified, maximized etc."}, {"field_name": "WINDOW_LAST", "field_sig": "public static final\u00a0int WINDOW_LAST", "description": "The last number in the range of ids used for window events."}], "methods": [{"method_name": "getWindow", "method_sig": "public Window getWindow()", "description": "Returns the originator of the event."}, {"method_name": "getOppositeWindow", "method_sig": "public Window getOppositeWindow()", "description": "Returns the other Window involved in this focus or activation change.\n For a WINDOW_ACTIVATED or WINDOW_GAINED_FOCUS event, this is the Window\n that lost activation or focus. For a WINDOW_DEACTIVATED or\n WINDOW_LOST_FOCUS event, this is the Window that gained activation or\n focus. For any other type of WindowEvent, or if the focus or activation\n change occurs with a native application, with a Java application in a\n different VM or context, or with no other Window, null is returned."}, {"method_name": "getOldState", "method_sig": "public int getOldState()", "description": "For WINDOW_STATE_CHANGED events returns the\n previous state of the window. The state is\n represented as a bitwise mask.\n \nNORMAL\nIndicates that no state bits are set.\n ICONIFIED\nMAXIMIZED_HORIZ\nMAXIMIZED_VERT\nMAXIMIZED_BOTH\nConcatenates MAXIMIZED_HORIZ\n and MAXIMIZED_VERT.\n "}, {"method_name": "getNewState", "method_sig": "public int getNewState()", "description": "For WINDOW_STATE_CHANGED events returns the\n new state of the window. The state is\n represented as a bitwise mask.\n \nNORMAL\nIndicates that no state bits are set.\n ICONIFIED\nMAXIMIZED_HORIZ\nMAXIMIZED_VERT\nMAXIMIZED_BOTH\nConcatenates MAXIMIZED_HORIZ\n and MAXIMIZED_VERT.\n "}, {"method_name": "paramString", "method_sig": "public String paramString()", "description": "Returns a parameter string identifying this event.\n This method is useful for event-logging and for debugging."}]}