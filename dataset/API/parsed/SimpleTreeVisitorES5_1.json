{"name": "Class SimpleTreeVisitorES5_1<R,\u200bP>", "module": "jdk.scripting.nashorn", "package": "jdk.nashorn.api.tree", "text": "A simple implementation of the TreeVisitor for ECMAScript edition 5.1.\n\n The visit methods corresponding to ES 5.1 language constructs walk the\n \"components\" of the given tree by calling accept method passing the\n current visitor and the additional parameter.\n\n For constructs introduced in later versions, visitUnknown\n is called instead which throws UnknownTreeException.\n\n  Methods in this class may be overridden subject to their\n general contract.  Note that annotating methods in concrete\n subclasses with @Override will help\n ensure that methods are overridden as intended.", "codes": ["@Deprecated(since=\"11\",\n            forRemoval=true)\npublic class SimpleTreeVisitorES5_1<R, P>\nextends Object\nimplements TreeVisitor<R, P>"], "fields": [], "methods": [{"method_name": "visitModule", "method_sig": "public R visitModule (ModuleTree node,\n                     P p)", "description": "Visits a ModuleTree tree by calling \n visitUnknown."}, {"method_name": "visitExportEntry", "method_sig": "public R visitExportEntry (ExportEntryTree node,\n                          P p)", "description": "Visits an ExportEntryTree tree by calling \n visitUnknown."}, {"method_name": "visitImportEntry", "method_sig": "public R visitImportEntry (ImportEntryTree node,\n                          P p)", "description": "Visits an ImportEntryTree tree by calling \n visitUnknown."}, {"method_name": "visitClassDeclaration", "method_sig": "public R visitClassDeclaration (ClassDeclarationTree node,\n                               P p)", "description": "Visits a ClassDeclarationTree tree by calling \n visitUnknown."}, {"method_name": "visitClassExpression", "method_sig": "public R visitClassExpression (ClassExpressionTree node,\n                              P p)", "description": "Visits a ClassExpressionTree tree by calling \n visitUnknown."}, {"method_name": "visitForOfLoop", "method_sig": "public R visitForOfLoop (ForOfLoopTree node,\n                        P p)", "description": "Visits a ForOfLoopTree tree by calling \n visitUnknown."}, {"method_name": "visitTemplateLiteral", "method_sig": "public R visitTemplateLiteral (TemplateLiteralTree node,\n                              P p)", "description": "Visits a TemplateLiteralTree tree by calling \n visitUnknown."}, {"method_name": "visitSpread", "method_sig": "public R visitSpread (SpreadTree node,\n                     P p)", "description": "Visits a SpreadTree tree by calling \n visitUnknown."}, {"method_name": "visitYield", "method_sig": "public R visitYield (YieldTree node,\n                    P p)", "description": "Visits a YieldTree tree by calling \n visitUnknown."}, {"method_name": "visitUnknown", "method_sig": "public R visitUnknown (Tree node,\n                      P p)", "description": "Visit unknown expression/statement tree. This fallback will be\n called if new Tree subtypes are introduced in future. A specific\n implementation may throw {unknown tree exception\n if the visitor implementation was for an older language version."}]}