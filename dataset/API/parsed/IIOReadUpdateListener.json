{"name": "Interface IIOReadUpdateListener", "module": "java.desktop", "package": "javax.imageio.event", "text": "An interface used by ImageReader implementations to\n notify callers of their image and thumbnail reading methods of\n pixel updates.", "codes": ["public interface IIOReadUpdateListener\nextends EventListener"], "fields": [], "methods": [{"method_name": "passStarted", "method_sig": "void passStarted (ImageReader source,\n                 BufferedImage theImage,\n                 int pass,\n                 int minPass,\n                 int maxPass,\n                 int minX,\n                 int minY,\n                 int periodX,\n                 int periodY,\n                 int[] bands)", "description": "Reports that the current read operation is about to begin a\n progressive pass.  Readers of formats that support progressive\n encoding should use this to notify clients when each pass is\n completed when reading a progressively encoded image.\n\n  An estimate of the area that will be updated by the pass is\n indicated by the minX, minY,\n width, and height parameters.  If the\n pass is interlaced, that is, it only updates selected rows or\n columns, the periodX and periodY\n parameters will indicate the degree of subsampling.  The set of\n bands that may be affected is indicated by the value of\n bands."}, {"method_name": "imageUpdate", "method_sig": "void imageUpdate (ImageReader source,\n                 BufferedImage theImage,\n                 int minX,\n                 int minY,\n                 int width,\n                 int height,\n                 int periodX,\n                 int periodY,\n                 int[] bands)", "description": "Reports that a given region of the image has been updated.\n The application might choose to redisplay the specified area,\n for example, in order to provide a progressive display effect,\n or perform other incremental processing.\n\n  Note that different image format readers may produce\n decoded pixels in a variety of different orders.  Many readers\n will produce pixels in a simple top-to-bottom,\n left-to-right-order, but others may use multiple passes of\n interlacing, tiling, etc.  The sequence of updates may even\n differ from call to call depending on network speeds, for\n example.  A call to this method does not guarantee that all the\n specified pixels have actually been updated, only that some\n activity has taken place within some subregion of the one\n specified.\n\n  The particular ImageReader implementation may\n choose how often to provide updates.  Each update specifies\n that a given region of the image has been updated since the\n last update.  A region is described by its spatial bounding box\n (minX, minY, width, and\n height); X and Y subsampling factors\n (periodX and periodY); and a set of\n updated bands (bands).  For example, the update:\n\n \n minX = 10\n minY = 20\n width = 3\n height = 4\n periodX = 2\n periodY = 3\n bands = { 1, 3 }\n \n\n would indicate that bands 1 and 3 of the following pixels were\n updated:\n\n \n (10, 20) (12, 20) (14, 20)\n (10, 23) (12, 23) (14, 23)\n (10, 26) (12, 26) (14, 26)\n (10, 29) (12, 29) (14, 29)\n "}, {"method_name": "passComplete", "method_sig": "void passComplete (ImageReader source,\n                  BufferedImage theImage)", "description": "Reports that the current read operation has completed a\n progressive pass.  Readers of formats that support\n progressive encoding should use this to notify clients when\n each pass is completed when reading a progressively\n encoded image."}, {"method_name": "thumbnailPassStarted", "method_sig": "void thumbnailPassStarted (ImageReader source,\n                          BufferedImage theThumbnail,\n                          int pass,\n                          int minPass,\n                          int maxPass,\n                          int minX,\n                          int minY,\n                          int periodX,\n                          int periodY,\n                          int[] bands)", "description": "Reports that the current thumbnail read operation is about to\n begin a progressive pass.  Readers of formats that support\n progressive encoding should use this to notify clients when\n each pass is completed when reading a progressively encoded\n thumbnail image."}, {"method_name": "thumbnailUpdate", "method_sig": "void thumbnailUpdate (ImageReader source,\n                     BufferedImage theThumbnail,\n                     int minX,\n                     int minY,\n                     int width,\n                     int height,\n                     int periodX,\n                     int periodY,\n                     int[] bands)", "description": "Reports that a given region of a thumbnail image has been updated.\n The application might choose to redisplay the specified area,\n for example, in order to provide a progressive display effect,\n or perform other incremental processing."}, {"method_name": "thumbnailPassComplete", "method_sig": "void thumbnailPassComplete (ImageReader source,\n                           BufferedImage theThumbnail)", "description": "Reports that the current thumbnail read operation has completed\n a progressive pass.  Readers of formats that support\n progressive encoding should use this to notify clients when\n each pass is completed when reading a progressively encoded\n thumbnail image."}]}