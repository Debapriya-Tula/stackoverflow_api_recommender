{"name": "Class ImageTypeSpecifier", "module": "java.desktop", "package": "javax.imageio", "text": "A class that allows the format of an image (in particular, its\n SampleModel and ColorModel) to be\n specified in a convenient manner.", "codes": ["public class ImageTypeSpecifier\nextends Object"], "fields": [{"field_name": "colorModel", "field_sig": "protected\u00a0ColorModel colorModel", "description": "The ColorModel to be used as a prototype."}, {"field_name": "sampleModel", "field_sig": "protected\u00a0SampleModel sampleModel", "description": "A SampleModel to be used as a prototype."}], "methods": [{"method_name": "createPacked", "method_sig": "public static ImageTypeSpecifier createPacked (ColorSpace colorSpace,\n                                              int redMask,\n                                              int greenMask,\n                                              int blueMask,\n                                              int alphaMask,\n                                              int transferType,\n                                              boolean isAlphaPremultiplied)", "description": "Returns a specifier for a packed image format that will use a\n DirectColorModel and a packed\n SampleModel to store each pixel packed into in a\n single byte, short, or int."}, {"method_name": "createInterleaved", "method_sig": "public static ImageTypeSpecifier createInterleaved (ColorSpace colorSpace,\n                                                   int[] bandOffsets,\n                                                   int dataType,\n                                                   boolean hasAlpha,\n                                                   boolean isAlphaPremultiplied)", "description": "Returns a specifier for an interleaved image format that will\n use a ComponentColorModel and a\n PixelInterleavedSampleModel to store each pixel\n component in a separate byte, short, or int."}, {"method_name": "createBanded", "method_sig": "public static ImageTypeSpecifier createBanded (ColorSpace colorSpace,\n                                              int[] bankIndices,\n                                              int[] bandOffsets,\n                                              int dataType,\n                                              boolean hasAlpha,\n                                              boolean isAlphaPremultiplied)", "description": "Returns a specifier for a banded image format that will use a\n ComponentColorModel and a\n BandedSampleModel to store each channel in a\n separate array."}, {"method_name": "createGrayscale", "method_sig": "public static ImageTypeSpecifier createGrayscale (int bits,\n                                                 int dataType,\n                                                 boolean isSigned)", "description": "Returns a specifier for a grayscale image format that will pack\n pixels of the given bit depth into array elements of\n the specified data type."}, {"method_name": "createGrayscale", "method_sig": "public static ImageTypeSpecifier createGrayscale (int bits,\n                                                 int dataType,\n                                                 boolean isSigned,\n                                                 boolean isAlphaPremultiplied)", "description": "Returns a specifier for a grayscale plus alpha image format\n that will pack pixels of the given bit depth into array\n elements of the specified data type."}, {"method_name": "createIndexed", "method_sig": "public static ImageTypeSpecifier createIndexed (byte[] redLUT,\n                                               byte[] greenLUT,\n                                               byte[] blueLUT,\n                                               byte[] alphaLUT,\n                                               int bits,\n                                               int dataType)", "description": "Returns a specifier for an indexed-color image format that will pack\n index values of the given bit depth into array elements of\n the specified data type."}, {"method_name": "createFromBufferedImageType", "method_sig": "public static ImageTypeSpecifier createFromBufferedImageType (int bufferedImageType)", "description": "Returns an ImageTypeSpecifier that encodes\n one of the standard BufferedImage types\n (other than TYPE_CUSTOM)."}, {"method_name": "createFromRenderedImage", "method_sig": "public static ImageTypeSpecifier createFromRenderedImage (RenderedImage image)", "description": "Returns an ImageTypeSpecifier that encodes the\n layout of a RenderedImage (which may be a\n BufferedImage)."}, {"method_name": "getBufferedImageType", "method_sig": "public int getBufferedImageType()", "description": "Returns an int containing one of the enumerated constant values\n describing image formats from BufferedImage."}, {"method_name": "getNumComponents", "method_sig": "public int getNumComponents()", "description": "Return the number of color components\n specified by this object.  This is the same value as returned by\n ColorModel.getNumComponents"}, {"method_name": "getNumBands", "method_sig": "public int getNumBands()", "description": "Return the number of bands\n specified by this object.  This is the same value as returned by\n SampleModel.getNumBands"}, {"method_name": "getBitsPerBand", "method_sig": "public int getBitsPerBand (int band)", "description": "Return the number of bits used to represent samples of the given band."}, {"method_name": "getSampleModel", "method_sig": "public SampleModel getSampleModel()", "description": "Returns a SampleModel based on the settings\n encapsulated within this object.  The width and height of the\n SampleModel will be set to arbitrary values."}, {"method_name": "getSampleModel", "method_sig": "public SampleModel getSampleModel (int width,\n                                  int height)", "description": "Returns a SampleModel based on the settings\n encapsulated within this object.  The width and height of the\n SampleModel will be set to the supplied values."}, {"method_name": "getColorModel", "method_sig": "public ColorModel getColorModel()", "description": "Returns the ColorModel specified by this object."}, {"method_name": "createBufferedImage", "method_sig": "public BufferedImage createBufferedImage (int width,\n                                         int height)", "description": "Creates a BufferedImage with a given width and\n height according to the specification embodied in this object."}, {"method_name": "equals", "method_sig": "public boolean equals (Object o)", "description": "Returns true if the given Object is\n an ImageTypeSpecifier and has a\n SampleModel and ColorModel that are\n equal to those of this object."}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Returns the hash code for this ImageTypeSpecifier."}]}