{"name": "Class SocketHandler", "module": "java.logging", "package": "java.util.logging", "text": "Simple network logging Handler.\n \nLogRecords are published to a network stream connection.  By default\n the XMLFormatter class is used for formatting.\n \nConfiguration:\n By default each SocketHandler is initialized using the following\n LogManager configuration properties where <handler-name>\n refers to the fully-qualified class name of the handler.\n If properties are not defined\n (or have invalid values) then the specified default values are used.\n \n   <handler-name>.level\n        specifies the default level for the Handler\n        (defaults to Level.ALL). \n   <handler-name>.filter\n        specifies the name of a Filter class to use\n        (defaults to no Filter). \n   <handler-name>.formatter\n        specifies the name of a Formatter class to use\n        (defaults to java.util.logging.XMLFormatter). \n   <handler-name>.encoding\n        the name of the character set encoding to use (defaults to\n        the default platform encoding). \n   <handler-name>.host\n        specifies the target host name to connect to (no default). \n   <handler-name>.port\n        specifies the target TCP port to use (no default). \n\n\n For example, the properties for SocketHandler would be:\n \n   java.util.logging.SocketHandler.level=INFO \n   java.util.logging.SocketHandler.formatter=java.util.logging.SimpleFormatter \n\n\n For a custom handler, e.g. com.foo.MyHandler, the properties would be:\n \n   com.foo.MyHandler.level=INFO \n   com.foo.MyHandler.formatter=java.util.logging.SimpleFormatter \n\n\n The output IO stream is buffered, but is flushed after each\n LogRecord is written.", "codes": ["public class SocketHandler\nextends StreamHandler"], "fields": [], "methods": [{"method_name": "close", "method_sig": "public void close()\n           throws SecurityException", "description": "Close this output stream."}, {"method_name": "publish", "method_sig": "public void publish (LogRecord record)", "description": "Format and publish a LogRecord."}]}