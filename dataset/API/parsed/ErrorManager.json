{"name": "Class ErrorManager", "module": "java.logging", "package": "java.util.logging", "text": "ErrorManager objects can be attached to Handlers to process\n any error that occurs on a Handler during Logging.\n \n When processing logging output, if a Handler encounters problems\n then rather than throwing an Exception back to the issuer of\n the logging call (who is unlikely to be interested) the Handler\n should call its associated ErrorManager.", "codes": ["public class ErrorManager\nextends Object"], "fields": [{"field_name": "GENERIC_FAILURE", "field_sig": "public static final\u00a0int GENERIC_FAILURE", "description": "GENERIC_FAILURE is used for failure that don't fit\n into one of the other categories."}, {"field_name": "WRITE_FAILURE", "field_sig": "public static final\u00a0int WRITE_FAILURE", "description": "WRITE_FAILURE is used when a write to an output stream fails."}, {"field_name": "FLUSH_FAILURE", "field_sig": "public static final\u00a0int FLUSH_FAILURE", "description": "FLUSH_FAILURE is used when a flush to an output stream fails."}, {"field_name": "CLOSE_FAILURE", "field_sig": "public static final\u00a0int CLOSE_FAILURE", "description": "CLOSE_FAILURE is used when a close of an output stream fails."}, {"field_name": "OPEN_FAILURE", "field_sig": "public static final\u00a0int OPEN_FAILURE", "description": "OPEN_FAILURE is used when an open of an output stream fails."}, {"field_name": "FORMAT_FAILURE", "field_sig": "public static final\u00a0int FORMAT_FAILURE", "description": "FORMAT_FAILURE is used when formatting fails for any reason."}], "methods": [{"method_name": "error", "method_sig": "public void error (String msg,\n                  Exception ex,\n                  int code)", "description": "The error method is called when a Handler failure occurs.\n \n This method may be overridden in subclasses.  The default\n behavior in this base class is that the first call is\n reported to System.err, and subsequent calls are ignored."}]}