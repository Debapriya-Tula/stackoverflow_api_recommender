{"name": "Class Label", "module": "java.desktop", "package": "java.awt", "text": "A Label object is a component for placing text in a\n container. A label displays a single line of read-only text.\n The text can be changed by the application, but a user cannot edit it\n directly.\n \n For example, the code\u00a0.\u00a0.\u00a0.\n\n \n setLayout(new FlowLayout(FlowLayout.CENTER, 10, 10));\n add(new Label(\"Hi There!\"));\n add(new Label(\"Another Label\"));\n \n\n produces the following labels:\n \n", "codes": ["public class Label\nextends Component\nimplements Accessible"], "fields": [{"field_name": "LEFT", "field_sig": "public static final\u00a0int LEFT", "description": "Indicates that the label should be left justified."}, {"field_name": "CENTER", "field_sig": "public static final\u00a0int CENTER", "description": "Indicates that the label should be centered."}, {"field_name": "RIGHT", "field_sig": "public static final\u00a0int RIGHT", "description": "Indicates that the label should be right justified."}], "methods": [{"method_name": "addNotify", "method_sig": "public void addNotify()", "description": "Creates the peer for this label.  The peer allows us to\n modify the appearance of the label without changing its\n functionality."}, {"method_name": "getAlignment", "method_sig": "public int getAlignment()", "description": "Gets the current alignment of this label. Possible values are\n Label.LEFT, Label.RIGHT, and\n Label.CENTER."}, {"method_name": "setAlignment", "method_sig": "public void setAlignment (int alignment)", "description": "Sets the alignment for this label to the specified alignment.\n Possible values are Label.LEFT,\n Label.RIGHT, and Label.CENTER."}, {"method_name": "getText", "method_sig": "public String getText()", "description": "Gets the text of this label."}, {"method_name": "setText", "method_sig": "public void setText (String text)", "description": "Sets the text for this label to the specified text."}, {"method_name": "paramString", "method_sig": "protected String paramString()", "description": "Returns a string representing the state of this Label.\n This method is intended to be used only for debugging purposes, and the\n content and format of the returned string may vary between\n implementations. The returned string may be empty but may not be\n null."}, {"method_name": "getAccessibleContext", "method_sig": "public AccessibleContext getAccessibleContext()", "description": "Gets the AccessibleContext associated with this Label.\n For labels, the AccessibleContext takes the form of an\n AccessibleAWTLabel.\n A new AccessibleAWTLabel instance is created if necessary."}]}