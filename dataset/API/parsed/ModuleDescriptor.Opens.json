{"name": "Class ModuleDescriptor.Opens", "module": "java.base", "package": "java.lang.module", "text": " A package opened by a module, may be qualified or unqualified. \n The opens directive in a module declaration declares a\n package to be open to allow all types in the package, and all their\n members, not just public types and their public members to be reflected\n on by APIs that support private access or a way to bypass or suppress\n default Java language access control checks. ", "codes": ["public static final class ModuleDescriptor.Opens\nextends Object\nimplements Comparable<ModuleDescriptor.Opens>"], "fields": [], "methods": [{"method_name": "modifiers", "method_sig": "public Set<ModuleDescriptor.Opens.Modifier> modifiers()", "description": "Returns the set of modifiers."}, {"method_name": "isQualified", "method_sig": "public boolean isQualified()", "description": "Returns true if this is a qualified opens."}, {"method_name": "source", "method_sig": "public String source()", "description": "Returns the package name."}, {"method_name": "targets", "method_sig": "public Set<String> targets()", "description": "For a qualified opens, returns the non-empty and immutable set\n of the module names to which the package is open. For an\n unqualified opens, returns an empty set."}, {"method_name": "compareTo", "method_sig": "public int compareTo (ModuleDescriptor.Opens that)", "description": "Compares this module opens to another.\n\n  Two Opens objects are compared by comparing the package\n names lexicographically. Where the packages names are equal then the\n sets of modifiers are compared in the same way that module modifiers\n are compared (see ModuleDescriptor.compareTo). Where the package names are equal and\n the set of modifiers are equal then the set of target modules are\n compared. This is done by sorting the names of the target modules\n in ascending order, and according to their natural ordering, and then\n comparing the corresponding elements lexicographically. Where the\n sets differ in size, and the larger set contains all elements of the\n smaller set, then the larger set is considered to succeed the smaller\n set. "}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Computes a hash code for this module opens.\n\n  The hash code is based upon the modifiers, the package name,\n and for a qualified opens, the set of modules names to which the\n package is opened. It satisfies the general contract of the\n Object.hashCode method."}, {"method_name": "equals", "method_sig": "public boolean equals (Object ob)", "description": "Tests this module opens for equality with the given object.\n\n  If the given object is not an Opens then this method\n returns false. Two Opens objects are equal if their\n set of modifiers is equal, the package names are equal and the set\n of target module names is equal. \n This method satisfies the general contract of the Object.equals method. "}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns a string describing the open package."}]}