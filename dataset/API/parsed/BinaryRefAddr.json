{"name": "Class BinaryRefAddr", "module": "java.naming", "package": "javax.naming", "text": "This class represents the binary form of the address of\n a communications end-point.\n\n A BinaryRefAddr consists of a type that describes the communication mechanism\n and an opaque buffer containing the address description\n specific to that communication mechanism. The format and interpretation of\n the address type and the contents of the opaque buffer are based on\n the agreement of three parties: the client that uses the address,\n the object/server that can be reached using the address,\n and the administrator or program that creates the address.\n\n An example of a binary reference address is an BER X.500 presentation address.\n Another example of a binary reference address is a serialized form of\n a service's object handle.\n\n A binary reference address is immutable in the sense that its fields\n once created, cannot be replaced. However, it is possible to access\n the byte array used to hold the opaque buffer. Programs are strongly\n recommended against changing this byte array. Changes to this\n byte array need to be explicitly synchronized.", "codes": ["public class BinaryRefAddr\nextends RefAddr"], "fields": [], "methods": [{"method_name": "getContent", "method_sig": "public Object getContent()", "description": "Retrieves the contents of this address as an Object.\n The result is a byte array.\n Changes to this array will affect this BinaryRefAddr's contents.\n Programs are recommended against changing this array's contents\n and to lock the buffer if they need to change it."}, {"method_name": "equals", "method_sig": "public boolean equals (Object obj)", "description": "Determines whether obj is equal to this address.  It is equal if\n it contains the same address type and their contents are byte-wise\n equivalent."}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Computes the hash code of this address using its address type and contents.\n Two BinaryRefAddrs have the same hash code if they have\n the same address type and the same contents.\n It is also possible for different BinaryRefAddrs to have\n the same hash code."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Generates the string representation of this address.\n The string consists of the address's type and contents with labels.\n The first 32 bytes of contents are displayed (in hexadecimal).\n If there are more than 32 bytes, \"...\" is used to indicate more.\n This string is meant to used for debugging purposes and not\n meant to be interpreted programmatically."}]}