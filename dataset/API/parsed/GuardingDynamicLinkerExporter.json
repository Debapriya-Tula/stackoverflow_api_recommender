{"name": "Class GuardingDynamicLinkerExporter", "module": "jdk.dynalink", "package": "jdk.dynalink.linker", "text": "A class acting as a supplier of guarding dynamic linkers that can be\n automatically loaded by other language runtimes. Language runtimes wishing\n to export their own linkers should subclass this class and implement the\n Supplier.get() method to return a list of exported linkers and declare the\n subclass in\n /META-INF/services/jdk.dynalink.linker.GuardingDynamicLinkerExporter\n resource of their distribution (typically, JAR file) so that dynamic linker\n factories can discover them using the ServiceLoader mechanism. Note\n that instantiating this class is tied to a security check for the\n RuntimePermission(\"dynalink.exportLinkersAutomatically\") when a\n security manager is present, to ensure that only trusted runtimes can\n automatically export their linkers into other runtimes.", "codes": ["public abstract class GuardingDynamicLinkerExporter\nextends Object\nimplements Supplier<List<GuardingDynamicLinker>>"], "fields": [{"field_name": "AUTOLOAD_PERMISSION_NAME", "field_sig": "public static final\u00a0String AUTOLOAD_PERMISSION_NAME", "description": "The name of the runtime permission for creating instances of this class.\n Granting this permission to a language runtime allows it to export its\n linkers for automatic loading into other language runtimes."}], "methods": []}