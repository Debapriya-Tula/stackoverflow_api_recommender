{"name": "Interface ServiceLoader.Provider<S>", "module": "java.base", "package": "java.util", "text": "Represents a service provider located by ServiceLoader.\n\n  When using a loader's stream() method\n then the elements are of type Provider. This allows processing\n to select or filter on the provider class without instantiating the\n provider. ", "codes": ["public static interface ServiceLoader.Provider<S>\nextends Supplier<S>"], "fields": [], "methods": [{"method_name": "type", "method_sig": "Class<? extends S> type()", "description": "Returns the provider type. There is no guarantee that this type is\n accessible or that it has a public no-args constructor. The get() method should be used to obtain the provider instance.\n\n  When a module declares that the provider class is created by a\n provider factory then this method returns the return type of its\n public static \"provider()\" method."}, {"method_name": "get", "method_sig": "S get()", "description": "Returns an instance of the provider."}]}