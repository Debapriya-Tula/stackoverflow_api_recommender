{"name": "Interface CSSStyleDeclaration", "module": "jdk.xml.dom", "package": "org.w3c.dom.css", "text": "The CSSStyleDeclaration interface represents a single CSS\n declaration block. This interface may be used to determine the style\n properties currently set in a block or to set style properties explicitly\n within the block.\n  While an implementation may not recognize all CSS properties within a\n CSS declaration block, it is expected to provide access to all specified\n properties in the style sheet through the CSSStyleDeclaration\n  interface. Furthermore, implementations that support a specific level of\n CSS should correctly handle CSS shorthand properties for that level. For\n a further discussion of shorthand properties, see the\n CSS2Properties interface.\n  This interface is also used to provide a read-only access to the\n computed values of an element. See also the ViewCSS\n interface.  The CSS Object Model doesn't provide an access to the\n specified or actual values of the CSS cascade.\n See also the Document Object Model (DOM) Level 2 Style Specification.", "codes": ["public interface CSSStyleDeclaration"], "fields": [], "methods": [{"method_name": "getCssText", "method_sig": "String getCssText()", "description": "The parsable textual representation of the declaration block\n (excluding the surrounding curly braces). Setting this attribute will\n result in the parsing of the new value and resetting of all the\n properties in the declaration block including the removal or addition\n of properties."}, {"method_name": "setCssText", "method_sig": "void setCssText (String cssText)\n         throws DOMException", "description": "The parsable textual representation of the declaration block\n (excluding the surrounding curly braces). Setting this attribute will\n result in the parsing of the new value and resetting of all the\n properties in the declaration block including the removal or addition\n of properties."}, {"method_name": "getPropertyValue", "method_sig": "String getPropertyValue (String propertyName)", "description": "Used to retrieve the value of a CSS property if it has been explicitly\n set within this declaration block."}, {"method_name": "getPropertyCSSValue", "method_sig": "CSSValue getPropertyCSSValue (String propertyName)", "description": "Used to retrieve the object representation of the value of a CSS\n property if it has been explicitly set within this declaration block.\n This method returns null if the property is a shorthand\n property. Shorthand property values can only be accessed and modified\n as strings, using the getPropertyValue and\n setProperty methods."}, {"method_name": "removeProperty", "method_sig": "String removeProperty (String propertyName)\n               throws DOMException", "description": "Used to remove a CSS property if it has been explicitly set within\n this declaration block."}, {"method_name": "getPropertyPriority", "method_sig": "String getPropertyPriority (String propertyName)", "description": "Used to retrieve the priority of a CSS property (e.g. the\n \"important\" qualifier) if the priority has been\n explicitly set in this declaration block."}, {"method_name": "setProperty", "method_sig": "void setProperty (String propertyName,\n                 String value,\n                 String priority)\n          throws DOMException", "description": "Used to set a property value and priority within this declaration\n block. setProperty permits to modify a property or add a\n new one in the declaration block. Any call to this method may modify\n the order of properties in the item method."}, {"method_name": "getLength", "method_sig": "int getLength()", "description": "The number of properties that have been explicitly set in this\n declaration block. The range of valid indices is 0 to length-1\n inclusive."}, {"method_name": "item", "method_sig": "String item (int index)", "description": "Used to retrieve the properties that have been explicitly set in this\n declaration block. The order of the properties retrieved using this\n method does not have to be the order in which they were set. This\n method can be used to iterate over all properties in this declaration\n block."}, {"method_name": "getParentRule", "method_sig": "CSSRule getParentRule()", "description": "The CSS rule that contains this declaration block or null\n if this CSSStyleDeclaration is not attached to a\n CSSRule."}]}