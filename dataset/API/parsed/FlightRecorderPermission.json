{"name": "Class FlightRecorderPermission", "module": "jdk.jfr", "package": "jdk.jfr", "text": "Permission for controlling access to Flight Recorder.\n \n The following table provides a summary of what the permission\n allows, and the risks of granting code the permission.\n\n \nTable shows permission target name,\n      what the permission allows, and associated risks\n\n\nPermission Target Name\nWhat the Permission Allows\nRisks of Allowing this Permission\n\n\n\n\naccessFlightRecorder\nAbility to create a Flight Recorder instance, register callbacks to\n monitor the Flight Recorder life cycle, and control an existing instance\n of Flight Recorder, which can record and dump runtime information, such as\n stack traces, class names, and data in user defined events.\nA malicious user may be able to extract sensitive information that is stored in\n events and interrupt Flight Recorder by installing listeners or hooks that\n never finish.\n\n\nregisterEvent\nAbility to register events, write data to the Flight Recorder buffers,\n and execute code in a callback function for periodic events.\n\n A malicious user may be able to write sensitive information to Flight\n Recorder buffers.\n\n\n\n\n Typically, programmers do not create FlightRecorderPermission objects\n directly. Instead the objects are created by the security policy code that is based on\n reading the security policy file.", "codes": ["public final class FlightRecorderPermission\nextends BasicPermission"], "fields": [], "methods": []}