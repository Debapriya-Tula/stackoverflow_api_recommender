{"name": "Interface ParameterMetaData", "module": "java.sql", "package": "java.sql", "text": "An object that can be used to get information about the types\n and properties for each parameter marker in a\n PreparedStatement object. For some queries and driver\n implementations, the data that would be returned by a ParameterMetaData\n object may not be available until the PreparedStatement has\n been executed.\n\nSome driver implementations may not be able to provide information about the\ntypes and properties for each parameter marker in a CallableStatement\nobject.", "codes": ["public interface ParameterMetaData\nextends Wrapper"], "fields": [{"field_name": "parameterNoNulls", "field_sig": "static final\u00a0int parameterNoNulls", "description": "The constant indicating that a\n parameter will not allow NULL values."}, {"field_name": "parameterNullable", "field_sig": "static final\u00a0int parameterNullable", "description": "The constant indicating that a\n parameter will allow NULL values."}, {"field_name": "parameterNullableUnknown", "field_sig": "static final\u00a0int parameterNullableUnknown", "description": "The constant indicating that the\n nullability of a parameter is unknown."}, {"field_name": "parameterModeUnknown", "field_sig": "static final\u00a0int parameterModeUnknown", "description": "The constant indicating that the mode of the parameter is unknown."}, {"field_name": "parameterModeIn", "field_sig": "static final\u00a0int parameterModeIn", "description": "The constant indicating that the parameter's mode is IN."}, {"field_name": "parameterModeInOut", "field_sig": "static final\u00a0int parameterModeInOut", "description": "The constant indicating that the parameter's mode is INOUT."}, {"field_name": "parameterModeOut", "field_sig": "static final\u00a0int parameterModeOut", "description": "The constant indicating that the parameter's mode is  OUT."}], "methods": [{"method_name": "getParameterCount", "method_sig": "int getParameterCount()\n               throws SQLException", "description": "Retrieves the number of parameters in the PreparedStatement\n object for which this ParameterMetaData object contains\n information."}, {"method_name": "isNullable", "method_sig": "int isNullable (int param)\n        throws SQLException", "description": "Retrieves whether null values are allowed in the designated parameter."}, {"method_name": "isSigned", "method_sig": "boolean isSigned (int param)\n          throws SQLException", "description": "Retrieves whether values for the designated parameter can be signed numbers."}, {"method_name": "getPrecision", "method_sig": "int getPrecision (int param)\n          throws SQLException", "description": "Retrieves the designated parameter's specified column size.\n\n The returned value represents the maximum column size for the given parameter.\n For numeric data, this is the maximum precision.  For character data, this is the length in characters.\n For datetime datatypes, this is the length in characters of the String representation (assuming the\n maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes.  For the ROWID datatype,\n this is the length in bytes. 0 is returned for data types where the\n column size is not applicable."}, {"method_name": "getScale", "method_sig": "int getScale (int param)\n      throws SQLException", "description": "Retrieves the designated parameter's number of digits to right of the decimal point.\n 0 is returned for data types where the scale is not applicable."}, {"method_name": "getParameterType", "method_sig": "int getParameterType (int param)\n              throws SQLException", "description": "Retrieves the designated parameter's SQL type."}, {"method_name": "getParameterTypeName", "method_sig": "String getParameterTypeName (int param)\n                     throws SQLException", "description": "Retrieves the designated parameter's database-specific type name."}, {"method_name": "getParameterClassName", "method_sig": "String getParameterClassName (int param)\n                      throws SQLException", "description": "Retrieves the fully-qualified name of the Java class whose instances\n should be passed to the method PreparedStatement.setObject."}, {"method_name": "getParameterMode", "method_sig": "int getParameterMode (int param)\n              throws SQLException", "description": "Retrieves the designated parameter's mode."}]}