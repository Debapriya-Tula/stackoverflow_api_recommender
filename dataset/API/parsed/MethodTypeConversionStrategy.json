{"name": "Interface MethodTypeConversionStrategy", "module": "jdk.dynalink", "package": "jdk.dynalink.linker", "text": "Interface for objects representing a strategy for converting a method handle\n to a new type. Typical usage is for customizing a language runtime's handling\n of\n method invocation conversions.", "codes": ["@FunctionalInterface\npublic interface MethodTypeConversionStrategy"], "fields": [], "methods": [{"method_name": "asType", "method_sig": "MethodHandle asType (MethodHandle target,\n                    MethodType newType)", "description": "Converts a method handle to a new type."}]}