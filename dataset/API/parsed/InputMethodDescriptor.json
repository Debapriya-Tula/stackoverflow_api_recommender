{"name": "Interface InputMethodDescriptor", "module": "java.desktop", "package": "java.awt.im.spi", "text": "Defines methods that provide sufficient information about an input method\n to enable selection and loading of that input method.\n The input method itself is only loaded when it is actually used.", "codes": ["public interface InputMethodDescriptor"], "fields": [], "methods": [{"method_name": "getAvailableLocales", "method_sig": "Locale[] getAvailableLocales()\n                      throws AWTException", "description": "Returns the locales supported by the corresponding input method.\n The locale may describe just the language, or may also include\n country and variant information if needed.\n The information is used to select input methods by locale\n (InputContext.selectInputMethod(Locale)). It may also\n be used to sort input methods by locale in a user-visible\n list of input methods.\n \n Only the input method's primary locales should be returned.\n For example, if a Japanese input method also has a pass-through\n mode for Roman characters, typically still only Japanese would\n be returned. Thus, the list of locales returned is typically\n a subset of the locales for which the corresponding input method's\n implementation of InputMethod.setLocale(java.util.Locale) returns true.\n \n If hasDynamicLocaleList() returns true, this method is\n called each time the information is needed. This\n gives input methods that depend on network resources the chance\n to add or remove locales as resources become available or\n unavailable."}, {"method_name": "hasDynamicLocaleList", "method_sig": "boolean hasDynamicLocaleList()", "description": "Returns whether the list of available locales can change\n at runtime. This may be the case, for example, for adapters\n that access real input methods over the network."}, {"method_name": "getInputMethodDisplayName", "method_sig": "String getInputMethodDisplayName (Locale inputLocale,\n                                 Locale displayLanguage)", "description": "Returns the user-visible name of the corresponding\n input method for the given input locale in the language in which\n the name will be displayed.\n \n The inputLocale parameter specifies the locale for which text\n is input.\n This parameter can only take values obtained from this descriptor's\n getAvailableLocales() method or null. If it is null, an\n input locale independent name for the input method should be\n returned.\n \n If a name for the desired display language is not available, the\n method may fall back to some other language."}, {"method_name": "getInputMethodIcon", "method_sig": "Image getInputMethodIcon (Locale inputLocale)", "description": "Returns an icon for the corresponding input method.\n The icon may be used by a user interface for selecting input methods.\n \n The inputLocale parameter specifies the locale for which text\n is input.\n This parameter can only take values obtained from this descriptor's\n getAvailableLocales() method or null. If it is null, an\n input locale independent icon for the input method should be\n returned.\n \n The icon's size should be 16\u00d716 pixels."}, {"method_name": "createInputMethod", "method_sig": "InputMethod createInputMethod()\n                       throws Exception", "description": "Creates a new instance of the corresponding input method."}]}