{"name": "Class MBeanServerFactory", "module": "java.management", "package": "javax.management", "text": "Provides MBean server references.  There are no instances of\n this class.\nSince JMX 1.2 this class makes it possible to replace the default\n MBeanServer implementation. This is done using the\n MBeanServerBuilder class.\n The class of the initial MBeanServerBuilder to be\n instantiated can be specified through the\n javax.management.builder.initial system property.\n The specified class must be a public subclass of\n MBeanServerBuilder, and must have a public\n empty constructor.\n By default, if no value for that property is specified, an instance of\n javax.management.MBeanServerBuilder\n is created. Otherwise, the MBeanServerFactory attempts to load the\n specified class using\n Thread.currentThread().getContextClassLoader(), or if that is null,\n Class.forName(). Then\n it creates an initial instance of that Class using\n Class.newInstance(). If any checked exception\n is raised during this process (e.g.\n ClassNotFoundException,\n InstantiationException) the MBeanServerFactory\n will propagate this exception from within a RuntimeException.\nThe javax.management.builder.initial system property is\n consulted every time a new MBeanServer needs to be created, and the\n class pointed to by that property is loaded. If that class is different\n from that of the current MBeanServerBuilder, then a new MBeanServerBuilder\n is created. Otherwise, the MBeanServerFactory may create a new\n MBeanServerBuilder or reuse the current one.\nIf the class pointed to by the property cannot be\n loaded, or does not correspond to a valid subclass of MBeanServerBuilder\n then an exception is propagated, and no MBeanServer can be created until\n the javax.management.builder.initial system property is reset to\n valid value.\nThe MBeanServerBuilder makes it possible to wrap the MBeanServers\n returned by the default MBeanServerBuilder implementation, for the purpose\n of e.g. adding an additional security layer.", "codes": ["public class MBeanServerFactory\nextends Object"], "fields": [], "methods": [{"method_name": "releaseMBeanServer", "method_sig": "public static void releaseMBeanServer (MBeanServer mbeanServer)", "description": "Remove internal MBeanServerFactory references to a created\n MBeanServer. This allows the garbage collector to remove the\n MBeanServer object."}, {"method_name": "createMBeanServer", "method_sig": "public static MBeanServer createMBeanServer()", "description": "Return a new object implementing the MBeanServer interface\n with a standard default domain name.  The default domain name\n is used as the domain part in the ObjectName of MBeans when the\n domain is specified by the user is null.\nThe standard default domain name is\n DefaultDomain.\nThe MBeanServer reference is internally kept. This will\n allow findMBeanServer to return a reference to\n this MBeanServer object.\nThis method is equivalent to createMBeanServer(null)."}, {"method_name": "createMBeanServer", "method_sig": "public static MBeanServer createMBeanServer (String domain)", "description": "Return a new object implementing the MBeanServer\n interface with the specified default domain name.  The given\n domain name is used as the domain part in the ObjectName of\n MBeans when the domain is specified by the user is null.\nThe MBeanServer reference is internally kept. This will\n allow findMBeanServer to return a reference to\n this MBeanServer object."}, {"method_name": "newMBeanServer", "method_sig": "public static MBeanServer newMBeanServer()", "description": "Return a new object implementing the MBeanServer interface\n with a standard default domain name, without keeping an\n internal reference to this new object.  The default domain name\n is used as the domain part in the ObjectName of MBeans when the\n domain is specified by the user is null.\nThe standard default domain name is\n DefaultDomain.\nNo reference is kept. findMBeanServer will not\n be able to return a reference to this MBeanServer object, but\n the garbage collector will be able to remove the MBeanServer\n object when it is no longer referenced.\nThis method is equivalent to newMBeanServer(null)."}, {"method_name": "newMBeanServer", "method_sig": "public static MBeanServer newMBeanServer (String domain)", "description": "Return a new object implementing the MBeanServer interface\n with the specified default domain name, without keeping an\n internal reference to this new object.  The given domain name\n is used as the domain part in the ObjectName of MBeans when the\n domain is specified by the user is null.\nNo reference is kept. findMBeanServer will not\n be able to return a reference to this MBeanServer object, but\n the garbage collector will be able to remove the MBeanServer\n object when it is no longer referenced."}, {"method_name": "findMBeanServer", "method_sig": "public static ArrayList<MBeanServer> findMBeanServer (String agentId)", "description": "Return a list of registered MBeanServer objects.  A\n registered MBeanServer object is one that was created by one of\n the createMBeanServer methods and not subsequently\n released with releaseMBeanServer."}, {"method_name": "getClassLoaderRepository", "method_sig": "public static ClassLoaderRepository getClassLoaderRepository (MBeanServer server)", "description": "Return the ClassLoaderRepository used by the given MBeanServer.\n This method is equivalent to server.getClassLoaderRepository()."}]}