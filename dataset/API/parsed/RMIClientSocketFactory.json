{"name": "Interface RMIClientSocketFactory", "module": "java.rmi", "package": "java.rmi.server", "text": "An RMIClientSocketFactory instance is used by the RMI runtime\n in order to obtain client sockets for RMI calls.  A remote object can be\n associated with an RMIClientSocketFactory when it is\n created/exported via the constructors or exportObject methods\n of java.rmi.server.UnicastRemoteObject and\n java.rmi.activation.Activatable .\n\n An RMIClientSocketFactory instance associated with a remote\n object will be downloaded to clients when the remote object's reference is\n transmitted in an RMI call.  This RMIClientSocketFactory will\n be used to create connections to the remote object for remote method calls.\n\n An RMIClientSocketFactory instance can also be associated\n with a remote object registry so that clients can use custom socket\n communication with a remote object registry.\n\n An implementation of this interface should be serializable and\n should implement Object.equals(java.lang.Object) to return true when\n passed an instance that represents the same (functionally equivalent)\n client socket factory, and false otherwise (and it should also\n implement Object.hashCode() consistently with its\n Object.equals implementation).", "codes": ["public interface RMIClientSocketFactory"], "fields": [], "methods": [{"method_name": "createSocket", "method_sig": "Socket createSocket (String host,\n                    int port)\n             throws IOException", "description": "Create a client socket connected to the specified host and port."}]}