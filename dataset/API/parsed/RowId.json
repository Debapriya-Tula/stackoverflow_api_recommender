{"name": "Interface RowId", "module": "java.sql", "package": "java.sql", "text": "The representation (mapping) in the Java programming language of an SQL ROWID\n value. An SQL ROWID is a built-in type, a value of which can be thought of as\n an address  for its identified row in a database table. Whether that address\n is logical or, in any  respects, physical is determined by its originating data\n source.\n \n Methods in the interfaces ResultSet, CallableStatement,\n and PreparedStatement, such as getRowId and setRowId\n allow a programmer to access a SQL ROWID  value. The RowId\n interface provides a method\n for representing the value of the ROWID as a byte array or as a\n String.\n \n The method getRowIdLifetime in the interface DatabaseMetaData,\n can be used\n to determine if a RowId object remains valid for the duration of the transaction in\n which  the RowId was created, the duration of the session in which\n the RowId was created,\n or, effectively, for as long as its identified row is not deleted. In addition\n to specifying the duration of its valid lifetime outside its originating data\n source, getRowIdLifetime specifies the duration of a ROWID\n value's valid lifetime\n within its originating data source. In this, it differs from a large object,\n because there is no limit on the valid lifetime of a large  object within its\n originating data source.\n \n All methods on the RowId interface must be fully implemented if the\n JDBC driver supports the data type.", "codes": ["public interface RowId"], "fields": [], "methods": [{"method_name": "equals", "method_sig": "boolean equals (Object obj)", "description": "Compares this RowId to the specified object. The result is\n true if and only if the argument is not null and is a RowId\n object that represents the same ROWID as  this object.\n \n It is important\n to consider both the origin and the valid lifetime of a RowId\n when comparing it to another RowId. If both are valid, and\n both are from the same table on the same data source, then if they are equal\n they identify\n the same row; if one or more is no longer guaranteed to be valid, or if\n they originate from different data sources, or different tables on the\n same data source, they  may be equal but still\n not identify the same row."}, {"method_name": "getBytes", "method_sig": "byte[] getBytes()", "description": "Returns an array of bytes representing the value of the SQL ROWID\n designated by this java.sql.RowId object."}, {"method_name": "toString", "method_sig": "String toString()", "description": "Returns a String representing the value of the SQL ROWID designated by this\n java.sql.RowId object.\n \nLike java.sql.Date.toString()\n returns the contents of its DATE as the String \"2004-03-17\"\n rather than as  DATE literal in SQL (which would have been the String\n DATE \"2004-03-17\"), toString()\n returns the contents of its ROWID in a form specific to the driver supplying\n the connection, and possibly not as a ROWID literal."}, {"method_name": "hashCode", "method_sig": "int hashCode()", "description": "Returns a hash code value of this RowId object."}]}