{"name": "Interface OpenMBeanParameterInfo", "module": "java.management", "package": "javax.management.openmbean", "text": "Describes a parameter used in one or more operations or\n constructors of an open MBean.\nThis interface declares the same methods as the class MBeanParameterInfo.  A class implementing this\n interface (typically OpenMBeanParameterInfoSupport) should\n extend MBeanParameterInfo.", "codes": ["public interface OpenMBeanParameterInfo"], "fields": [], "methods": [{"method_name": "getDescription", "method_sig": "String getDescription()", "description": "Returns a human readable description of the parameter\n described by this OpenMBeanParameterInfo instance."}, {"method_name": "getName", "method_sig": "String getName()", "description": "Returns the name of the parameter\n described by this OpenMBeanParameterInfo instance."}, {"method_name": "getOpenType", "method_sig": "OpenType<?> getOpenType()", "description": "Returns the open type of the values of the parameter\n described by this OpenMBeanParameterInfo instance."}, {"method_name": "getDefaultValue", "method_sig": "Object getDefaultValue()", "description": "Returns the default value for this parameter, if it has one, or\n null otherwise."}, {"method_name": "getLegalValues", "method_sig": "Set<?> getLegalValues()", "description": "Returns the set of legal values for this parameter, if it has\n one, or null otherwise."}, {"method_name": "getMinValue", "method_sig": "Comparable<?> getMinValue()", "description": "Returns the minimal value for this parameter, if it has one, or\n null otherwise."}, {"method_name": "getMaxValue", "method_sig": "Comparable<?> getMaxValue()", "description": "Returns the maximal value for this parameter, if it has one, or\n null otherwise."}, {"method_name": "hasDefaultValue", "method_sig": "boolean hasDefaultValue()", "description": "Returns true if this parameter has a specified default\n value, or false otherwise."}, {"method_name": "hasLegalValues", "method_sig": "boolean hasLegalValues()", "description": "Returns true if this parameter has a specified set of\n legal values, or false otherwise."}, {"method_name": "hasMinValue", "method_sig": "boolean hasMinValue()", "description": "Returns true if this parameter has a specified minimal\n value, or false otherwise."}, {"method_name": "hasMaxValue", "method_sig": "boolean hasMaxValue()", "description": "Returns true if this parameter has a specified maximal\n value, or false otherwise."}, {"method_name": "isValue", "method_sig": "boolean isValue (Object obj)", "description": "Tests whether obj is a valid value for the parameter\n described by this OpenMBeanParameterInfo instance."}, {"method_name": "equals", "method_sig": "boolean equals (Object obj)", "description": "Compares the specified obj parameter with this OpenMBeanParameterInfo instance for equality.\n \n Returns true if and only if all of the following statements are true:\n \nobj is non null,\nobj also implements the OpenMBeanParameterInfo interface,\ntheir names are equal\ntheir open types are equal\ntheir default, min, max and legal values are equal.\n\n This ensures that this equals method works properly for obj parameters which are\n different implementations of the OpenMBeanParameterInfo interface.\n \u00a0"}, {"method_name": "hashCode", "method_sig": "int hashCode()", "description": "Returns the hash code value for this OpenMBeanParameterInfo instance.\n \n The hash code of an OpenMBeanParameterInfo instance is the sum of the hash codes\n of all elements of information used in equals comparisons\n (ie: its name, its open type, and its default, min, max and legal values).\n \n This ensures that t1.equals(t2) implies that t1.hashCode()==t2.hashCode()\n for any two OpenMBeanParameterInfo instances t1 and t2,\n as required by the general contract of the method\n Object.hashCode()."}, {"method_name": "toString", "method_sig": "String toString()", "description": "Returns a string representation of this OpenMBeanParameterInfo instance.\n \n The string representation consists of the name of this class (ie javax.management.openmbean.OpenMBeanParameterInfo),\n the string representation of the name and open type of the described parameter,\n and the string representation of its default, min, max and legal values."}]}