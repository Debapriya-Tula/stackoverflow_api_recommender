{"name": "Annotation Type Deprecated", "module": "java.base", "package": "java.lang", "text": "A program element annotated @Deprecated is one that programmers\n are discouraged from using. An element may be deprecated for any of several\n reasons, for example, its usage is likely to lead to errors; it may\n be changed incompatibly or removed in a future version; it has been\n superseded by a newer, usually preferable alternative; or it is obsolete.\n\n Compilers issue warnings when a deprecated program element is used or\n overridden in non-deprecated code. Use of the @Deprecated\n annotation on a local variable declaration or on a parameter declaration\n or a package declaration has no effect on the warnings issued by a compiler.\n\n When a module is deprecated, the use of that module in \n requires, but not in exports or opens clauses causes\n a warning to be issued. A module being deprecated does not cause\n warnings to be issued for uses of types within the module.\n\n This annotation type has a string-valued element since. The value\n of this element indicates the version in which the annotated program element\n was first deprecated.\n\n This annotation type has a boolean-valued element forRemoval.\n A value of true indicates intent to remove the annotated program\n element in a future version. A value of false indicates that use of\n the annotated program element is discouraged, but at the time the program\n element was annotated, there was no specific intent to remove it.", "codes": ["@Documented\n@Retention(RUNTIME)\n@Target({CONSTRUCTOR,FIELD,LOCAL_VARIABLE,METHOD,PACKAGE,MODULE,PARAMETER,TYPE})\npublic @interface Deprecated"], "fields": [], "methods": []}