{"name": "Interface LoggingMXBean", "module": "java.logging", "package": "java.util.logging", "text": "The management interface for the logging facility.\n\n java.lang.management.PlatformLoggingMXBean is the management interface\n for logging facility registered in the platform MBeanServer.\n It is recommended to use the PlatformLoggingMXBean obtained via\n the ManagementFactory.getPlatformMXBean(PlatformLoggingMXBean.class) method.", "codes": ["@Deprecated(since=\"9\")\npublic interface LoggingMXBean"], "fields": [], "methods": [{"method_name": "getLoggerNames", "method_sig": "List<String> getLoggerNames()", "description": "Returns the list of currently registered logger names. This method\n calls LogManager.getLoggerNames() and returns a list\n of the logger names."}, {"method_name": "getLoggerLevel", "method_sig": "String getLoggerLevel (String loggerName)", "description": "Gets the name of the log level associated with the specified logger.\n If the specified logger does not exist, null\n is returned.\n This method first finds the logger of the given name and\n then returns the name of the log level by calling:\n \nLogger.getLevel().getName();\n \n\n If the Level of the specified logger is null,\n which means that this logger's effective level is inherited\n from its parent, an empty string will be returned."}, {"method_name": "setLoggerLevel", "method_sig": "void setLoggerLevel (String loggerName,\n                    String levelName)", "description": "Sets the specified logger to the specified new level.\n If the levelName is not null, the level\n of the specified logger is set to the parsed Level\n matching the levelName.\n If the levelName is null, the level\n of the specified logger is set to null and\n the effective level of the logger is inherited from\n its nearest ancestor with a specific (non-null) level value."}, {"method_name": "getParentLoggerName", "method_sig": "String getParentLoggerName (String loggerName)", "description": "Returns the name of the parent for the specified logger.\n If the specified logger does not exist, null is returned.\n If the specified logger is the root Logger in the namespace,\n the result will be an empty string."}]}