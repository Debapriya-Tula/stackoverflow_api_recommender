{"name": "Class DefaultInternalObjectFilter", "module": "jdk.dynalink", "package": "jdk.dynalink.linker.support", "text": "Default implementation for a\n DynamicLinkerFactory.setInternalObjectsFilter(MethodHandleTransformer)\n that delegates to a pair of filtering method handles. It takes a method\n handle of Object(Object) type for filtering parameter values and\n another one of the same type for filtering return values. It applies them as\n parameter and return value filters on method handles passed to its\n MethodHandleTransformer.transform(MethodHandle) method, on those parameters and return values\n that are declared to have type Object. Also handles\n method handles that support variable\n arity calls with a last Object[] parameter. You can broadly think of\n the parameter filter as being a wrapping method for exposing internal runtime\n objects wrapped into an adapter with some public interface, and the return\n value filter as being its inverse unwrapping method.", "codes": ["public class DefaultInternalObjectFilter\nextends Object\nimplements MethodHandleTransformer"], "fields": [], "methods": []}