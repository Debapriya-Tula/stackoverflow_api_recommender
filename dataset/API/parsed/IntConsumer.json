{"name": "Interface IntConsumer", "module": "java.base", "package": "java.util.function", "text": "Represents an operation that accepts a single int-valued argument and\n returns no result.  This is the primitive type specialization of\n Consumer for int.  Unlike most other functional interfaces,\n IntConsumer is expected to operate via side-effects.\n\n This is a functional interface\n whose functional method is accept(int).", "codes": ["@FunctionalInterface\npublic interface IntConsumer"], "fields": [], "methods": [{"method_name": "accept", "method_sig": "void accept (int value)", "description": "Performs this operation on the given argument."}, {"method_name": "andThen", "method_sig": "default IntConsumer andThen (IntConsumer after)", "description": "Returns a composed IntConsumer that performs, in sequence, this\n operation followed by the after operation. If performing either\n operation throws an exception, it is relayed to the caller of the\n composed operation.  If performing this operation throws an exception,\n the after operation will not be performed."}]}