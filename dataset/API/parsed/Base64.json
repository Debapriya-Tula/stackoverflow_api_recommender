{"name": "Class Base64", "module": "java.base", "package": "java.util", "text": "This class consists exclusively of static methods for obtaining\n encoders and decoders for the Base64 encoding scheme. The\n implementation of this class supports the following types of Base64\n as specified in\n RFC 4648 and\n RFC 2045.\n\n \nBasic\n Uses \"The Base64 Alphabet\" as specified in Table 1 of\n     RFC 4648 and RFC 2045 for encoding and decoding operation.\n     The encoder does not add any line feed (line separator)\n     character. The decoder rejects data that contains characters\n     outside the base64 alphabet.\nURL and Filename safe\n Uses the \"URL and Filename safe Base64 Alphabet\" as specified\n     in Table 2 of RFC 4648 for encoding and decoding. The\n     encoder does not add any line feed (line separator) character.\n     The decoder rejects data that contains characters outside the\n     base64 alphabet.\nMIME\n Uses \"The Base64 Alphabet\" as specified in Table 1 of\n     RFC 2045 for encoding and decoding operation. The encoded output\n     must be represented in lines of no more than 76 characters each\n     and uses a carriage return '\\r' followed immediately by\n     a linefeed '\\n' as the line separator. No line separator\n     is added to the end of the encoded output. All line separators\n     or other characters not found in the base64 alphabet table are\n     ignored in decoding operation.\n\n Unless otherwise noted, passing a null argument to a\n method of this class will cause a NullPointerException to be thrown.", "codes": ["public class Base64\nextends Object"], "fields": [], "methods": [{"method_name": "getEncoder", "method_sig": "public static Base64.Encoder getEncoder()", "description": "Returns a Base64.Encoder that encodes using the\n Basic type base64 encoding scheme."}, {"method_name": "getUrlEncoder", "method_sig": "public static Base64.Encoder getUrlEncoder()", "description": "Returns a Base64.Encoder that encodes using the\n URL and Filename safe type base64\n encoding scheme."}, {"method_name": "getMimeEncoder", "method_sig": "public static Base64.Encoder getMimeEncoder()", "description": "Returns a Base64.Encoder that encodes using the\n MIME type base64 encoding scheme."}, {"method_name": "getMimeEncoder", "method_sig": "public static Base64.Encoder getMimeEncoder (int lineLength,\n                                            byte[] lineSeparator)", "description": "Returns a Base64.Encoder that encodes using the\n MIME type base64 encoding scheme\n with specified line length and line separators."}, {"method_name": "getDecoder", "method_sig": "public static Base64.Decoder getDecoder()", "description": "Returns a Base64.Decoder that decodes using the\n Basic type base64 encoding scheme."}, {"method_name": "getUrlDecoder", "method_sig": "public static Base64.Decoder getUrlDecoder()", "description": "Returns a Base64.Decoder that decodes using the\n URL and Filename safe type base64\n encoding scheme."}, {"method_name": "getMimeDecoder", "method_sig": "public static Base64.Decoder getMimeDecoder()", "description": "Returns a Base64.Decoder that decodes using the\n MIME type base64 decoding scheme."}]}