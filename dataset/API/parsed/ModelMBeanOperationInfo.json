{"name": "Class ModelMBeanOperationInfo", "module": "java.management", "package": "javax.management.modelmbean", "text": "The ModelMBeanOperationInfo object describes a management operation of\n the ModelMBean.  It is a subclass of MBeanOperationInfo with the addition\n of an associated Descriptor and an implementation of the DescriptorAccess\n interface.\n\n The fields in the descriptor are defined, but not limited to, the following.\n Note that when the Type in this table is Number, a String that is the decimal\n representation of a Long can also be used.\n\nModelMBeanOperationInfo Fields\n\nNameTypeMeaning\n\n\nnameString\nOperation name.\ndescriptorTypeString\nMust be \"operation\".\nclassString\nClass where method is defined (fully qualified).\nroleString\nMust be \"operation\", \"getter\", or \"setter\".\ntargetObjectObject\nObject on which to execute this method.\ntargetTypeString\ntype of object reference for targetObject. Can be:\n         ObjectReference | Handle | EJBHandle | IOR | RMIReference.\nvalueObject\nCached value for operation.\ndisplayNameString\nHuman readable display name of the operation.\ncurrencyTimeLimitNumber\nHow long cached value is valid.\nlastUpdatedTimeStampNumber\nWhen cached value was set.\nvisibilityNumber\n1-4 where 1: always visible 4: rarely visible.\npresentationStringString\nXML formatted string to describe how to present operation\n\n\nThe default descriptor will have name, descriptorType, displayName and\n role fields set.  The default value of the name and displayName fields is\n the operation name.\nNote: because of inconsistencies in previous versions of\n this specification, it is recommended not to use negative or zero\n values for currencyTimeLimit.  To indicate that a\n cached value is never valid, omit the\n currencyTimeLimit field.  To indicate that it is\n always valid, use a very large number for this field.\nThe serialVersionUID of this class is 6532732096650090465L.", "codes": ["public class ModelMBeanOperationInfo\nextends MBeanOperationInfo\nimplements DescriptorAccess"], "fields": [], "methods": [{"method_name": "clone", "method_sig": "public Object clone()", "description": "Creates and returns a new ModelMBeanOperationInfo which is a\n duplicate of this ModelMBeanOperationInfo."}, {"method_name": "getDescriptor", "method_sig": "public Descriptor getDescriptor()", "description": "Returns a copy of the associated Descriptor of the\n ModelMBeanOperationInfo."}, {"method_name": "setDescriptor", "method_sig": "public void setDescriptor (Descriptor inDescriptor)", "description": "Sets associated Descriptor (full replace) for the\n ModelMBeanOperationInfo If the new Descriptor is null, then\n the associated Descriptor reverts to a default descriptor.\n The Descriptor is validated before it is assigned.  If the\n new Descriptor is invalid, then a\n RuntimeOperationsException wrapping an\n IllegalArgumentException is thrown."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns a string containing the entire contents of the\n ModelMBeanOperationInfo in human readable form."}]}