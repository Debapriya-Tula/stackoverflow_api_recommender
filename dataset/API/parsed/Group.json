{"name": "Interface Group", "module": "java.base", "package": "java.security.acl", "text": "This interface is used to represent a group of principals. (A principal\n represents an entity such as an individual user or a company). \n\n Note that Group extends Principal. Thus, either a Principal or a Group can\n be passed as an argument to methods containing a Principal parameter. For\n example, you can add either a Principal or a Group to a Group object by\n calling the object's addMember method, passing it the\n Principal or Group.", "codes": ["@Deprecated(since=\"9\",\n            forRemoval=true)\npublic interface Group\nextends Principal"], "fields": [], "methods": [{"method_name": "addMember", "method_sig": "boolean addMember (Principal user)", "description": "Adds the specified member to the group."}, {"method_name": "removeMember", "method_sig": "boolean removeMember (Principal user)", "description": "Removes the specified member from the group."}, {"method_name": "isMember", "method_sig": "boolean isMember (Principal member)", "description": "Returns true if the passed principal is a member of the group.\n This method does a recursive search, so if a principal belongs to a\n group which is a member of this group, true is returned."}, {"method_name": "members", "method_sig": "Enumeration<? extends Principal> members()", "description": "Returns an enumeration of the members in the group.\n The returned objects can be instances of either Principal\n or Group (which is a subclass of Principal)."}]}