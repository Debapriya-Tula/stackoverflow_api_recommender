{"name": "Class JRadioButtonMenuItem", "module": "java.desktop", "package": "javax.swing", "text": "An implementation of a radio button menu item.\n A JRadioButtonMenuItem is\n a menu item that is part of a group of menu items in which only one\n item in the group can be selected. The selected item displays its\n selected state. Selecting it causes any other selected item to\n switch to the unselected state.\n To control the selected state of a group of radio button menu items,\n use a ButtonGroup object.\n \n Menu items can be configured, and to some degree controlled, by\n Actions.  Using an\n Action with a menu item has many benefits beyond directly\n configuring a menu item.  Refer to \n Swing Components Supporting Action for more\n details, and you can find more information in How\n to Use Actions, a section in The Java Tutorial.\n \n Some menus can have several button groups with radio button menu items. In\n this case it is useful that clicking on one radio button menu item does not\n close the menu. Such behavior can be controlled either by client\n JComponent.putClientProperty(java.lang.Object, java.lang.Object) or the Look and Feel\n UIManager.put(java.lang.Object, java.lang.Object) property named\n \"RadioButtonMenuItem.doNotCloseOnMouseClick\". The default value is\n false. Setting the property to true prevents the menu from\n closing when it is clicked by the mouse. If the client property is set its\n value is always used; otherwise the L&F property is queried.\n Note: some L&Fs may ignore this property. All built-in L&Fs\n inherit this behaviour.\n \n For further documentation and examples see\n How to Use Menus,\n a section in The Java Tutorial.\n\nWarning: Swing is not thread safe. For more\n information see Swing's Threading\n Policy.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["@JavaBean(description=\"A component within a group of menu items which can be selected.\")\npublic class JRadioButtonMenuItem\nextends JMenuItem\nimplements Accessible"], "fields": [], "methods": [{"method_name": "getUIClassID", "method_sig": "@BeanProperty(bound=false)\npublic String getUIClassID()", "description": "Returns the name of the L&F class that renders this component."}, {"method_name": "paramString", "method_sig": "protected String paramString()", "description": "Returns a string representation of this\n JRadioButtonMenuItem.  This method\n is intended to be used only for debugging purposes, and the\n content and format of the returned string may vary between\n implementations. The returned string may be empty but may not\n be null."}, {"method_name": "getAccessibleContext", "method_sig": "@BeanProperty(bound=false)\npublic AccessibleContext getAccessibleContext()", "description": "Gets the AccessibleContext associated with this JRadioButtonMenuItem.\n For JRadioButtonMenuItems, the AccessibleContext takes the form of an\n AccessibleJRadioButtonMenuItem.\n A new AccessibleJRadioButtonMenuItem instance is created if necessary."}]}