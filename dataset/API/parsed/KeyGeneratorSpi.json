{"name": "Class KeyGeneratorSpi", "module": "java.base", "package": "javax.crypto", "text": "This class defines the Service Provider Interface (SPI)\n for the KeyGenerator class.\n All the abstract methods in this class must be implemented by each\n cryptographic service provider who wishes to supply the implementation\n of a key generator for a particular algorithm.\n\n In case the client does not explicitly initialize the KeyGenerator\n (via a call to an init method), each provider must\n supply (and document) a default initialization.\n See the Keysize Restriction sections of the\n JDK Providers\n document for information on the KeyGenerator defaults used by\n JDK providers.\n However, note that defaults may vary across different providers.\n Additionally, the default value for a provider may change in a future\n version. Therefore, it is recommended to explicitly initialize the\n KeyGenerator instead of relying on provider-specific defaults.", "codes": ["public abstract class KeyGeneratorSpi\nextends Object"], "fields": [], "methods": [{"method_name": "engineInit", "method_sig": "protected abstract void engineInit (SecureRandom random)", "description": "Initializes the key generator."}, {"method_name": "engineInit", "method_sig": "protected abstract void engineInit (AlgorithmParameterSpec params,\n                                   SecureRandom random)\n                            throws InvalidAlgorithmParameterException", "description": "Initializes the key generator with the specified parameter\n set and a user-provided source of randomness."}, {"method_name": "engineInit", "method_sig": "protected abstract void engineInit (int keysize,\n                                   SecureRandom random)", "description": "Initializes this key generator for a certain keysize, using the given\n source of randomness."}, {"method_name": "engineGenerateKey", "method_sig": "protected abstract SecretKey engineGenerateKey()", "description": "Generates a secret key."}]}