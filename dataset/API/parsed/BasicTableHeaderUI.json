{"name": "Class BasicTableHeaderUI", "module": "java.desktop", "package": "javax.swing.plaf.basic", "text": "BasicTableHeaderUI implementation", "codes": ["public class BasicTableHeaderUI\nextends TableHeaderUI"], "fields": [{"field_name": "header", "field_sig": "protected\u00a0JTableHeader header", "description": "The JTableHeader that is delegating the painting to this UI."}, {"field_name": "rendererPane", "field_sig": "protected\u00a0CellRendererPane rendererPane", "description": "The instance of CellRendererPane."}, {"field_name": "mouseInputListener", "field_sig": "protected\u00a0MouseInputListener mouseInputListener", "description": "Listeners that are attached to the JTable"}], "methods": [{"method_name": "createMouseInputListener", "method_sig": "protected MouseInputListener createMouseInputListener()", "description": "Creates the mouse listener for the JTableHeader."}, {"method_name": "createUI", "method_sig": "public static ComponentUI createUI (JComponent h)", "description": "Returns a new instance of BasicTableHeaderUI."}, {"method_name": "installDefaults", "method_sig": "protected void installDefaults()", "description": "Initializes JTableHeader properties such as font, foreground, and background.\n The font, foreground, and background properties are only set if their\n current value is either null or a UIResource, other properties are set\n if the current value is null."}, {"method_name": "installListeners", "method_sig": "protected void installListeners()", "description": "Attaches listeners to the JTableHeader."}, {"method_name": "installKeyboardActions", "method_sig": "protected void installKeyboardActions()", "description": "Register all keyboard actions on the JTableHeader."}, {"method_name": "uninstallDefaults", "method_sig": "protected void uninstallDefaults()", "description": "Uninstalls default properties"}, {"method_name": "uninstallListeners", "method_sig": "protected void uninstallListeners()", "description": "Unregisters listeners."}, {"method_name": "uninstallKeyboardActions", "method_sig": "protected void uninstallKeyboardActions()", "description": "Unregisters default key actions."}, {"method_name": "getRolloverColumn", "method_sig": "protected int getRolloverColumn()", "description": "Returns the index of the column header over which the mouse\n currently is. When the mouse is not over the table header,\n -1 is returned."}, {"method_name": "rolloverColumnUpdated", "method_sig": "protected void rolloverColumnUpdated (int oldColumn,\n                                     int newColumn)", "description": "This method gets called every time when a rollover column in the table\n header is updated. Every look and feel that supports a rollover effect\n in a table header should override this method and repaint the header."}, {"method_name": "getBaseline", "method_sig": "public int getBaseline (JComponent c,\n                       int width,\n                       int height)", "description": "Returns the baseline."}, {"method_name": "getMinimumSize", "method_sig": "public Dimension getMinimumSize (JComponent c)", "description": "Return the minimum size of the header. The minimum width is the sum\n of the minimum widths of each column (plus inter-cell spacing)."}, {"method_name": "getPreferredSize", "method_sig": "public Dimension getPreferredSize (JComponent c)", "description": "Return the preferred size of the header. The preferred height is the\n maximum of the preferred heights of all of the components provided\n by the header renderers. The preferred width is the sum of the\n preferred widths of each column (plus inter-cell spacing)."}, {"method_name": "getMaximumSize", "method_sig": "public Dimension getMaximumSize (JComponent c)", "description": "Return the maximum size of the header. The maximum width is the sum\n of the maximum widths of each column (plus inter-cell spacing)."}]}