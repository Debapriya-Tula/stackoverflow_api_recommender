{"name": "Interface NewClassTree", "module": "jdk.compiler", "package": "com.sun.source.tree", "text": "A tree node to declare a new instance of a class.\n\n For example:\n \n   new identifier ( )\n\n   new identifier ( arguments )\n\n   new typeArguments identifier ( arguments )\n       classBody\n\n   enclosingExpression.new identifier ( arguments )\n ", "codes": ["public interface NewClassTree\nextends ExpressionTree"], "fields": [], "methods": [{"method_name": "getEnclosingExpression", "method_sig": "ExpressionTree getEnclosingExpression()", "description": "Returns the enclosing expression, or null if none."}, {"method_name": "getTypeArguments", "method_sig": "List<? extends Tree> getTypeArguments()", "description": "Returns the type arguments for the object being created."}, {"method_name": "getIdentifier", "method_sig": "ExpressionTree getIdentifier()", "description": "Returns the name of the class being instantiated."}, {"method_name": "getArguments", "method_sig": "List<? extends ExpressionTree> getArguments()", "description": "Returns the arguments for the constructor to be invoked."}, {"method_name": "getClassBody", "method_sig": "ClassTree getClassBody()", "description": "Returns the class body if an anonymous class is being\n instantiated, and null otherwise."}]}