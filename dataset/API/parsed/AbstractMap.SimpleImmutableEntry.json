{"name": "Class AbstractMap.SimpleImmutableEntry<K,\u200bV>", "module": "java.base", "package": "java.util", "text": "An Entry maintaining an immutable key and value.  This class\n does not support method setValue.  This class may be\n convenient in methods that return thread-safe snapshots of\n key-value mappings.", "codes": ["public static class AbstractMap.SimpleImmutableEntry<K, V>\nextends Object\nimplements Map.Entry<K, V>, Serializable"], "fields": [], "methods": [{"method_name": "getKey", "method_sig": "public K getKey()", "description": "Returns the key corresponding to this entry."}, {"method_name": "getValue", "method_sig": "public V getValue()", "description": "Returns the value corresponding to this entry."}, {"method_name": "setValue", "method_sig": "public V setValue (V value)", "description": "Replaces the value corresponding to this entry with the specified\n value (optional operation).  This implementation simply throws\n UnsupportedOperationException, as this class implements\n an immutable map entry."}, {"method_name": "equals", "method_sig": "public boolean equals (Object o)", "description": "Compares the specified object with this entry for equality.\n Returns true if the given object is also a map entry and\n the two entries represent the same mapping.  More formally, two\n entries e1 and e2 represent the same mapping\n if\n   (e1.getKey()==null ?\n    e2.getKey()==null :\n    e1.getKey().equals(e2.getKey()))\n   &&\n   (e1.getValue()==null ?\n    e2.getValue()==null :\n    e1.getValue().equals(e2.getValue()))\n This ensures that the equals method works properly across\n different implementations of the Map.Entry interface."}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Returns the hash code value for this map entry.  The hash code\n of a map entry e is defined to be: \n   (e.getKey()==null   ? 0 : e.getKey().hashCode()) ^\n   (e.getValue()==null ? 0 : e.getValue().hashCode())\n This ensures that e1.equals(e2) implies that\n e1.hashCode()==e2.hashCode() for any two Entries\n e1 and e2, as required by the general\n contract of Object.hashCode()."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns a String representation of this map entry.  This\n implementation returns the string representation of this\n entry's key followed by the equals character (\"=\")\n followed by the string representation of this entry's value."}]}