{"name": "Interface DocTreeVisitor<R,\u200bP>", "module": "jdk.compiler", "package": "com.sun.source.doctree", "text": "A visitor of trees, in the style of the visitor design pattern.\n Classes implementing this interface are used to operate\n on a tree when the kind of tree is unknown at compile time.\n When a visitor is passed to an tree's accept method, the visitXyz method most applicable\n to that tree is invoked.\n\n  Classes implementing this interface may or may not throw a\n NullPointerException if the additional parameter p\n is null; see documentation of the implementing class for\n details.\n\n  WARNING: It is possible that methods will be added to\n this interface to accommodate new, currently unknown, doc comment\n structures added to future versions of the Java\u2122 programming\n language.  Therefore, visitor classes directly implementing this\n interface may be source incompatible with future versions of the\n platform.", "codes": ["public interface DocTreeVisitor<R, P>"], "fields": [], "methods": [{"method_name": "visitAttribute", "method_sig": "R visitAttribute (AttributeTree node,\n                 P p)", "description": "Visits an AttributeTree node."}, {"method_name": "visitAuthor", "method_sig": "R visitAuthor (AuthorTree node,\n              P p)", "description": "Visits an AuthorTree node."}, {"method_name": "visitComment", "method_sig": "R visitComment (CommentTree node,\n               P p)", "description": "Visits a CommentTree node."}, {"method_name": "visitDeprecated", "method_sig": "R visitDeprecated (DeprecatedTree node,\n                  P p)", "description": "Visits a DeprecatedTree node."}, {"method_name": "visitDocComment", "method_sig": "R visitDocComment (DocCommentTree node,\n                  P p)", "description": "Visits a DocCommentTree node."}, {"method_name": "visitDocRoot", "method_sig": "R visitDocRoot (DocRootTree node,\n               P p)", "description": "Visits a DocRootTree node."}, {"method_name": "visitDocType", "method_sig": "default R visitDocType (DocTypeTree node,\n                       P p)", "description": "Visits a DocTypeTree node."}, {"method_name": "visitEndElement", "method_sig": "R visitEndElement (EndElementTree node,\n                  P p)", "description": "Visits an EndElementTree node."}, {"method_name": "visitEntity", "method_sig": "R visitEntity (EntityTree node,\n              P p)", "description": "Visits an EntityTree node."}, {"method_name": "visitErroneous", "method_sig": "R visitErroneous (ErroneousTree node,\n                 P p)", "description": "Visits an ErroneousTree node."}, {"method_name": "visitHidden", "method_sig": "default R visitHidden (HiddenTree node,\n                      P p)", "description": "Visits a HiddenTree node."}, {"method_name": "visitIdentifier", "method_sig": "R visitIdentifier (IdentifierTree node,\n                  P p)", "description": "Visits an IdentifierTree node."}, {"method_name": "visitIndex", "method_sig": "default R visitIndex (IndexTree node,\n                     P p)", "description": "Visits an IndexTree node."}, {"method_name": "visitInheritDoc", "method_sig": "R visitInheritDoc (InheritDocTree node,\n                  P p)", "description": "Visits an InheritDocTree node."}, {"method_name": "visitLink", "method_sig": "R visitLink (LinkTree node,\n            P p)", "description": "Visits a LinkTree node."}, {"method_name": "visitLiteral", "method_sig": "R visitLiteral (LiteralTree node,\n               P p)", "description": "Visits an LiteralTree node."}, {"method_name": "visitParam", "method_sig": "R visitParam (ParamTree node,\n             P p)", "description": "Visits a ParamTree node."}, {"method_name": "visitProvides", "method_sig": "default R visitProvides (ProvidesTree node,\n                        P p)", "description": "Visits a ProvidesTree node."}, {"method_name": "visitReference", "method_sig": "R visitReference (ReferenceTree node,\n                 P p)", "description": "Visits a ReferenceTree node."}, {"method_name": "visitReturn", "method_sig": "R visitReturn (ReturnTree node,\n              P p)", "description": "Visits a ReturnTree node."}, {"method_name": "visitSee", "method_sig": "R visitSee (SeeTree node,\n           P p)", "description": "Visits a SeeTree node."}, {"method_name": "visitSerial", "method_sig": "R visitSerial (SerialTree node,\n              P p)", "description": "Visits a SerialTree node."}, {"method_name": "visitSerialData", "method_sig": "R visitSerialData (SerialDataTree node,\n                  P p)", "description": "Visits a SerialDataTree node."}, {"method_name": "visitSerialField", "method_sig": "R visitSerialField (SerialFieldTree node,\n                   P p)", "description": "Visits a SerialFieldTree node."}, {"method_name": "visitSince", "method_sig": "R visitSince (SinceTree node,\n             P p)", "description": "Visits a SinceTree node."}, {"method_name": "visitStartElement", "method_sig": "R visitStartElement (StartElementTree node,\n                    P p)", "description": "Visits a StartElementTree node."}, {"method_name": "visitSummary", "method_sig": "default R visitSummary (SummaryTree node,\n                       P p)", "description": "Visits a SummaryTree node."}, {"method_name": "visitText", "method_sig": "R visitText (TextTree node,\n            P p)", "description": "Visits a TextTree node."}, {"method_name": "visitThrows", "method_sig": "R visitThrows (ThrowsTree node,\n              P p)", "description": "Visits a ThrowsTree node."}, {"method_name": "visitUnknownBlockTag", "method_sig": "R visitUnknownBlockTag (UnknownBlockTagTree node,\n                       P p)", "description": "Visits an UnknownBlockTagTree node."}, {"method_name": "visitUnknownInlineTag", "method_sig": "R visitUnknownInlineTag (UnknownInlineTagTree node,\n                        P p)", "description": "Visits an UnknownInlineTagTree node."}, {"method_name": "visitUses", "method_sig": "default R visitUses (UsesTree node,\n                    P p)", "description": "Visits a UsesTree node."}, {"method_name": "visitValue", "method_sig": "R visitValue (ValueTree node,\n             P p)", "description": "Visits a ValueTree node."}, {"method_name": "visitVersion", "method_sig": "R visitVersion (VersionTree node,\n               P p)", "description": "Visits a VersionTreeTree node."}, {"method_name": "visitOther", "method_sig": "R visitOther (DocTree node,\n             P p)", "description": "Visits an unknown type of DocTree node.\n This can occur if the set of tags evolves and new kinds\n of nodes are added to the DocTree hierarchy."}]}