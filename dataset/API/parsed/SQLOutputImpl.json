{"name": "Class SQLOutputImpl", "module": "java.sql.rowset", "package": "javax.sql.rowset.serial", "text": "The output stream for writing the attributes of a\n custom-mapped user-defined type (UDT) back to the database.\n The driver uses this interface internally, and its\n methods are never directly invoked by an application programmer.\n \n When an application calls the\n method PreparedStatement.setObject, the driver\n checks to see whether the value to be written is a UDT with\n a custom mapping.  If it is, there will be an entry in a\n type map containing the Class object for the\n class that implements SQLData for this UDT.\n If the value to be written is an instance of SQLData,\n the driver will create an instance of SQLOutputImpl\n and pass it to the method SQLData.writeSQL.\n The method writeSQL in turn calls the\n appropriate SQLOutputImpl.writeXXX methods\n to write data from the SQLData object to\n the SQLOutputImpl output stream as the\n representation of an SQL user-defined type.", "codes": ["public class SQLOutputImpl\nextends Object\nimplements SQLOutput"], "fields": [], "methods": [{"method_name": "writeString", "method_sig": "public void writeString (String x)\n                 throws SQLException", "description": "Writes a String in the Java programming language\n to this SQLOutputImpl object. The driver converts\n it to an SQL CHAR, VARCHAR, or\n LONGVARCHAR before returning it to the database."}, {"method_name": "writeBoolean", "method_sig": "public void writeBoolean (boolean x)\n                  throws SQLException", "description": "Writes a boolean in the Java programming language\n to this SQLOutputImpl object. The driver converts\n it to an SQL BIT before returning it to the database."}, {"method_name": "writeByte", "method_sig": "public void writeByte (byte x)\n               throws SQLException", "description": "Writes a byte in the Java programming language\n to this SQLOutputImpl object. The driver converts\n it to an SQL BIT before returning it to the database."}, {"method_name": "writeShort", "method_sig": "public void writeShort (short x)\n                throws SQLException", "description": "Writes a short in the Java programming language\n to this SQLOutputImpl object. The driver converts\n it to an SQL SMALLINT before returning it to the database."}, {"method_name": "writeInt", "method_sig": "public void writeInt (int x)\n              throws SQLException", "description": "Writes an int in the Java programming language\n to this SQLOutputImpl object. The driver converts\n it to an SQL INTEGER before returning it to the database."}, {"method_name": "writeLong", "method_sig": "public void writeLong (long x)\n               throws SQLException", "description": "Writes a long in the Java programming language\n to this SQLOutputImpl object. The driver converts\n it to an SQL BIGINT before returning it to the database."}, {"method_name": "writeFloat", "method_sig": "public void writeFloat (float x)\n                throws SQLException", "description": "Writes a float in the Java programming language\n to this SQLOutputImpl object. The driver converts\n it to an SQL REAL before returning it to the database."}, {"method_name": "writeDouble", "method_sig": "public void writeDouble (double x)\n                 throws SQLException", "description": "Writes a double in the Java programming language\n to this SQLOutputImpl object. The driver converts\n it to an SQL DOUBLE before returning it to the database."}, {"method_name": "writeBigDecimal", "method_sig": "public void writeBigDecimal (BigDecimal x)\n                     throws SQLException", "description": "Writes a java.math.BigDecimal object in the Java programming\n language to this SQLOutputImpl object. The driver converts\n it to an SQL NUMERIC before returning it to the database."}, {"method_name": "writeBytes", "method_sig": "public void writeBytes (byte[] x)\n                throws SQLException", "description": "Writes an array of bytes in the Java programming language\n to this SQLOutputImpl object. The driver converts\n it to an SQL VARBINARY or LONGVARBINARY\n before returning it to the database."}, {"method_name": "writeDate", "method_sig": "public void writeDate (Date x)\n               throws SQLException", "description": "Writes a java.sql.Date object in the Java programming\n language to this SQLOutputImpl object. The driver converts\n it to an SQL DATE before returning it to the database."}, {"method_name": "writeTime", "method_sig": "public void writeTime (Time x)\n               throws SQLException", "description": "Writes a java.sql.Time object in the Java programming\n language to this SQLOutputImpl object. The driver converts\n it to an SQL TIME before returning it to the database."}, {"method_name": "writeTimestamp", "method_sig": "public void writeTimestamp (Timestamp x)\n                    throws SQLException", "description": "Writes a java.sql.Timestamp object in the Java programming\n language to this SQLOutputImpl object. The driver converts\n it to an SQL TIMESTAMP before returning it to the database."}, {"method_name": "writeCharacterStream", "method_sig": "public void writeCharacterStream (Reader x)\n                          throws SQLException", "description": "Writes a stream of Unicode characters to this\n SQLOutputImpl object. The driver will do any necessary\n conversion from Unicode to the database CHAR format."}, {"method_name": "writeAsciiStream", "method_sig": "public void writeAsciiStream (InputStream x)\n                      throws SQLException", "description": "Writes a stream of ASCII characters to this\n SQLOutputImpl object. The driver will do any necessary\n conversion from ASCII to the database CHAR format."}, {"method_name": "writeBinaryStream", "method_sig": "public void writeBinaryStream (InputStream x)\n                       throws SQLException", "description": "Writes a stream of uninterpreted bytes to this SQLOutputImpl\n object."}, {"method_name": "writeObject", "method_sig": "public void writeObject (SQLData x)\n                 throws SQLException", "description": "Writes to the stream the data contained in the given\n SQLData object.\n When the SQLData object is null, this\n method writes an SQL NULL to the stream.\n Otherwise, it calls the SQLData.writeSQL\n method of the given object, which\n writes the object's attributes to the stream.\n \n The implementation of the method SQLData.writeSQ\n calls the appropriate SQLOutputImpl.writeXXX method(s)\n for writing each of the object's attributes in order.\n The attributes must be read from an SQLInput\n input stream and written to an SQLOutputImpl\n output stream in the same order in which they were\n listed in the SQL definition of the user-defined type."}, {"method_name": "writeRef", "method_sig": "public void writeRef (Ref x)\n              throws SQLException", "description": "Writes a Ref object in the Java programming language\n to this SQLOutputImpl object.  The driver converts\n it to a serializable SerialRef SQL REF value\n before returning it to the database."}, {"method_name": "writeBlob", "method_sig": "public void writeBlob (Blob x)\n               throws SQLException", "description": "Writes a Blob object in the Java programming language\n to this SQLOutputImpl object.  The driver converts\n it to a serializable SerialBlob SQL BLOB value\n before returning it to the database."}, {"method_name": "writeClob", "method_sig": "public void writeClob (Clob x)\n               throws SQLException", "description": "Writes a Clob object in the Java programming language\n to this SQLOutputImpl object.  The driver converts\n it to a serializable SerialClob SQL CLOB value\n before returning it to the database."}, {"method_name": "writeStruct", "method_sig": "public void writeStruct (Struct x)\n                 throws SQLException", "description": "Writes a Struct object in the Java\n programming language to this SQLOutputImpl\n object. The driver converts this value to an SQL structured type\n before returning it to the database.\n \n This method should be used when an SQL structured type has been\n mapped to a Struct object in the Java programming\n language (the standard mapping).  The method\n writeObject should be used if an SQL structured type\n has been custom mapped to a class in the Java programming language."}, {"method_name": "writeArray", "method_sig": "public void writeArray (Array x)\n                throws SQLException", "description": "Writes an Array object in the Java\n programming language to this SQLOutputImpl\n object. The driver converts this value to a serializable\n SerialArray SQL ARRAY\n value before returning it to the database."}, {"method_name": "writeURL", "method_sig": "public void writeURL (URL url)\n              throws SQLException", "description": "Writes an java.sql.Type.DATALINK object in the Java\n programming language to this SQLOutputImpl object. The\n driver converts this value to a serializable SerialDatalink\n SQL DATALINK value before return it to the database."}, {"method_name": "writeNString", "method_sig": "public void writeNString (String x)\n                  throws SQLException", "description": "Writes the next attribute to the stream as a String\n in the Java programming language. The driver converts this to a\n SQL NCHAR or\n NVARCHAR or LONGNVARCHAR value\n (depending on the argument's\n size relative to the driver's limits on NVARCHAR values)\n when it sends it to the stream."}, {"method_name": "writeNClob", "method_sig": "public void writeNClob (NClob x)\n                throws SQLException", "description": "Writes an SQL NCLOB value to the stream."}, {"method_name": "writeRowId", "method_sig": "public void writeRowId (RowId x)\n                throws SQLException", "description": "Writes an SQL ROWID value to the stream."}, {"method_name": "writeSQLXML", "method_sig": "public void writeSQLXML (SQLXML x)\n                 throws SQLException", "description": "Writes an SQL XML value to the stream."}]}