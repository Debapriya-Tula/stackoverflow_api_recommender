{"name": "Class TrayIcon", "module": "java.desktop", "package": "java.awt", "text": "A TrayIcon object represents a tray icon that can be\n added to the system tray. A\n TrayIcon can have a tooltip (text), an image, a popup\n menu, and a set of listeners associated with it.\n\n A TrayIcon can generate various MouseEvents and supports adding corresponding listeners to receive\n notification of these events.  TrayIcon processes some\n of the events by itself.  For example, by default, when the\n right-mouse click is performed on the TrayIcon it\n displays the specified popup menu.  When the mouse hovers\n over the TrayIcon the tooltip is displayed (this behaviour is\n platform dependent).\n\n Note: When the MouseEvent is\n dispatched to its registered listeners its component\n property will be set to null.  (See ComponentEvent.getComponent()) The\n source property will be set to this\n TrayIcon. (See EventObject.getSource())\n\n Note: A well-behaved TrayIcon implementation\n will assign different gestures to showing a popup menu and\n selecting a tray icon.\n\n A TrayIcon can generate an ActionEvent.  On some platforms, this occurs when the user selects\n the tray icon using either the mouse or keyboard.\n\n If a SecurityManager is installed, the AWTPermission\n accessSystemTray must be granted in order to create\n a TrayIcon. Otherwise the constructor will throw a\n SecurityException.\n\n  See the SystemTray class overview for an example on how\n to use the TrayIcon API.", "codes": ["public class TrayIcon\nextends Object"], "fields": [], "methods": [{"method_name": "setImage", "method_sig": "public void setImage (Image image)", "description": "Sets the image for this TrayIcon.  The previous\n tray icon image is discarded without calling the Image.flush() method \u2014 you will need to call it\n manually.\n\n  If the image represents an animated image, it will be\n animated automatically.\n\n  See the setImageAutoSize(boolean) property for\n details on the size of the displayed image.\n\n  Calling this method with the same image that is currently\n being used has no effect."}, {"method_name": "getImage", "method_sig": "public Image getImage()", "description": "Returns the current image used for this TrayIcon."}, {"method_name": "setPopupMenu", "method_sig": "public void setPopupMenu (PopupMenu popup)", "description": "Sets the popup menu for this TrayIcon.  If\n popup is null, no popup menu will be\n associated with this TrayIcon.\n\n Note that this popup must not be added to any\n parent before or after it is set on the tray icon.  If you add\n it to some parent, the popup may be removed from\n that parent.\n\n The popup can be set on one TrayIcon only.\n Setting the same popup on multiple TrayIcons will cause\n an IllegalArgumentException.\n\n Note: Some platforms may not support\n showing the user-specified popup menu component when the user\n right-clicks the tray icon.  In this situation, either no menu\n will be displayed or, on some systems, a native version of the\n menu may be displayed."}, {"method_name": "getPopupMenu", "method_sig": "public PopupMenu getPopupMenu()", "description": "Returns the popup menu associated with this TrayIcon."}, {"method_name": "setToolTip", "method_sig": "public void setToolTip (String tooltip)", "description": "Sets the tooltip string for this TrayIcon. The\n tooltip is displayed automatically when the mouse hovers over\n the icon.  Tooltip may be not visible on some platforms.\n Setting the tooltip to null removes any tooltip text.\n\n When displayed, the tooltip string may be truncated on some platforms;\n the number of characters that may be displayed is platform-dependent."}, {"method_name": "getToolTip", "method_sig": "public String getToolTip()", "description": "Returns the tooltip string associated with this\n TrayIcon."}, {"method_name": "setImageAutoSize", "method_sig": "public void setImageAutoSize (boolean autosize)", "description": "Sets the auto-size property.  Auto-size determines whether the\n tray image is automatically sized to fit the space allocated\n for the image on the tray.  By default, the auto-size property\n is set to false.\n\n  If auto-size is false, and the image size\n doesn't match the tray icon space, the image is painted as-is\n inside that space \u2014 if larger than the allocated space, it will\n be cropped.\n\n  If auto-size is true, the image is stretched or shrunk to\n fit the tray icon space."}, {"method_name": "isImageAutoSize", "method_sig": "public boolean isImageAutoSize()", "description": "Returns the value of the auto-size property."}, {"method_name": "addMouseListener", "method_sig": "public void addMouseListener (MouseListener listener)", "description": "Adds the specified mouse listener to receive mouse events from\n this TrayIcon.  Calling this method with a\n null value has no effect.\n\n Note: The MouseEvent's coordinates (received\n from the TrayIcon) are relative to the screen, not the\n TrayIcon.\n\n  Note: The MOUSE_ENTERED and\n MOUSE_EXITED mouse events are not supported.\n Refer to AWT Threading Issues for details on AWT's threading model."}, {"method_name": "removeMouseListener", "method_sig": "public void removeMouseListener (MouseListener listener)", "description": "Removes the specified mouse listener.  Calling this method with\n null or an invalid value has no effect.\n Refer to AWT Threading Issues for details on AWT's threading model."}, {"method_name": "getMouseListeners", "method_sig": "public MouseListener[] getMouseListeners()", "description": "Returns an array of all the mouse listeners\n registered on this TrayIcon."}, {"method_name": "addMouseMotionListener", "method_sig": "public void addMouseMotionListener (MouseMotionListener listener)", "description": "Adds the specified mouse listener to receive mouse-motion\n events from this TrayIcon.  Calling this method\n with a null value has no effect.\n\n Note: The MouseEvent's coordinates (received\n from the TrayIcon) are relative to the screen, not the\n TrayIcon.\n\n  Note: The MOUSE_DRAGGED mouse event is not supported.\n Refer to AWT Threading Issues for details on AWT's threading model."}, {"method_name": "removeMouseMotionListener", "method_sig": "public void removeMouseMotionListener (MouseMotionListener listener)", "description": "Removes the specified mouse-motion listener.  Calling this method with\n null or an invalid value has no effect.\n Refer to AWT Threading Issues for details on AWT's threading model."}, {"method_name": "getMouseMotionListeners", "method_sig": "public MouseMotionListener[] getMouseMotionListeners()", "description": "Returns an array of all the mouse-motion listeners\n registered on this TrayIcon."}, {"method_name": "getActionCommand", "method_sig": "public String getActionCommand()", "description": "Returns the command name of the action event fired by this tray icon."}, {"method_name": "setActionCommand", "method_sig": "public void setActionCommand (String command)", "description": "Sets the command name for the action event fired by this tray\n icon.  By default, this action command is set to\n null."}, {"method_name": "addActionListener", "method_sig": "public void addActionListener (ActionListener listener)", "description": "Adds the specified action listener to receive\n ActionEvents from this TrayIcon.\n Action events usually occur when a user selects the tray icon,\n using either the mouse or keyboard.  The conditions in which\n action events are generated are platform-dependent.\n\n Calling this method with a null value has no\n effect.\n Refer to AWT Threading Issues for details on AWT's threading model."}, {"method_name": "removeActionListener", "method_sig": "public void removeActionListener (ActionListener listener)", "description": "Removes the specified action listener.  Calling this method with\n null or an invalid value has no effect.\n Refer to AWT Threading Issues for details on AWT's threading model."}, {"method_name": "getActionListeners", "method_sig": "public ActionListener[] getActionListeners()", "description": "Returns an array of all the action listeners\n registered on this TrayIcon."}, {"method_name": "displayMessage", "method_sig": "public void displayMessage (String caption,\n                           String text,\n                           TrayIcon.MessageType messageType)", "description": "Displays a popup message near the tray icon.  The message will\n disappear after a time or if the user clicks on it.  Clicking\n on the message may trigger an ActionEvent.\n\n Either the caption or the text may be null, but an\n NullPointerException is thrown if both are\n null.\n\n When displayed, the caption or text strings may be truncated on\n some platforms; the number of characters that may be displayed is\n platform-dependent.\n\n Note: Some platforms may not support\n showing a message."}, {"method_name": "getSize", "method_sig": "public Dimension getSize()", "description": "Returns the size, in pixels, of the space that the tray icon\n occupies in the system tray.  For the tray icon that is not yet\n added to the system tray, the returned size is equal to the\n result of the SystemTray.getTrayIconSize()."}]}