{"name": "Class BasicSplitPaneUI", "module": "java.desktop", "package": "javax.swing.plaf.basic", "text": "A Basic L&F implementation of the SplitPaneUI.", "codes": ["public class BasicSplitPaneUI\nextends SplitPaneUI"], "fields": [{"field_name": "NON_CONTINUOUS_DIVIDER", "field_sig": "protected static final\u00a0String NON_CONTINUOUS_DIVIDER", "description": "The divider used for non-continuous layout is added to the split pane\n with this object."}, {"field_name": "KEYBOARD_DIVIDER_MOVE_OFFSET", "field_sig": "protected static\u00a0int KEYBOARD_DIVIDER_MOVE_OFFSET", "description": "How far (relative) the divider does move when it is moved around by\n the cursor keys on the keyboard."}, {"field_name": "splitPane", "field_sig": "protected\u00a0JSplitPane splitPane", "description": "JSplitPane instance this instance is providing\n the look and feel for."}, {"field_name": "layoutManager", "field_sig": "protected\u00a0BasicSplitPaneUI.BasicHorizontalLayoutManager layoutManager", "description": "LayoutManager that is created and placed into the split pane."}, {"field_name": "divider", "field_sig": "protected\u00a0BasicSplitPaneDivider divider", "description": "Instance of the divider for this JSplitPane."}, {"field_name": "propertyChangeListener", "field_sig": "protected\u00a0PropertyChangeListener propertyChangeListener", "description": "Instance of the PropertyChangeListener for this JSplitPane."}, {"field_name": "focusListener", "field_sig": "protected\u00a0FocusListener focusListener", "description": "Instance of the FocusListener for this JSplitPane."}, {"field_name": "dividerSize", "field_sig": "protected\u00a0int dividerSize", "description": "The size of the divider while the dragging session is valid."}, {"field_name": "nonContinuousLayoutDivider", "field_sig": "protected\u00a0Component nonContinuousLayoutDivider", "description": "Instance for the shadow of the divider when non continuous layout\n is being used."}, {"field_name": "draggingHW", "field_sig": "protected\u00a0boolean draggingHW", "description": "Set to true in startDragging if any of the children\n (not including the nonContinuousLayoutDivider) are heavy weights."}, {"field_name": "beginDragDividerLocation", "field_sig": "protected\u00a0int beginDragDividerLocation", "description": "Location of the divider when the dragging session began."}, {"field_name": "upKey", "field_sig": "@Deprecated\nprotected\u00a0KeyStroke upKey", "description": "As of Java 2 platform v1.3 this previously undocumented field is no\n longer used.\n Key bindings are now defined by the LookAndFeel, please refer to\n the key bindings specification for further details."}, {"field_name": "downKey", "field_sig": "@Deprecated\nprotected\u00a0KeyStroke downKey", "description": "As of Java 2 platform v1.3 this previously undocumented field is no\n longer used.\n Key bindings are now defined by the LookAndFeel, please refer to\n the key bindings specification for further details."}, {"field_name": "leftKey", "field_sig": "@Deprecated\nprotected\u00a0KeyStroke leftKey", "description": "As of Java 2 platform v1.3 this previously undocumented field is no\n longer used.\n Key bindings are now defined by the LookAndFeel, please refer to\n the key bindings specification for further details."}, {"field_name": "rightKey", "field_sig": "@Deprecated\nprotected\u00a0KeyStroke rightKey", "description": "As of Java 2 platform v1.3 this previously undocumented field is no\n longer used.\n Key bindings are now defined by the LookAndFeel, please refer to\n the key bindings specification for further details."}, {"field_name": "homeKey", "field_sig": "@Deprecated\nprotected\u00a0KeyStroke homeKey", "description": "As of Java 2 platform v1.3 this previously undocumented field is no\n longer used.\n Key bindings are now defined by the LookAndFeel, please refer to\n the key bindings specification for further details."}, {"field_name": "endKey", "field_sig": "@Deprecated\nprotected\u00a0KeyStroke endKey", "description": "As of Java 2 platform v1.3 this previously undocumented field is no\n longer used.\n Key bindings are now defined by the LookAndFeel, please refer to\n the key bindings specification for further details."}, {"field_name": "dividerResizeToggleKey", "field_sig": "@Deprecated\nprotected\u00a0KeyStroke dividerResizeToggleKey", "description": "As of Java 2 platform v1.3 this previously undocumented field is no\n longer used.\n Key bindings are now defined by the LookAndFeel, please refer to\n the key bindings specification for further details."}, {"field_name": "keyboardUpLeftListener", "field_sig": "@Deprecated\nprotected\u00a0ActionListener keyboardUpLeftListener", "description": "As of Java 2 platform v1.3 this previously undocumented field is no\n longer used.\n Key bindings are now defined by the LookAndFeel, please refer to\n the key bindings specification for further details."}, {"field_name": "keyboardDownRightListener", "field_sig": "@Deprecated\nprotected\u00a0ActionListener keyboardDownRightListener", "description": "As of Java 2 platform v1.3 this previously undocumented field is no\n longer used.\n Key bindings are now defined by the LookAndFeel, please refer to\n the key bindings specification for further details."}, {"field_name": "keyboardHomeListener", "field_sig": "@Deprecated\nprotected\u00a0ActionListener keyboardHomeListener", "description": "As of Java 2 platform v1.3 this previously undocumented field is no\n longer used.\n Key bindings are now defined by the LookAndFeel, please refer to\n the key bindings specification for further details."}, {"field_name": "keyboardEndListener", "field_sig": "@Deprecated\nprotected\u00a0ActionListener keyboardEndListener", "description": "As of Java 2 platform v1.3 this previously undocumented field is no\n longer used.\n Key bindings are now defined by the LookAndFeel, please refer to\n the key bindings specification for further details."}, {"field_name": "keyboardResizeToggleListener", "field_sig": "@Deprecated\nprotected\u00a0ActionListener keyboardResizeToggleListener", "description": "As of Java 2 platform v1.3 this previously undocumented field is no\n longer used.\n Key bindings are now defined by the LookAndFeel, please refer to\n the key bindings specification for further details."}], "methods": [{"method_name": "createUI", "method_sig": "public static ComponentUI createUI (JComponent x)", "description": "Creates a new instance of BasicSplitPaneUI."}, {"method_name": "installUI", "method_sig": "public void installUI (JComponent c)", "description": "Installs the UI."}, {"method_name": "installDefaults", "method_sig": "protected void installDefaults()", "description": "Installs the UI defaults."}, {"method_name": "installListeners", "method_sig": "protected void installListeners()", "description": "Installs the event listeners for the UI."}, {"method_name": "installKeyboardActions", "method_sig": "protected void installKeyboardActions()", "description": "Installs the keyboard actions for the UI."}, {"method_name": "uninstallUI", "method_sig": "public void uninstallUI (JComponent c)", "description": "Uninstalls the UI."}, {"method_name": "uninstallDefaults", "method_sig": "protected void uninstallDefaults()", "description": "Uninstalls the UI defaults."}, {"method_name": "uninstallListeners", "method_sig": "protected void uninstallListeners()", "description": "Uninstalls the event listeners for the UI."}, {"method_name": "uninstallKeyboardActions", "method_sig": "protected void uninstallKeyboardActions()", "description": "Uninstalls the keyboard actions for the UI."}, {"method_name": "createPropertyChangeListener", "method_sig": "protected PropertyChangeListener createPropertyChangeListener()", "description": "Creates a PropertyChangeListener for the JSplitPane UI."}, {"method_name": "createFocusListener", "method_sig": "protected FocusListener createFocusListener()", "description": "Creates a FocusListener for the JSplitPane UI."}, {"method_name": "createKeyboardUpLeftListener", "method_sig": "@Deprecated\nprotected ActionListener createKeyboardUpLeftListener()", "description": "As of Java 2 platform v1.3 this method is no longer used.\n Subclassers previously using this method should instead create\n an Action wrapping the ActionListener, and register\n that Action by overriding installKeyboardActions\n and placing the Action in the SplitPane's ActionMap.\n Please refer to the key bindings specification for further details.\n \n Creates an ActionListener for the JSplitPane UI that\n listens for specific key presses."}, {"method_name": "createKeyboardDownRightListener", "method_sig": "@Deprecated\nprotected ActionListener createKeyboardDownRightListener()", "description": "As of Java 2 platform v1.3 this method is no longer used.\n Subclassers previously using this method should instead create\n an Action wrapping the ActionListener, and register\n that Action by overriding installKeyboardActions\n and placing the Action in the SplitPane's ActionMap.\n Please refer to the key bindings specification for further details.\n \n Creates an ActionListener for the JSplitPane UI that\n listens for specific key presses."}, {"method_name": "createKeyboardHomeListener", "method_sig": "@Deprecated\nprotected ActionListener createKeyboardHomeListener()", "description": "As of Java 2 platform v1.3 this method is no longer used.\n Subclassers previously using this method should instead create\n an Action wrapping the ActionListener, and register\n that Action by overriding installKeyboardActions\n and placing the Action in the SplitPane's ActionMap.\n Please refer to the key bindings specification for further details.\n \n Creates an ActionListener for the JSplitPane UI that\n listens for specific key presses."}, {"method_name": "createKeyboardEndListener", "method_sig": "@Deprecated\nprotected ActionListener createKeyboardEndListener()", "description": "As of Java 2 platform v1.3 this method is no longer used.\n Subclassers previously using this method should instead create\n an Action wrapping the ActionListener, and register\n that Action by overriding installKeyboardActions\n and placing the Action in the SplitPane's ActionMap.\n Please refer to the key bindings specification for further details.\n \n Creates an ActionListener for the JSplitPane UI that\n listens for specific key presses."}, {"method_name": "createKeyboardResizeToggleListener", "method_sig": "@Deprecated\nprotected ActionListener createKeyboardResizeToggleListener()", "description": "As of Java 2 platform v1.3 this method is no longer used.\n Subclassers previously using this method should instead create\n an Action wrapping the ActionListener, and register\n that Action by overriding installKeyboardActions\n and placing the Action in the SplitPane's ActionMap.\n Please refer to the key bindings specification for further details.\n \n Creates an ActionListener for the JSplitPane UI that\n listens for specific key presses."}, {"method_name": "getOrientation", "method_sig": "public int getOrientation()", "description": "Returns the orientation for the JSplitPane."}, {"method_name": "setOrientation", "method_sig": "public void setOrientation (int orientation)", "description": "Set the orientation for the JSplitPane."}, {"method_name": "isContinuousLayout", "method_sig": "public boolean isContinuousLayout()", "description": "Determines whether the JSplitPane is set to use a continuous layout."}, {"method_name": "setContinuousLayout", "method_sig": "public void setContinuousLayout (boolean b)", "description": "Turn continuous layout on/off."}, {"method_name": "getLastDragLocation", "method_sig": "public int getLastDragLocation()", "description": "Returns the last drag location of the JSplitPane."}, {"method_name": "setLastDragLocation", "method_sig": "public void setLastDragLocation (int l)", "description": "Set the last drag location of the JSplitPane."}, {"method_name": "getDivider", "method_sig": "public BasicSplitPaneDivider getDivider()", "description": "Returns the divider between the top Components."}, {"method_name": "createDefaultNonContinuousLayoutDivider", "method_sig": "protected Component createDefaultNonContinuousLayoutDivider()", "description": "Returns the default non continuous layout divider, which is an\n instance of Canvas that fills in the background with dark gray."}, {"method_name": "setNonContinuousLayoutDivider", "method_sig": "protected void setNonContinuousLayoutDivider (Component newDivider)", "description": "Sets the divider to use when the JSplitPane is configured to\n not continuously layout. This divider will only be used during a\n dragging session. It is recommended that the passed in component\n be a heavy weight."}, {"method_name": "setNonContinuousLayoutDivider", "method_sig": "protected void setNonContinuousLayoutDivider (Component newDivider,\n                                             boolean rememberSizes)", "description": "Sets the divider to use."}, {"method_name": "getNonContinuousLayoutDivider", "method_sig": "public Component getNonContinuousLayoutDivider()", "description": "Returns the divider to use when the JSplitPane is configured to\n not continuously layout. This divider will only be used during a\n dragging session."}, {"method_name": "getSplitPane", "method_sig": "public JSplitPane getSplitPane()", "description": "Returns the JSplitPane this instance is currently contained\n in."}, {"method_name": "createDefaultDivider", "method_sig": "public BasicSplitPaneDivider createDefaultDivider()", "description": "Creates the default divider."}, {"method_name": "resetToPreferredSizes", "method_sig": "public void resetToPreferredSizes (JSplitPane jc)", "description": "Messaged to reset the preferred sizes."}, {"method_name": "setDividerLocation", "method_sig": "public void setDividerLocation (JSplitPane jc,\n                               int location)", "description": "Sets the location of the divider to location."}, {"method_name": "getDividerLocation", "method_sig": "public int getDividerLocation (JSplitPane jc)", "description": "Returns the location of the divider, which may differ from what\n the splitpane thinks the location of the divider is."}, {"method_name": "getMinimumDividerLocation", "method_sig": "public int getMinimumDividerLocation (JSplitPane jc)", "description": "Gets the minimum location of the divider."}, {"method_name": "getMaximumDividerLocation", "method_sig": "public int getMaximumDividerLocation (JSplitPane jc)", "description": "Gets the maximum location of the divider."}, {"method_name": "finishedPaintingChildren", "method_sig": "public void finishedPaintingChildren (JSplitPane sp,\n                                     Graphics g)", "description": "Called when the specified split pane has finished painting\n its children."}, {"method_name": "getPreferredSize", "method_sig": "public Dimension getPreferredSize (JComponent jc)", "description": "Returns the preferred size for the passed in component,\n This is passed off to the current layout manager."}, {"method_name": "getMinimumSize", "method_sig": "public Dimension getMinimumSize (JComponent jc)", "description": "Returns the minimum size for the passed in component,\n This is passed off to the current layout manager."}, {"method_name": "getMaximumSize", "method_sig": "public Dimension getMaximumSize (JComponent jc)", "description": "Returns the maximum size for the passed in component,\n This is passed off to the current layout manager."}, {"method_name": "getInsets", "method_sig": "public Insets getInsets (JComponent jc)", "description": "Returns the insets. The insets are returned from the border insets\n of the current border."}, {"method_name": "resetLayoutManager", "method_sig": "protected void resetLayoutManager()", "description": "Resets the layout manager based on orientation and messages it\n with invalidateLayout to pull in appropriate Components."}, {"method_name": "startDragging", "method_sig": "protected void startDragging()", "description": "Should be messaged before the dragging session starts, resets\n lastDragLocation and dividerSize."}, {"method_name": "dragDividerTo", "method_sig": "protected void dragDividerTo (int location)", "description": "Messaged during a dragging session to move the divider to the\n passed in location. If continuousLayout is true\n the location is reset and the splitPane validated."}, {"method_name": "finishDraggingTo", "method_sig": "protected void finishDraggingTo (int location)", "description": "Messaged to finish the dragging session. If not continuous display\n the dividers location will be reset."}, {"method_name": "getDividerBorderSize", "method_sig": "@Deprecated\nprotected int getDividerBorderSize()", "description": "As of Java 2 platform v1.3 this method is no longer used. Instead\n you should set the border on the divider.\n \n Returns the width of one side of the divider border."}]}