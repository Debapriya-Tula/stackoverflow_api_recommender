{"name": "Class OpenMBeanParameterInfoSupport", "module": "java.management", "package": "javax.management.openmbean", "text": "Describes a parameter used in one or more operations or\n constructors of an open MBean.", "codes": ["public class OpenMBeanParameterInfoSupport\nextends MBeanParameterInfo\nimplements OpenMBeanParameterInfo"], "fields": [], "methods": [{"method_name": "getOpenType", "method_sig": "public OpenType<?> getOpenType()", "description": "Returns the open type for the values of the parameter described\n by this OpenMBeanParameterInfoSupport instance."}, {"method_name": "getDefaultValue", "method_sig": "public Object getDefaultValue()", "description": "Returns the default value for the parameter described by this\n OpenMBeanParameterInfoSupport instance, if specified,\n or null otherwise."}, {"method_name": "getLegalValues", "method_sig": "public Set<?> getLegalValues()", "description": "Returns an unmodifiable Set of legal values for the parameter\n described by this OpenMBeanParameterInfoSupport\n instance, if specified, or null otherwise."}, {"method_name": "getMinValue", "method_sig": "public Comparable<?> getMinValue()", "description": "Returns the minimal value for the parameter described by this\n OpenMBeanParameterInfoSupport instance, if specified,\n or null otherwise."}, {"method_name": "getMaxValue", "method_sig": "public Comparable<?> getMaxValue()", "description": "Returns the maximal value for the parameter described by this\n OpenMBeanParameterInfoSupport instance, if specified,\n or null otherwise."}, {"method_name": "hasDefaultValue", "method_sig": "public boolean hasDefaultValue()", "description": "Returns true if this \n OpenMBeanParameterInfoSupport instance specifies a non-null\n default value for the described parameter, false\n otherwise."}, {"method_name": "hasLegalValues", "method_sig": "public boolean hasLegalValues()", "description": "Returns true if this \n OpenMBeanParameterInfoSupport instance specifies a non-null\n set of legal values for the described parameter, false\n otherwise."}, {"method_name": "hasMinValue", "method_sig": "public boolean hasMinValue()", "description": "Returns true if this \n OpenMBeanParameterInfoSupport instance specifies a non-null\n minimal value for the described parameter, false\n otherwise."}, {"method_name": "hasMaxValue", "method_sig": "public boolean hasMaxValue()", "description": "Returns true if this \n OpenMBeanParameterInfoSupport instance specifies a non-null\n maximal value for the described parameter, false\n otherwise."}, {"method_name": "isValue", "method_sig": "public boolean isValue (Object obj)", "description": "Tests whether obj is a valid value for the parameter\n described by this OpenMBeanParameterInfo instance."}, {"method_name": "equals", "method_sig": "public boolean equals (Object obj)", "description": "Compares the specified obj parameter with this \n OpenMBeanParameterInfoSupport instance for equality.\nReturns true if and only if all of the following\n statements are true:\n\n \nobj is non null,\nobj also implements the OpenMBeanParameterInfo\n interface,\ntheir names are equal\ntheir open types are equal\ntheir default, min, max and legal values are equal.\n\n This ensures that this equals method works properly for\n obj parameters which are different implementations of\n the OpenMBeanParameterInfo interface.\n\n If obj also implements DescriptorRead, then its\n getDescriptor() method must\n also return the same value as for this object."}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Returns the hash code value for this \n OpenMBeanParameterInfoSupport instance.\nThe hash code of an OpenMBeanParameterInfoSupport\n instance is the sum of the hash codes of all elements of\n information used in equals comparisons (ie: its name,\n its open type, its default, min, max and legal\n values, and its Descriptor).\n\n This ensures that t1.equals(t2) implies that \n t1.hashCode()==t2.hashCode() for any two \n OpenMBeanParameterInfoSupport instances t1 and \n t2, as required by the general contract of the method Object.hashCode().\n\n However, note that another instance of a class implementing\n the OpenMBeanParameterInfo interface may be equal to\n this OpenMBeanParameterInfoSupport instance as defined\n by equals(java.lang.Object), but may have a different\n hash code if it is calculated differently.\n\n As OpenMBeanParameterInfoSupport instances are\n immutable, the hash code for this instance is calculated once,\n on the first call to hashCode, and then the same value\n is returned for subsequent calls."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns a string representation of this\n OpenMBeanParameterInfoSupport instance.\n \n The string representation consists of the name of this class (i.e.\n javax.management.openmbean.OpenMBeanParameterInfoSupport),\n the string representation of the name and open type of the described\n parameter, the string representation of its default, min, max and legal\n values and the string representation of its descriptor.\n \n As OpenMBeanParameterInfoSupport instances are immutable,\n the string representation for this instance is calculated once,\n on the first call to toString, and then the same value\n is returned for subsequent calls."}]}