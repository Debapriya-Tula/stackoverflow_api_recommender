{"name": "Class IdentityScope", "module": "java.base", "package": "java.security", "text": "This class represents a scope for identities. It is an Identity\n itself, and therefore has a name and can have a scope. It can also\n optionally have a public key and associated certificates.\n\n An IdentityScope can contain Identity objects of all kinds, including\n Signers. All types of Identity objects can be retrieved, added, and\n removed using the same methods. Note that it is possible, and in fact\n expected, that different types of identity scopes will\n apply different policies for their various operations on the\n various types of Identities.\n\n There is a one-to-one mapping between keys and identities, and\n there can only be one copy of one key per scope. For example, suppose\n Acme Software, Inc is a software publisher known to a user.\n Suppose it is an Identity, that is, it has a public key, and a set of\n associated certificates. It is named in the scope using the name\n \"Acme Software\". No other named Identity in the scope has the same\n public  key. Of course, none has the same name as well.", "codes": ["@Deprecated(since=\"1.2\",\n            forRemoval=true)\npublic abstract class IdentityScope\nextends Identity"], "fields": [], "methods": [{"method_name": "getSystemScope", "method_sig": "public static IdentityScope getSystemScope()", "description": "Returns the system's identity scope."}, {"method_name": "setSystemScope", "method_sig": "protected static void setSystemScope (IdentityScope scope)", "description": "Sets the system's identity scope.\n\n First, if there is a security manager, its\n checkSecurityAccess\n method is called with \"setSystemScope\"\n as its argument to see if it's ok to set the identity scope."}, {"method_name": "size", "method_sig": "public abstract int size()", "description": "Returns the number of identities within this identity scope."}, {"method_name": "getIdentity", "method_sig": "public abstract Identity getIdentity (String name)", "description": "Returns the identity in this scope with the specified name (if any)."}, {"method_name": "getIdentity", "method_sig": "public Identity getIdentity (Principal principal)", "description": "Retrieves the identity whose name is the same as that of the\n specified principal. (Note: Identity implements Principal.)"}, {"method_name": "getIdentity", "method_sig": "public abstract Identity getIdentity (PublicKey key)", "description": "Retrieves the identity with the specified public key."}, {"method_name": "addIdentity", "method_sig": "public abstract void addIdentity (Identity identity)\n                          throws KeyManagementException", "description": "Adds an identity to this identity scope."}, {"method_name": "removeIdentity", "method_sig": "public abstract void removeIdentity (Identity identity)\n                             throws KeyManagementException", "description": "Removes an identity from this identity scope."}, {"method_name": "identities", "method_sig": "public abstract Enumeration<Identity> identities()", "description": "Returns an enumeration of all identities in this identity scope."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns a string representation of this identity scope, including\n its name, its scope name, and the number of identities in this\n identity scope."}]}