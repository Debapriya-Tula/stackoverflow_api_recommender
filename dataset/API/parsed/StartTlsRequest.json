{"name": "Class StartTlsRequest", "module": "java.naming", "package": "javax.naming.ldap", "text": "This class implements the LDAPv3 Extended Request for StartTLS as\n defined in\n Lightweight Directory\n Access Protocol (v3): Extension for Transport Layer Security\n\n The object identifier for StartTLS is 1.3.6.1.4.1.1466.20037\n and no extended request value is defined.\n\nStartTlsRequest/StartTlsResponse are used to establish\n a TLS connection over the existing LDAP connection associated with\n the JNDI context on which extendedOperation() is invoked.\n Typically, a JNDI program uses these classes as follows.\n \n import javax.naming.ldap.*;\n\n // Open an LDAP association\n LdapContext ctx = new InitialLdapContext();\n\n // Perform a StartTLS extended operation\n StartTlsResponse tls =\n     (StartTlsResponse) ctx.extendedOperation(new StartTlsRequest());\n\n // Open a TLS connection (over the existing LDAP association) and get details\n // of the negotiated TLS session: cipher suite, peer certificate, etc.\n SSLSession session = tls.negotiate();\n\n // ... use ctx to perform protected LDAP operations\n\n // Close the TLS connection (revert back to the underlying LDAP association)\n tls.close();\n\n // ... use ctx to perform unprotected LDAP operations\n\n // Close the LDAP association\n ctx.close;\n ", "codes": ["public class StartTlsRequest\nextends Object\nimplements ExtendedRequest"], "fields": [{"field_name": "OID", "field_sig": "public static final\u00a0String OID", "description": "The StartTLS extended request's assigned object identifier\n is 1.3.6.1.4.1.1466.20037."}], "methods": [{"method_name": "getID", "method_sig": "public String getID()", "description": "Retrieves the StartTLS request's object identifier string."}, {"method_name": "getEncodedValue", "method_sig": "public byte[] getEncodedValue()", "description": "Retrieves the StartTLS request's ASN.1 BER encoded value.\n Since the request has no defined value, null is always\n returned."}, {"method_name": "createExtendedResponse", "method_sig": "public ExtendedResponse createExtendedResponse (String id,\n                                               byte[] berValue,\n                                               int offset,\n                                               int length)\n                                        throws NamingException", "description": "Creates an extended response object that corresponds to the\n LDAP StartTLS extended request.\n \n The result must be a concrete subclass of StartTlsResponse\n and must have a public zero-argument constructor.\n \n This method locates the implementation class by locating\n configuration files that have the name:\n \n     META-INF/services/javax.naming.ldap.StartTlsResponse\n \n The configuration files and their corresponding implementation classes must\n be accessible to the calling thread's context class loader.\n \n Each configuration file should contain a list of fully-qualified class\n names, one per line.  Space and tab characters surrounding each name, as\n well as blank lines, are ignored.  The comment character is '#'\n (0x23); on each line all characters following the first comment\n character are ignored.  The file must be encoded in UTF-8.\n \n This method will return an instance of the first implementation\n class that it is able to load and instantiate successfully from\n the list of class names collected from the configuration files.\n This method uses the calling thread's context classloader to find the\n configuration files and to load the implementation class.\n \n If no class can be found in this way, this method will use\n an implementation-specific way to locate an implementation.\n If none is found, a NamingException is thrown."}]}