{"name": "Class SerialArray", "module": "java.sql.rowset", "package": "javax.sql.rowset.serial", "text": "A serialized version of an Array\n object, which is the mapping in the Java programming language of an SQL\n ARRAY value.\n \n The SerialArray class provides a constructor for creating\n a SerialArray instance from an Array object,\n methods for getting the base type and the SQL name for the base type, and\n methods for copying all or part of a SerialArray object.\n \n\n Note: In order for this class to function correctly, a connection to the\n data source\n must be available in order for the SQL Array object to be\n materialized (have all of its elements brought to the client server)\n if necessary. At this time, logical pointers to the data in the data source,\n such as locators, are not currently supported.\n\n  Thread safety \n\n A SerialArray is not safe for use by multiple concurrent threads.  If a\n SerialArray is to be used by more than one thread then access to the\n SerialArray should be controlled by appropriate synchronization.", "codes": ["public class SerialArray\nextends Object\nimplements Array, Serializable, Cloneable"], "fields": [], "methods": [{"method_name": "free", "method_sig": "public void free()\n          throws SQLException", "description": "This method frees the SerialArray object and releases the\n resources that it holds. The object is invalid once the free\n method is called.  If free is called multiple times, the\n subsequent calls to free are treated as a no-op. "}, {"method_name": "getArray", "method_sig": "public Object getArray()\n                throws SerialException", "description": "Returns a new array that is a copy of this SerialArray\n object."}, {"method_name": "getArray", "method_sig": "public Object getArray (Map<String, Class<?>> map)\n                throws SerialException", "description": "Returns a new array that is a copy of this SerialArray\n object, using the given type map for the custom\n mapping of each element when the elements are SQL UDTs.\n \n This method does custom mapping if the array elements are a UDT\n and the given type map has an entry for that UDT.\n Custom mapping is recursive,\n meaning that if, for instance, an element of an SQL structured type\n is an SQL structured type that itself has an element that is an SQL\n structured type, each structured type that has a custom mapping will be\n mapped according to the given type map."}, {"method_name": "getArray", "method_sig": "public Object getArray (long index,\n                       int count)\n                throws SerialException", "description": "Returns a new array that is a copy of a slice\n of this SerialArray object, starting with the\n element at the given index and containing the given number\n of consecutive elements."}, {"method_name": "getArray", "method_sig": "public Object getArray (long index,\n                       int count,\n                       Map<String, Class<?>> map)\n                throws SerialException", "description": "Returns a new array that is a copy of a slice\n of this SerialArray object, starting with the\n element at the given index and containing the given number\n of consecutive elements.\n \n This method does custom mapping if the array elements are a UDT\n and the given type map has an entry for that UDT.\n Custom mapping is recursive,\n meaning that if, for instance, an element of an SQL structured type\n is an SQL structured type that itself has an element that is an SQL\n structured type, each structured type that has a custom mapping will be\n mapped according to the given type map."}, {"method_name": "getBaseType", "method_sig": "public int getBaseType()\n                throws SerialException", "description": "Retrieves the SQL type of the elements in this SerialArray\n object.  The int returned is one of the constants in the class\n java.sql.Types."}, {"method_name": "getBaseTypeName", "method_sig": "public String getBaseTypeName()\n                       throws SerialException", "description": "Retrieves the DBMS-specific type name for the elements in this\n SerialArray object."}, {"method_name": "getResultSet", "method_sig": "public ResultSet getResultSet (long index,\n                              int count)\n                       throws SerialException", "description": "Retrieves a ResultSet object holding the elements of\n the subarray that starts at\n index index and contains up to count successive elements.\n This method uses the connection's type map to map the elements of\n the array if the map contains\n an entry for the base type. Otherwise, the standard mapping is used."}, {"method_name": "getResultSet", "method_sig": "public ResultSet getResultSet (Map<String, Class<?>> map)\n                       throws SerialException", "description": "Retrieves a ResultSet object that contains all of\n the elements of the SQL ARRAY\n value represented by this SerialArray object. This method uses\n the specified map for type map customizations unless the base type of the\n array does not match a user-defined type (UDT) in map, in\n which case it uses the\n standard mapping. This version of the method getResultSet\n uses either the given type map or the standard mapping; it never uses the\n type map associated with the connection."}, {"method_name": "getResultSet", "method_sig": "public ResultSet getResultSet()\n                       throws SerialException", "description": "Retrieves a ResultSet object that contains all of\n the elements in the ARRAY value that this\n SerialArray object represents.\n If appropriate, the elements of the array are mapped using the connection's\n type map; otherwise, the standard mapping is used."}, {"method_name": "getResultSet", "method_sig": "public ResultSet getResultSet (long index,\n                              int count,\n                              Map<String, Class<?>> map)\n                       throws SerialException", "description": "Retrieves a result set holding the elements of the subarray that starts at\n Retrieves a ResultSet object that contains a subarray of the\n elements in this SerialArray object, starting at\n index index and containing up to count successive\n elements. This method uses\n the specified map for type map customizations unless the base type of the\n array does not match a user-defined type (UDT) in map, in\n which case it uses the\n standard mapping. This version of the method getResultSet uses\n either the given type map or the standard mapping; it never uses the type\n map associated with the connection."}, {"method_name": "equals", "method_sig": "public boolean equals (Object obj)", "description": "Compares this SerialArray to the specified object.  The result is \n true if and only if the argument is not null and is a \n SerialArray object whose elements are identical to this object's elements"}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Returns a hash code for this SerialArray. The hash code for a\n SerialArray object is computed using the hash codes\n of the elements of the  SerialArray object"}, {"method_name": "clone", "method_sig": "public Object clone()", "description": "Returns a clone of this SerialArray. The copy will contain a\n reference to a clone of the underlying objects array, not a reference\n to the original underlying object array of this SerialArray object."}]}