{"name": "Class BufferedImageFilter", "module": "java.desktop", "package": "java.awt.image", "text": "The BufferedImageFilter class subclasses an\n ImageFilter to provide a simple means of\n using a single-source/single-destination image operator\n (BufferedImageOp) to filter a BufferedImage\n in the Image Producer/Consumer/Observer\n paradigm. Examples of these image operators are: ConvolveOp,\n AffineTransformOp and LookupOp.", "codes": ["public class BufferedImageFilter\nextends ImageFilter\nimplements Cloneable"], "fields": [], "methods": [{"method_name": "getBufferedImageOp", "method_sig": "public BufferedImageOp getBufferedImageOp()", "description": "Returns the BufferedImageOp."}, {"method_name": "setDimensions", "method_sig": "public void setDimensions (int width,\n                          int height)", "description": "Filters the information provided in the\n setDimensions  method\n of the ImageConsumer interface.\n \n Note: This method is intended to be called by the\n ImageProducer of the Image whose pixels are\n being filtered. Developers using this class to retrieve pixels from\n an image should avoid calling this method directly since that\n operation could result in problems with retrieving the requested\n pixels."}, {"method_name": "setColorModel", "method_sig": "public void setColorModel (ColorModel model)", "description": "Filters the information provided in the\n setColorModel method\n of the ImageConsumer interface.\n \n If model is null, this\n method clears the current ColorModel of this\n BufferedImageFilter.\n \n Note: This method is intended to be called by the\n ImageProducer of the Image\n whose pixels are being filtered.  Developers using this\n class to retrieve pixels from an image\n should avoid calling this method directly since that\n operation could result in problems with retrieving the\n requested pixels."}, {"method_name": "setPixels", "method_sig": "public void setPixels (int x,\n                      int y,\n                      int w,\n                      int h,\n                      ColorModel model,\n                      byte[] pixels,\n                      int off,\n                      int scansize)", "description": "Filters the information provided in the setPixels\n method of the ImageConsumer interface which takes\n an array of bytes.\n \n Note: This method is intended to be called by the\n ImageProducer of the Image whose pixels\n are being filtered.  Developers using\n this class to retrieve pixels from an image should avoid calling\n this method directly since that operation could result in problems\n with retrieving the requested pixels."}, {"method_name": "setPixels", "method_sig": "public void setPixels (int x,\n                      int y,\n                      int w,\n                      int h,\n                      ColorModel model,\n                      int[] pixels,\n                      int off,\n                      int scansize)", "description": "Filters the information provided in the setPixels\n method of the ImageConsumer interface which takes\n an array of integers.\n \n Note: This method is intended to be called by the\n ImageProducer of the Image whose\n pixels are being filtered.  Developers using this class to\n retrieve pixels from an image should avoid calling this method\n directly since that operation could result in problems\n with retrieving the requested pixels."}, {"method_name": "imageComplete", "method_sig": "public void imageComplete (int status)", "description": "Filters the information provided in the imageComplete\n method of the ImageConsumer interface.\n \n Note: This method is intended to be called by the\n ImageProducer of the Image whose pixels\n are being filtered.  Developers using\n this class to retrieve pixels from an image should avoid calling\n this method directly since that operation could result in problems\n with retrieving the requested pixels."}]}