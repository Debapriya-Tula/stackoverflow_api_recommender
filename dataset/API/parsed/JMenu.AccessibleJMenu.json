{"name": "Class JMenu.AccessibleJMenu", "module": "java.desktop", "package": "javax.swing", "text": "This class implements accessibility support for the\n JMenu class.  It provides an implementation of the\n Java Accessibility API appropriate to menu user-interface elements.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["protected class JMenu.AccessibleJMenu\nextends JMenuItem.AccessibleJMenuItem\nimplements AccessibleSelection"], "fields": [], "methods": [{"method_name": "getAccessibleChildrenCount", "method_sig": "public int getAccessibleChildrenCount()", "description": "Returns the number of accessible children in the object.  If all\n of the children of this object implement Accessible, than this\n method should return the number of children of this object."}, {"method_name": "getAccessibleChild", "method_sig": "public Accessible getAccessibleChild (int i)", "description": "Returns the nth Accessible child of the object."}, {"method_name": "getAccessibleRole", "method_sig": "public AccessibleRole getAccessibleRole()", "description": "Get the role of this object."}, {"method_name": "getAccessibleSelection", "method_sig": "public AccessibleSelection getAccessibleSelection()", "description": "Get the AccessibleSelection associated with this object.  In the\n implementation of the Java Accessibility API for this class,\n return this object, which is responsible for implementing the\n AccessibleSelection interface on behalf of itself."}, {"method_name": "getAccessibleSelectionCount", "method_sig": "public int getAccessibleSelectionCount()", "description": "Returns 1 if a sub-menu is currently selected in this menu."}, {"method_name": "getAccessibleSelection", "method_sig": "public Accessible getAccessibleSelection (int i)", "description": "Returns the currently selected sub-menu if one is selected,\n otherwise null (there can only be one selection, and it can\n only be a sub-menu, as otherwise menu items don't remain\n selected)."}, {"method_name": "isAccessibleChildSelected", "method_sig": "public boolean isAccessibleChildSelected (int i)", "description": "Returns true if the current child of this object is selected\n (that is, if this child is a popped-up submenu)."}, {"method_name": "addAccessibleSelection", "method_sig": "public void addAccessibleSelection (int i)", "description": "Selects the ith menu in the menu.\n If that item is a submenu,\n it will pop up in response.  If a different item is already\n popped up, this will force it to close.  If this is a sub-menu\n that is already popped up (selected), this method has no\n effect."}, {"method_name": "removeAccessibleSelection", "method_sig": "public void removeAccessibleSelection (int i)", "description": "Removes the nth item from the selection.  In general, menus\n can only have one item within them selected at a time\n (e.g. one sub-menu popped open)."}, {"method_name": "clearAccessibleSelection", "method_sig": "public void clearAccessibleSelection()", "description": "Clears the selection in the object, so that nothing in the\n object is selected.  This will close any open sub-menu."}, {"method_name": "selectAllAccessibleSelection", "method_sig": "public void selectAllAccessibleSelection()", "description": "Normally causes every selected item in the object to be selected\n if the object supports multiple selections.  This method\n makes no sense in a menu bar, and so does nothing."}]}