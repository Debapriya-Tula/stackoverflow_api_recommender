{"name": "Interface LayoutManager2", "module": "java.desktop", "package": "java.awt", "text": "Defines an interface for classes that know how to layout Containers\n based on a layout constraints object.\n\n This interface extends the LayoutManager interface to deal with layouts\n explicitly in terms of constraint objects that specify how and where\n components should be added to the layout.\n \n This minimal extension to LayoutManager is intended for tool\n providers who wish to the creation of constraint-based layouts.\n It does not yet provide full, general support for custom\n constraint-based layout managers.", "codes": ["public interface LayoutManager2\nextends LayoutManager"], "fields": [], "methods": [{"method_name": "addLayoutComponent", "method_sig": "void addLayoutComponent (Component comp,\n                        Object constraints)", "description": "Adds the specified component to the layout, using the specified\n constraint object."}, {"method_name": "maximumLayoutSize", "method_sig": "Dimension maximumLayoutSize (Container target)", "description": "Calculates the maximum size dimensions for the specified container,\n given the components it contains."}, {"method_name": "getLayoutAlignmentX", "method_sig": "float getLayoutAlignmentX (Container target)", "description": "Returns the alignment along the x axis.  This specifies how\n the component would like to be aligned relative to other\n components.  The value should be a number between 0 and 1\n where 0 represents alignment along the origin, 1 is aligned\n the furthest away from the origin, 0.5 is centered, etc."}, {"method_name": "getLayoutAlignmentY", "method_sig": "float getLayoutAlignmentY (Container target)", "description": "Returns the alignment along the y axis.  This specifies how\n the component would like to be aligned relative to other\n components.  The value should be a number between 0 and 1\n where 0 represents alignment along the origin, 1 is aligned\n the furthest away from the origin, 0.5 is centered, etc."}, {"method_name": "invalidateLayout", "method_sig": "void invalidateLayout (Container target)", "description": "Invalidates the layout, indicating that if the layout manager\n has cached information it should be discarded."}]}