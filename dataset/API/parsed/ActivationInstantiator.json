{"name": "Interface ActivationInstantiator", "module": "java.rmi", "package": "java.rmi.activation", "text": "An ActivationInstantiator is responsible for creating\n instances of \"activatable\" objects. A concrete subclass of\n ActivationGroup implements the newInstance\n method to handle creating objects within the group.", "codes": ["public interface ActivationInstantiator\nextends Remote"], "fields": [], "methods": [{"method_name": "newInstance", "method_sig": "MarshalledObject<? extends Remote> newInstance (ActivationID id,\n                                               ActivationDesc desc)\n                                        throws ActivationException,\n                                               RemoteException", "description": "The activator calls an instantiator's newInstance\n method in order to recreate in that group an object with the\n activation identifier, id, and descriptor,\n desc. The instantiator is responsible for: \n determining the class for the object using the descriptor's\n getClassName method,\n\n  loading the class from the code location obtained from the\n descriptor (using the getLocation method),\n\n  creating an instance of the class by invoking the special\n \"activation\" constructor of the object's class that takes two\n arguments: the object's ActivationID, and the\n MarshalledObject containing object specific\n initialization data, and\n\n  returning a MarshalledObject containing the stub for the\n remote object it created.\nIn order for activation to be successful, one of the following requirements\n must be met, otherwise ActivationException is thrown:\n\n The class to be activated and the special activation constructor are both public,\n and the class resides in a package that is\n exported\n to at least the java.rmi module; or\n\n The class to be activated resides in a package that is\n open\n to at least the java.rmi module.\n "}]}