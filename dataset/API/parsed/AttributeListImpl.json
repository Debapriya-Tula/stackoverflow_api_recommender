{"name": "Class AttributeListImpl", "module": "java.xml", "package": "org.xml.sax.helpers", "text": "Default implementation for AttributeList.\n\n \nThis module, both source code and documentation, is in the\n Public Domain, and comes with NO WARRANTY.\n See http://www.saxproject.org\n for further information.\n \nAttributeList implements the deprecated SAX1 AttributeList interface, and has been\n replaced by the new SAX2 AttributesImpl interface.\nThis class provides a convenience implementation of the SAX\n AttributeList interface.  This\n implementation is useful both for SAX parser writers, who can use\n it to provide attributes to the application, and for SAX application\n writers, who can use it to create a persistent copy of an element's\n attribute specifications:\n\n private AttributeList myatts;\n\n public void startElement (String name, AttributeList atts)\n {\n              // create a persistent copy of the attribute list\n              // for use outside this method\n   myatts = new AttributeListImpl(atts);\n   [...]\n }\n \nPlease note that SAX parsers are not required to use this\n class to provide an implementation of AttributeList; it is\n supplied only as an optional convenience.  In particular,\n parser writers are encouraged to invent more efficient\n implementations.", "codes": ["@Deprecated(since=\"1.5\")\npublic class AttributeListImpl\nextends Object\nimplements AttributeList"], "fields": [], "methods": [{"method_name": "setAttributeList", "method_sig": "public void setAttributeList (AttributeList atts)", "description": "Set the attribute list, discarding previous contents.\n\n This method allows an application writer to reuse an\n attribute list easily."}, {"method_name": "addAttribute", "method_sig": "public void addAttribute (String name,\n                         String type,\n                         String value)", "description": "Add an attribute to an attribute list.\n\n This method is provided for SAX parser writers, to allow them\n to build up an attribute list incrementally before delivering\n it to the application."}, {"method_name": "removeAttribute", "method_sig": "public void removeAttribute (String name)", "description": "Remove an attribute from the list.\n\n SAX application writers can use this method to filter an\n attribute out of an AttributeList.  Note that invoking this\n method will change the length of the attribute list and\n some of the attribute's indices.\nIf the requested attribute is not in the list, this is\n a no-op."}, {"method_name": "clear", "method_sig": "public void clear()", "description": "Clear the attribute list.\n\n SAX parser writers can use this method to reset the attribute\n list between DocumentHandler.startElement events.  Normally,\n it will make sense to reuse the same AttributeListImpl object\n rather than allocating a new one each time."}, {"method_name": "getLength", "method_sig": "public int getLength()", "description": "Return the number of attributes in the list."}, {"method_name": "getName", "method_sig": "public String getName (int i)", "description": "Get the name of an attribute (by position)."}, {"method_name": "getType", "method_sig": "public String getType (int i)", "description": "Get the type of an attribute (by position)."}, {"method_name": "getValue", "method_sig": "public String getValue (int i)", "description": "Get the value of an attribute (by position)."}, {"method_name": "getType", "method_sig": "public String getType (String name)", "description": "Get the type of an attribute (by name)."}, {"method_name": "getValue", "method_sig": "public String getValue (String name)", "description": "Get the value of an attribute (by name)."}]}