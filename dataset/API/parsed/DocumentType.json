{"name": "Interface DocumentType", "module": "java.xml", "package": "org.w3c.dom", "text": "Each Document has a doctype attribute whose value\n is either null or a DocumentType object. The\n DocumentType interface in the DOM Core provides an interface\n to the list of entities that are defined for the document, and little\n else because the effect of namespaces and the various XML schema efforts\n on DTD representation are not clearly understood as of this writing.\n DOM Level 3 doesn't support editing DocumentType nodes.\n DocumentType nodes are read-only.\n See also the Document Object Model (DOM) Level 3 Core Specification.", "codes": ["public interface DocumentType\nextends Node"], "fields": [], "methods": [{"method_name": "getName", "method_sig": "String getName()", "description": "The name of DTD; i.e., the name immediately following the\n DOCTYPE keyword."}, {"method_name": "getEntities", "method_sig": "NamedNodeMap getEntities()", "description": "A NamedNodeMap containing the general entities, both\n external and internal, declared in the DTD. Parameter entities are\n not contained. Duplicates are discarded. For example in:\n <!DOCTYPE\n ex SYSTEM \"ex.dtd\" [ <!ENTITY foo \"foo\"> <!ENTITY bar\n \"bar\"> <!ENTITY bar \"bar2\"> <!ENTITY % baz \"baz\">\n ]> <ex/>\n  the interface provides access to foo\n and the first declaration of bar but not the second\n declaration of bar or baz. Every node in\n this map also implements the Entity interface.\n The DOM Level 2 does not support editing entities, therefore\n entities cannot be altered in any way."}, {"method_name": "getNotations", "method_sig": "NamedNodeMap getNotations()", "description": "A NamedNodeMap containing the notations declared in the\n DTD. Duplicates are discarded. Every node in this map also implements\n the Notation interface.\n The DOM Level 2 does not support editing notations, therefore\n notations cannot be altered in any way."}, {"method_name": "getPublicId", "method_sig": "String getPublicId()", "description": "The public identifier of the external subset."}, {"method_name": "getSystemId", "method_sig": "String getSystemId()", "description": "The system identifier of the external subset. This may be an absolute\n URI or not."}, {"method_name": "getInternalSubset", "method_sig": "String getInternalSubset()", "description": "The internal subset as a string, or null if there is none.\n This is does not contain the delimiting square brackets.\n Note: The actual content returned depends on how much\n information is available to the implementation. This may vary\n depending on various parameters, including the XML processor used to\n build the document."}]}