{"name": "Interface CompositeContext", "module": "java.desktop", "package": "java.awt", "text": "The CompositeContext interface defines the encapsulated\n and optimized environment for a compositing operation.\n CompositeContext objects maintain state for\n compositing operations.  In a multi-threaded environment, several\n contexts can exist simultaneously for a single Composite\n object.", "codes": ["public interface CompositeContext"], "fields": [], "methods": [{"method_name": "dispose", "method_sig": "void dispose()", "description": "Releases resources allocated for a context."}, {"method_name": "compose", "method_sig": "void compose (Raster src,\n             Raster dstIn,\n             WritableRaster dstOut)", "description": "Composes the two source Raster objects and\n places the result in the destination\n WritableRaster.  Note that the destination\n can be the same object as either the first or second\n source. Note that dstIn and\n dstOut must be compatible with the\n dstColorModel passed to the\n createContext\n method of the Composite interface."}]}