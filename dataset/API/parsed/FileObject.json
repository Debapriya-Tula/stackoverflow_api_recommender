{"name": "Interface FileObject", "module": "java.compiler", "package": "javax.tools", "text": "File abstraction for tools.  In this context, file means\n an abstraction of regular files and other sources of data.  For\n example, a file object can be used to represent regular files,\n memory cache, or data in databases.\n\n All methods in this interface might throw a SecurityException if\n a security exception occurs.\n\n Unless explicitly allowed, all methods in this interface might\n throw a NullPointerException if given a null argument.", "codes": ["public interface FileObject"], "fields": [], "methods": [{"method_name": "toUri", "method_sig": "URI toUri()", "description": "Returns a URI identifying this file object."}, {"method_name": "getName", "method_sig": "String getName()", "description": "Returns a user-friendly name for this file object.  The exact\n value returned is not specified but implementations should take\n care to preserve names as given by the user.  For example, if\n the user writes the filename \"BobsApp\\Test.java\" on\n the command line, this method should return \n \"BobsApp\\Test.java\" whereas the toUri\n method might return \n file:///C:/Documents%20and%20Settings/UncleBob/BobsApp/Test.java."}, {"method_name": "openInputStream", "method_sig": "InputStream openInputStream()\n                     throws IOException", "description": "Returns an InputStream for this file object."}, {"method_name": "openOutputStream", "method_sig": "OutputStream openOutputStream()\n                       throws IOException", "description": "Returns an OutputStream for this file object."}, {"method_name": "openReader", "method_sig": "Reader openReader (boolean ignoreEncodingErrors)\n           throws IOException", "description": "Returns a reader for this object.  The returned reader will\n replace bytes that cannot be decoded with the default\n translation character.  In addition, the reader may report a\n diagnostic unless ignoreEncodingErrors is true."}, {"method_name": "getCharContent", "method_sig": "CharSequence getCharContent (boolean ignoreEncodingErrors)\n                     throws IOException", "description": "Returns the character content of this file object, if available.\n Any byte that cannot be decoded will be replaced by the default\n translation character.  In addition, a diagnostic may be\n reported unless ignoreEncodingErrors is true."}, {"method_name": "openWriter", "method_sig": "Writer openWriter()\n           throws IOException", "description": "Returns a Writer for this file object."}, {"method_name": "getLastModified", "method_sig": "long getLastModified()", "description": "Returns the time this file object was last modified.  The time is\n measured in milliseconds since the epoch (00:00:00 GMT, January\n 1, 1970)."}, {"method_name": "delete", "method_sig": "boolean delete()", "description": "Deletes this file object.  In case of errors, returns false."}]}