{"name": "Class JobHoldUntil", "module": "java.desktop", "package": "javax.print.attribute.standard", "text": "Class JobHoldUntil is a printing attribute class, a date-time\n attribute, that specifies the exact date and time at which the job must\n become a candidate for printing.\n \n If the value of this attribute specifies a date-time that is in the future,\n the printer should add the JobStateReason value of\n JOB_HOLD_UNTIL_SPECIFIED to the job's\n JobStateReasons attribute, must move the job to the\n PENDING_HELD state, and must not schedule the job for printing until\n the specified date-time arrives.\n \n When the specified date-time arrives, the printer must remove the\n JobStateReason value of\n JOB_HOLD_UNTIL_SPECIFIED from the job's\n JobStateReasons attribute, if present. If there are\n no other job state reasons that keep the job in the PENDING_HELD\n state, the printer must consider the job as a candidate for processing by\n moving the job to the PENDING state.\n \n If the specified date-time has already passed, the job must be a candidate\n for processing immediately. Thus, one way to make the job immediately become\n a candidate for processing is to specify a JobHoldUntil attribute\n constructed like this\n (denoting a date-time of January 1, 1970, 00:00:00 GMT):\n \n     JobHoldUntil immediately = new JobHoldUntil (new Date (0L));\n \n\n If the client does not supply this attribute in a Print Request and the\n printer supports this attribute, the printer must use its\n (implementation-dependent) default JobHoldUntil value at job\n submission time (unlike most job template attributes that are used if\n necessary at job processing time).\n \n To construct a JobHoldUntil attribute from separate values of the\n year, month, day, hour, minute, and so on, use a Calendar\n object to construct a Date object, then use the\n Date object to construct the JobHoldUntil attribute. To\n convert a JobHoldUntil attribute to separate values of the year,\n month, day, hour, minute, and so on, create a Calendar\n object and set it to the Date from the JobHoldUntil\n attribute.\n \nIPP Compatibility: Although IPP supports a \"job-hold-until\" attribute\n specified as a keyword, IPP does not at this time support a \"job-hold-until\"\n attribute specified as a date and time. However, the date and time can be\n converted to one of the standard IPP keywords with some loss of precision;\n for example, a JobHoldUntil value with today's date and 9:00pm local\n time might be converted to the standard IPP keyword \"night\". The category\n name returned by getName() gives the IPP attribute name.", "codes": ["public final class JobHoldUntil\nextends DateTimeSyntax\nimplements PrintRequestAttribute, PrintJobAttribute"], "fields": [], "methods": [{"method_name": "equals", "method_sig": "public boolean equals (Object object)", "description": "Returns whether this job hold until attribute is equivalent to the passed\n in object. To be equivalent, all of the following conditions must be\n true:\n \nobject is not null.\n   object is an instance of class JobHoldUntil.\n   This job hold until attribute's Date value and\n   object's Date value are equal.\n "}, {"method_name": "getCategory", "method_sig": "public final Class<? extends Attribute> getCategory()", "description": "Get the printing attribute class which is to be used as the \"category\"\n for this printing attribute value.\n \n For class JobHoldUntil, the category is class\n JobHoldUntil itself."}, {"method_name": "getName", "method_sig": "public final String getName()", "description": "Get the name of the category of which this attribute value is an\n instance.\n \n For class JobHoldUntil, the category name is\n \"job-hold-until\"."}]}