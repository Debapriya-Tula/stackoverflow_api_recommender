{"name": "Class ScriptObjectMirror", "module": "jdk.scripting.nashorn", "package": "jdk.nashorn.api.scripting", "text": "Mirror object that wraps a given Nashorn Script object.", "codes": ["@Deprecated(since=\"11\",\n            forRemoval=true)\npublic final class ScriptObjectMirror\nextends AbstractJSObject\nimplements Bindings"], "fields": [], "methods": [{"method_name": "callMember", "method_sig": "public Object callMember (String functionName,\n                         Object... args)", "description": "Call member function"}, {"method_name": "setIndexedPropertiesToExternalArrayData", "method_sig": "public void setIndexedPropertiesToExternalArrayData (ByteBuffer buf)", "description": "Nashorn extension: setIndexedPropertiesToExternalArrayData.\n set indexed properties be exposed from a given nio ByteBuffer."}, {"method_name": "delete", "method_sig": "public boolean delete (Object key)", "description": "Delete a property from this object."}, {"method_name": "getProto", "method_sig": "public Object getProto()", "description": "Return the __proto__ of this object."}, {"method_name": "setProto", "method_sig": "public void setProto (Object proto)", "description": "Set the __proto__ of this object."}, {"method_name": "getOwnPropertyDescriptor", "method_sig": "public Object getOwnPropertyDescriptor (String key)", "description": "ECMA 8.12.1 [[GetOwnProperty]] (P)"}, {"method_name": "getOwnKeys", "method_sig": "public String[] getOwnKeys (boolean all)", "description": "return an array of own property keys associated with the object."}, {"method_name": "preventExtensions", "method_sig": "public ScriptObjectMirror preventExtensions()", "description": "Flag this script object as non extensible"}, {"method_name": "isExtensible", "method_sig": "public boolean isExtensible()", "description": "Check if this script object is extensible"}, {"method_name": "seal", "method_sig": "public ScriptObjectMirror seal()", "description": "ECMAScript 15.2.3.8 - seal implementation"}, {"method_name": "isSealed", "method_sig": "public boolean isSealed()", "description": "Check whether this script object is sealed"}, {"method_name": "freeze", "method_sig": "public ScriptObjectMirror freeze()", "description": "ECMA 15.2.39 - freeze implementation. Freeze this script object"}, {"method_name": "isFrozen", "method_sig": "public boolean isFrozen()", "description": "Check whether this script object is frozen"}, {"method_name": "isUndefined", "method_sig": "public static boolean isUndefined (Object obj)", "description": "Utility to check if given object is ECMAScript undefined value"}, {"method_name": "to", "method_sig": "public <T> T to (Class<T> type)", "description": "Utility to convert this script object to the given type."}, {"method_name": "wrap", "method_sig": "public static Object wrap (Object obj,\n                          Object homeGlobal)", "description": "Make a script object mirror on given object if needed."}, {"method_name": "wrapAsJSONCompatible", "method_sig": "public static Object wrapAsJSONCompatible (Object obj,\n                                          Object homeGlobal)", "description": "Make a script object mirror on given object if needed. The created wrapper will implement\n the Java List interface if obj is a JavaScript Array object;\n this is compatible with Java JSON libraries expectations. Arrays retrieved through its\n properties (transitively) will also implement the list interface."}, {"method_name": "unwrap", "method_sig": "public static Object unwrap (Object obj,\n                            Object homeGlobal)", "description": "Unwrap a script object mirror if needed."}, {"method_name": "wrapArray", "method_sig": "public static Object[] wrapArray (Object[] args,\n                                 Object homeGlobal)", "description": "Wrap an array of object to script object mirrors if needed."}, {"method_name": "unwrapArray", "method_sig": "public static Object[] unwrapArray (Object[] args,\n                                   Object homeGlobal)", "description": "Unwrap an array of script object mirrors if needed."}, {"method_name": "identical", "method_sig": "public static boolean identical (Object obj1,\n                                Object obj2)", "description": "Are the given objects mirrors to same underlying object?"}]}