{"name": "Class QName", "module": "java.xml", "package": "javax.xml.namespace", "text": "QName represents a qualified name\n as defined in the XML specifications: XML Schema Part2:\n Datatypes specification, Namespaces\n in XML.\n\n The value of a QName contains a Namespace\n URI, local part and\n prefix.\nThe prefix is included in QName to retain lexical\n information when present in an XML input source. The prefix is\n NOT used in QName.equals(Object) or to compute the QName.hashCode().  Equality and the hash code are defined using\n only the Namespace URI and local part.\nIf not specified, the Namespace URI is set to XMLConstants.NULL_NS_URI.\n If not specified, the prefix is set to XMLConstants.DEFAULT_NS_PREFIX.\nQName is immutable.", "codes": ["public class QName\nextends Object\nimplements Serializable"], "fields": [], "methods": [{"method_name": "getNamespaceURI", "method_sig": "public String getNamespaceURI()", "description": "Get the Namespace URI of this QName."}, {"method_name": "getLocalPart", "method_sig": "public String getLocalPart()", "description": "Get the local part of this QName."}, {"method_name": "getPrefix", "method_sig": "public String getPrefix()", "description": "Get the prefix of this QName.\nThe prefix assigned to a QName might\n NOT be valid in a different\n context. For example, a QName may be assigned a\n prefix in the context of parsing a document but that prefix may\n be invalid in the context of a different document."}, {"method_name": "equals", "method_sig": "public final boolean equals (Object objectToTest)", "description": "Test this QName for equality with another\n Object.\nIf the Object to be tested is not a\n QName or is null, then this method\n returns false.\nTwo QNames are considered equal if and only if\n both the Namespace URI and local part are equal. This method\n uses String.equals() to check equality of the\n Namespace URI and local part. The prefix is\n NOT used to determine equality.\nThis method satisfies the general contract of Object.equals(Object)"}, {"method_name": "hashCode", "method_sig": "public final int hashCode()", "description": "Generate the hash code for this QName.\nThe hash code is calculated using both the Namespace URI and\n the local part of the QName.  The prefix is\n NOT used to calculate the hash\n code.\nThis method satisfies the general contract of Object.hashCode()."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "String representation of this\n QName.\nThe commonly accepted way of representing a QName\n as a String was\n defined\n by James Clark.  Although this is not a standard\n specification, it is in common use, e.g. Transformer.setParameter(String name, Object value).\n This implementation represents a QName as:\n \"{\" + Namespace URI + \"}\" + local part.  If the Namespace URI\n .equals(XMLConstants.NULL_NS_URI), only the\n local part is returned.  An appropriate use of this method is\n for debugging or logging for human consumption.\nNote the prefix value is NOT\n returned as part of the String representation.\nThis method satisfies the general contract of Object.toString()."}, {"method_name": "valueOf", "method_sig": "public static QName valueOf (String qNameAsString)", "description": "QName derived from parsing the formatted\n String.\nIf the String is null or does not conform to\n QName.toString() formatting, an\n IllegalArgumentException is thrown.\nThe String MUST be in the\n form returned by QName.toString().\nThe commonly accepted way of representing a QName\n as a String was\n defined\n by James Clark.  Although this is not a standard\n specification, it is in common use, e.g. Transformer.setParameter(String name, Object value).\n This implementation parses a String formatted\n as: \"{\" + Namespace URI + \"}\" + local part.  If the Namespace\n URI .equals(XMLConstants.NULL_NS_URI), only the\n local part should be provided.\nThe prefix value CANNOT be\n represented in the String and will be set to\n XMLConstants.DEFAULT_NS_PREFIX.\nThis method does not do full validation of the resulting\n QName.\n The Namespace URI is not validated as a\n URI reference.\n The local part is not validated as a\n NCName\n as specified in\n Namespaces in XML."}]}