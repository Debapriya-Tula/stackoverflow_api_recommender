{"name": "Interface ObjectInputFilter.FilterInfo", "module": "java.base", "package": "java.io", "text": "FilterInfo provides access to information about the current object\n being deserialized and the status of the ObjectInputStream.", "codes": ["public static interface ObjectInputFilter.FilterInfo"], "fields": [], "methods": [{"method_name": "serialClass", "method_sig": "Class<?> serialClass()", "description": "The class of an object being deserialized.\n For arrays, it is the array type.\n For example, the array class name of a 2 dimensional array of strings is\n \"[[Ljava.lang.String;\".\n To check the array's element type, iteratively use\n Class.getComponentType while the result\n is an array and then check the class.\n The serialClass is null in the case where a new object is not being\n created and to give the filter a chance to check the depth, number of\n references to existing objects, and the stream size."}, {"method_name": "arrayLength", "method_sig": "long arrayLength()", "description": "The number of array elements when deserializing an array of the class."}, {"method_name": "depth", "method_sig": "long depth()", "description": "The current depth.\n The depth starts at 1 and increases for each nested object and\n decrements when each nested object returns."}, {"method_name": "references", "method_sig": "long references()", "description": "The current number of object references."}, {"method_name": "streamBytes", "method_sig": "long streamBytes()", "description": "The current number of bytes consumed."}]}