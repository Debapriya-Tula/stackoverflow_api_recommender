{"name": "Class PopupFactory", "module": "java.desktop", "package": "javax.swing", "text": "PopupFactory, as the name implies, is used to obtain\n instances of Popups. Popups are used to\n display a Component above all other Components\n in a particular containment hierarchy. The general contract is that\n once you have obtained a Popup from a\n PopupFactory, you must invoke hide on the\n Popup. The typical usage is:\n \n   PopupFactory factory = PopupFactory.getSharedInstance();\n   Popup popup = factory.getPopup(owner, contents, x, y);\n   popup.show();\n   ...\n   popup.hide();\n ", "codes": ["public class PopupFactory\nextends Object"], "fields": [], "methods": [{"method_name": "setSharedInstance", "method_sig": "public static void setSharedInstance (PopupFactory factory)", "description": "Sets the PopupFactory that will be used to obtain\n Popups.\n This will throw an IllegalArgumentException if\n factory is null."}, {"method_name": "getSharedInstance", "method_sig": "public static PopupFactory getSharedInstance()", "description": "Returns the shared PopupFactory which can be used\n to obtain Popups."}, {"method_name": "getPopup", "method_sig": "public Popup getPopup (Component owner,\n                      Component contents,\n                      int x,\n                      int y)\n               throws IllegalArgumentException", "description": "Creates a Popup for the Component owner\n containing the Component contents. owner\n is used to determine which Window the new\n Popup will parent the Component the\n Popup creates to. A null owner implies there\n is no valid parent. x and\n y specify the preferred initial location to place\n the Popup at. Based on screen size, or other paramaters,\n the Popup may not display at x and\n y."}, {"method_name": "getPopup", "method_sig": "protected Popup getPopup (Component owner,\n                         Component contents,\n                         int x,\n                         int y,\n                         boolean isHeavyWeightPopup)\n                  throws IllegalArgumentException", "description": "Creates a Popup for the Component owner\n containing the Component contents.\n The window containing the component owner\n will be used as the parent window. A null owner implies there\n is no valid parent. x and y specify the preferred\n initial location to place the Popup at. Based on screen size,\n or other parameters, the Popup may not display at x and\n y. isHeavyWeightPopup specifies if the Popup\n will be heavyweight. Passing true will force the Popup\n type to be heavyweight, otherwise Popup type will be selected by\n Popup factory. Lightweight Popup windows are more\n efficient than heavyweight (native peer) windows, but lightweight\n and heavyweight components do not mix well in a GUI.\n This method is intended to be used only by PopupFactory sub-classes."}]}