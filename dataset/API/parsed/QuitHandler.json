{"name": "Interface QuitHandler", "module": "java.desktop", "package": "java.awt.desktop", "text": "An implementor determines if requests to quit this application should proceed or cancel.", "codes": ["public interface QuitHandler"], "fields": [], "methods": [{"method_name": "handleQuitRequestWith", "method_sig": "void handleQuitRequestWith (QuitEvent e,\n                           QuitResponse response)", "description": "Invoked when the application is asked to quit.\n\n Implementors must call either QuitResponse.cancelQuit(), QuitResponse.performQuit(), or ensure the application terminates.\n The process (or log-out) requesting this app to quit will be blocked until the QuitResponse is handled.\n Apps that require complex UI to shutdown may call the QuitResponse from any thread.\n Your app may be asked to quit multiple times before you have responded to the initial request.\n This handler is called each time a quit is requested, and the same QuitResponse object is passed until it is handled.\n Once used, the QuitResponse cannot be used again to change the decision."}]}