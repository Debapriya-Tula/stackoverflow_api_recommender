{"name": "Annotation Type ConstructorParameters", "module": "java.management", "package": "javax.management", "text": "\n An annotation on a constructor that shows how the parameters of\n that constructor correspond to the constructed object's getter\n methods.  For example:\n \n\n\n         public class MemoryUsage {\n             // standard JavaBean conventions with getters\n             @ConstructorParameters({\"init\", \"used\", \"committed\", \"max\"})\n             public MemoryUsage(long init, long used,\n                                long committed, long max) {...}\n             public long getInit() {...}\n             public long getUsed() {...}\n             public long getCommitted() {...}\n             public long getMax() {...}\n         }\n     \n\n\n The annotation shows that the first parameter of the constructor\n can be retrieved with the getInit() method, the second one with\n the getUsed() method, and so on. Since parameter names are not in\n general available at runtime, without the annotation there would be\n no way of knowing which parameter corresponds to which property.\n \n\n If a constructor is annotated by the both @java.beans.ConstructorProperties\n and @javax.management.ConstructorParameters annotations\n the JMX introspection will give an absolute precedence to the latter one.\n ", "codes": ["@Documented\n@Target(CONSTRUCTOR)\n@Retention(RUNTIME)\npublic @interface ConstructorParameters"], "fields": [], "methods": []}