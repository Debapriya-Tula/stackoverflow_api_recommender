{"name": "Interface ThreadGroupReference", "module": "jdk.jdi", "package": "com.sun.jdi", "text": "A thread group object from the target VM.\n A ThreadGroupReference is an ObjectReference with additional\n access to threadgroup-specific information from the target VM.", "codes": ["public interface ThreadGroupReference\nextends ObjectReference"], "fields": [], "methods": [{"method_name": "name", "method_sig": "String name()", "description": "Returns the name of this thread group."}, {"method_name": "parent", "method_sig": "ThreadGroupReference parent()", "description": "Returns the parent of this thread group."}, {"method_name": "suspend", "method_sig": "void suspend()", "description": "Suspends all threads in this thread group. Each thread\n in this group and in all of its subgroups will be\n suspended as described in ThreadReference.suspend().\n This is not guaranteed to be an atomic\n operation; if the target VM is not interrupted at the time\n this method is\n called, it is possible that new threads will be created\n between the time that threads are enumerated and all of them\n have been suspended."}, {"method_name": "resume", "method_sig": "void resume()", "description": "Resumes all threads in this thread group. Each thread\n in this group and in all of its subgroups will be\n resumed as described in ThreadReference.resume()."}, {"method_name": "threads", "method_sig": "List<ThreadReference> threads()", "description": "Returns a List containing a ThreadReference for each live thread\n in this thread group. Only the live threads in this immediate thread group\n (and not its subgroups) are returned.  A thread is alive if it\n has been started and has not yet been stopped."}, {"method_name": "threadGroups", "method_sig": "List<ThreadGroupReference> threadGroups()", "description": "Returns a List containing each active ThreadGroupReference in this\n thread group. Only the active thread groups in this immediate thread group\n (and not its subgroups) are returned.\n See ThreadGroup\n for information about 'active' ThreadGroups."}]}