{"name": "Class ObjID", "module": "java.rmi", "package": "java.rmi.server", "text": "An ObjID is used to identify a remote object exported\n to an RMI runtime.  When a remote object is exported, it is assigned\n an object identifier either implicitly or explicitly, depending on\n the API used to export.\n\n The ObjID() constructor can be used to generate a unique\n object identifier.  Such an ObjID is unique over time\n with respect to the host it is generated on.\n\n The ObjID(int) constructor can be used to create a\n \"well-known\" object identifier.  The scope of a well-known\n ObjID depends on the RMI runtime it is exported to.\n\n An ObjID instance contains an object number (of type\n long) and an address space identifier (of type\n UID).  In a unique ObjID, the address space\n identifier is unique with respect to a given host over time.  In a\n well-known ObjID, the address space identifier is\n equivalent to one returned by invoking the UID(short)\n constructor with the value zero.\n\n If the system property java.rmi.server.randomIDs\n is defined to equal the string \"true\" (case insensitive),\n then the ObjID() constructor will use a cryptographically\n strong random number generator to choose the object number of the\n returned ObjID.", "codes": ["public final class ObjID\nextends Object\nimplements Serializable"], "fields": [{"field_name": "REGISTRY_ID", "field_sig": "public static final\u00a0int REGISTRY_ID", "description": "Object number for well-known ObjID of the registry."}, {"field_name": "ACTIVATOR_ID", "field_sig": "public static final\u00a0int ACTIVATOR_ID", "description": "Object number for well-known ObjID of the activator."}, {"field_name": "DGC_ID", "field_sig": "public static final\u00a0int DGC_ID", "description": "Object number for well-known ObjID of\n the distributed garbage collector."}], "methods": [{"method_name": "write", "method_sig": "public void write (ObjectOutput out)\n           throws IOException", "description": "Marshals a binary representation of this ObjID to\n an ObjectOutput instance.\n\n Specifically, this method first invokes the given stream's\n DataOutput.writeLong(long) method with this object\n identifier's object number, and then it writes its address\n space identifier by invoking its UID.write(DataOutput)\n method with the stream."}, {"method_name": "read", "method_sig": "public static ObjID read (ObjectInput in)\n                  throws IOException", "description": "Constructs and returns a new ObjID instance by\n unmarshalling a binary representation from an\n ObjectInput instance.\n\n Specifically, this method first invokes the given stream's\n DataInput.readLong() method to read an object number,\n then it invokes UID.read(DataInput) with the\n stream to read an address space identifier, and then it\n creates and returns a new ObjID instance that\n contains the object number and address space identifier that\n were read from the stream."}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Returns the hash code value for this object identifier, the\n object number."}, {"method_name": "equals", "method_sig": "public boolean equals (Object obj)", "description": "Compares the specified object with this ObjID for\n equality.\n\n This method returns true if and only if the\n specified object is an ObjID instance with the same\n object number and address space identifier as this one."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns a string representation of this object identifier."}]}