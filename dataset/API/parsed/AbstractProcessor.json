{"name": "Class AbstractProcessor", "module": "java.compiler", "package": "javax.annotation.processing", "text": "An abstract annotation processor designed to be a convenient\n superclass for most concrete annotation processors.  This class\n examines annotation values to compute the options, annotation types, and source version supported by its\n subtypes.\n\n The getter methods may issue\n warnings about noteworthy conditions using the facilities available\n after the processor has been initialized.\n\n Subclasses are free to override the implementation and\n specification of any of the methods in this class as long as the\n general Processor\n contract for that method is obeyed.", "codes": ["public abstract class AbstractProcessor\nextends Object\nimplements Processor"], "fields": [{"field_name": "processingEnv", "field_sig": "protected\u00a0ProcessingEnvironment processingEnv", "description": "Processing environment providing by the tool framework."}], "methods": [{"method_name": "getSupportedOptions", "method_sig": "public Set<String> getSupportedOptions()", "description": "If the processor class is annotated with SupportedOptions, return an unmodifiable set with the same set\n of strings as the annotation.  If the class is not so\n annotated, an empty set is returned."}, {"method_name": "getSupportedAnnotationTypes", "method_sig": "public Set<String> getSupportedAnnotationTypes()", "description": "If the processor class is annotated with SupportedAnnotationTypes, return an unmodifiable set with the\n same set of strings as the annotation.  If the class is not so\n annotated, an empty set is returned.\n\n If the source\n version does not support modules, in other words if it is less\n than or equal to RELEASE_8,\n then any leading module prefixes are stripped from the names."}, {"method_name": "getSupportedSourceVersion", "method_sig": "public SourceVersion getSupportedSourceVersion()", "description": "If the processor class is annotated with SupportedSourceVersion, return the source version in the\n annotation.  If the class is not so annotated, SourceVersion.RELEASE_6 is returned."}, {"method_name": "init", "method_sig": "public void init (ProcessingEnvironment processingEnv)", "description": "Initializes the processor with the processing environment by\n setting the processingEnv field to the value of the\n processingEnv argument.  An \n IllegalStateException will be thrown if this method is called\n more than once on the same object."}, {"method_name": "getCompletions", "method_sig": "public Iterable<? extends Completion> getCompletions (Element element,\n                                                     AnnotationMirror annotation,\n                                                     ExecutableElement member,\n                                                     String userText)", "description": "Returns an empty iterable of completions."}, {"method_name": "isInitialized", "method_sig": "protected boolean isInitialized()", "description": "Returns true if this object has been initialized, false otherwise."}]}