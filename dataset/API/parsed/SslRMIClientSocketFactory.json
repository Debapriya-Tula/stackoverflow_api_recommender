{"name": "Class SslRMIClientSocketFactory", "module": "java.rmi", "package": "javax.rmi.ssl", "text": "An SslRMIClientSocketFactory instance is used by the RMI\n runtime in order to obtain client sockets for RMI calls via SSL.\nThis class implements RMIClientSocketFactory over\n the Secure Sockets Layer (SSL) or Transport Layer Security (TLS)\n protocols.\nThis class creates SSL sockets using the default\n SSLSocketFactory (see SSLSocketFactory.getDefault()).  All instances of this class are\n functionally equivalent.  In particular, they all share the same\n truststore, and the same keystore when client authentication is\n required by the server.  This behavior can be modified in\n subclasses by overriding the createSocket(String,int)\n method; in that case, equals and hashCode may also need to be overridden.\nIf the system property\n javax.rmi.ssl.client.enabledCipherSuites is specified,\n the createSocket(String,int) method will call SSLSocket.setEnabledCipherSuites(String[]) before returning the\n socket.  The value of this system property is a string that is a\n comma-separated list of SSL/TLS cipher suites to enable.\nIf the system property\n javax.rmi.ssl.client.enabledProtocols is specified,\n the createSocket(String,int) method will call SSLSocket.setEnabledProtocols(String[]) before returning the\n socket.  The value of this system property is a string that is a\n comma-separated list of SSL/TLS protocol versions to enable.", "codes": ["public class SslRMIClientSocketFactory\nextends Object\nimplements RMIClientSocketFactory, Serializable"], "fields": [], "methods": [{"method_name": "createSocket", "method_sig": "public Socket createSocket (String host,\n                           int port)\n                    throws IOException", "description": "Creates an SSL socket.\nIf the system property\n javax.rmi.ssl.client.enabledCipherSuites is\n specified, this method will call SSLSocket.setEnabledCipherSuites(String[]) before returning\n the socket. The value of this system property is a string that\n is a comma-separated list of SSL/TLS cipher suites to\n enable.\nIf the system property\n javax.rmi.ssl.client.enabledProtocols is\n specified, this method will call SSLSocket.setEnabledProtocols(String[]) before returning the\n socket. The value of this system property is a string that is a\n comma-separated list of SSL/TLS protocol versions to\n enable."}, {"method_name": "equals", "method_sig": "public boolean equals (Object obj)", "description": "Indicates whether some other object is \"equal to\" this one.\nBecause all instances of this class are functionally equivalent\n (they all use the default\n SSLSocketFactory), this method simply returns\n this.getClass().equals(obj.getClass()).\nA subclass should override this method (as well\n as hashCode()) if its instances are not all\n functionally equivalent."}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Returns a hash code value for this\n SslRMIClientSocketFactory."}]}