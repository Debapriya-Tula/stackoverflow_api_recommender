{"name": "Class DocumentFilter", "module": "java.desktop", "package": "javax.swing.text", "text": "DocumentFilter, as the name implies, is a filter for the\n Document mutation methods. When a Document\n containing a DocumentFilter is modified (either through\n insert or remove), it forwards the appropriate\n method invocation to the DocumentFilter. The\n default implementation allows the modification to\n occur. Subclasses can filter the modifications by conditionally invoking\n methods on the superclass, or invoking the necessary methods on\n the passed in FilterBypass. Subclasses should NOT call back\n into the Document for the modification\n instead call into the superclass or the FilterBypass.\n \n When remove or insertString is invoked\n on the DocumentFilter, the DocumentFilter\n may callback into the\n FilterBypass multiple times, or for different regions, but\n it should not callback into the FilterBypass after returning\n from the remove or insertString method.\n \n By default, text related document mutation methods such as\n insertString, replace and remove\n in AbstractDocument use DocumentFilter when\n available, and Element related mutation methods such as\n create, insert and removeElement in\n DefaultStyledDocument do not use DocumentFilter.\n If a method doesn't follow these defaults, this must be explicitly stated\n in the method documentation.", "codes": ["public class DocumentFilter\nextends Object"], "fields": [], "methods": [{"method_name": "remove", "method_sig": "public void remove (DocumentFilter.FilterBypass fb,\n                   int offset,\n                   int length)\n            throws BadLocationException", "description": "Invoked prior to removal of the specified region in the\n specified Document. Subclasses that want to conditionally allow\n removal should override this and only call supers implementation as\n necessary, or call directly into the FilterBypass as\n necessary."}, {"method_name": "insertString", "method_sig": "public void insertString (DocumentFilter.FilterBypass fb,\n                         int offset,\n                         String string,\n                         AttributeSet attr)\n                  throws BadLocationException", "description": "Invoked prior to insertion of text into the\n specified Document. Subclasses that want to conditionally allow\n insertion should override this and only call supers implementation as\n necessary, or call directly into the FilterBypass."}, {"method_name": "replace", "method_sig": "public void replace (DocumentFilter.FilterBypass fb,\n                    int offset,\n                    int length,\n                    String text,\n                    AttributeSet attrs)\n             throws BadLocationException", "description": "Invoked prior to replacing a region of text in the\n specified Document. Subclasses that want to conditionally allow\n replace should override this and only call supers implementation as\n necessary, or call directly into the FilterBypass."}]}