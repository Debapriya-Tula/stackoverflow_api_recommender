{"name": "Class CoderResult", "module": "java.base", "package": "java.nio.charset", "text": "A description of the result state of a coder.\n\n  A charset coder, that is, either a decoder or an encoder, consumes bytes\n (or characters) from an input buffer, translates them, and writes the\n resulting characters (or bytes) to an output buffer.  A coding process\n terminates for one of four categories of reasons, which are described by\n instances of this class:\n\n \n Underflow is reported when there is no more input to be\n   processed, or there is insufficient input and additional input is\n   required.  This condition is represented by the unique result object\n   UNDERFLOW, whose isUnderflow method\n   returns true.  \n Overflow is reported when there is insufficient room\n   remaining in the output buffer.  This condition is represented by the\n   unique result object OVERFLOW, whose isOverflow method returns true.  \n A malformed-input error is reported when a sequence of\n   input units is not well-formed.  Such errors are described by instances of\n   this class whose isMalformed method returns\n   true and whose length method returns the length\n   of the malformed sequence.  There is one unique instance of this class for\n   all malformed-input errors of a given length.  \n An unmappable-character error is reported when a sequence\n   of input units denotes a character that cannot be represented in the\n   output charset.  Such errors are described by instances of this class\n   whose isUnmappable method returns true and\n   whose length method returns the length of the input\n   sequence denoting the unmappable character.  There is one unique instance\n   of this class for all unmappable-character errors of a given length.\n   \n\n For convenience, the isError method returns true\n for result objects that describe malformed-input and unmappable-character\n errors but false for those that describe underflow or overflow\n conditions.  ", "codes": ["public class CoderResult\nextends Object"], "fields": [{"field_name": "UNDERFLOW", "field_sig": "public static final\u00a0CoderResult UNDERFLOW", "description": "Result object indicating underflow, meaning that either the input buffer\n has been completely consumed or, if the input buffer is not yet empty,\n that additional input is required."}, {"field_name": "OVERFLOW", "field_sig": "public static final\u00a0CoderResult OVERFLOW", "description": "Result object indicating overflow, meaning that there is insufficient\n room in the output buffer."}], "methods": [{"method_name": "toString", "method_sig": "public String toString()", "description": "Returns a string describing this coder result."}, {"method_name": "isUnderflow", "method_sig": "public boolean isUnderflow()", "description": "Tells whether or not this object describes an underflow condition."}, {"method_name": "isOverflow", "method_sig": "public boolean isOverflow()", "description": "Tells whether or not this object describes an overflow condition."}, {"method_name": "isError", "method_sig": "public boolean isError()", "description": "Tells whether or not this object describes an error condition."}, {"method_name": "isMalformed", "method_sig": "public boolean isMalformed()", "description": "Tells whether or not this object describes a malformed-input error."}, {"method_name": "isUnmappable", "method_sig": "public boolean isUnmappable()", "description": "Tells whether or not this object describes an unmappable-character\n error."}, {"method_name": "length", "method_sig": "public int length()", "description": "Returns the length of the erroneous input described by this\n object\u00a0\u00a0(optional operation)."}, {"method_name": "malformedForLength", "method_sig": "public static CoderResult malformedForLength (int length)", "description": "Static factory method that returns the unique object describing a\n malformed-input error of the given length."}, {"method_name": "unmappableForLength", "method_sig": "public static CoderResult unmappableForLength (int length)", "description": "Static factory method that returns the unique result object describing\n an unmappable-character error of the given length."}, {"method_name": "throwException", "method_sig": "public void throwException()\n                    throws CharacterCodingException", "description": "Throws an exception appropriate to the result described by this object."}]}