{"name": "Interface XMLEventAllocator", "module": "java.xml", "package": "javax.xml.stream.util", "text": "This interface defines a class that allows a user to register\n a way to allocate events given an XMLStreamReader.  An implementation\n is not required to use the XMLEventFactory implementation but this\n is recommended.  The XMLEventAllocator can be set on an XMLInputFactory\n using the property \"javax.xml.stream.allocator\"", "codes": ["public interface XMLEventAllocator"], "fields": [], "methods": [{"method_name": "newInstance", "method_sig": "XMLEventAllocator newInstance()", "description": "This method creates an instance of the XMLEventAllocator. This\n allows the XMLInputFactory to allocate a new instance per reader."}, {"method_name": "allocate", "method_sig": "XMLEvent allocate (XMLStreamReader reader)\n           throws XMLStreamException", "description": "This method allocates an event given the current\n state of the XMLStreamReader.  If this XMLEventAllocator\n does not have a one-to-one mapping between reader states\n and events this method will return null.  This method\n must not modify the state of the XMLStreamReader."}, {"method_name": "allocate", "method_sig": "void allocate (XMLStreamReader reader,\n              XMLEventConsumer consumer)\n       throws XMLStreamException", "description": "This method allocates an event or set of events\n given the current\n state of the XMLStreamReader and adds the event\n or set of events to the\n consumer that was passed in.  This method can be used\n to expand or contract reader states into event states.\n This method may modify the state of the XMLStreamReader."}]}