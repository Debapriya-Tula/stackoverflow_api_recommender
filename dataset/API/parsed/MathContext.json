{"name": "Class MathContext", "module": "java.base", "package": "java.math", "text": "Immutable objects which encapsulate the context settings which\n describe certain rules for numerical operators, such as those\n implemented by the BigDecimal class.\n\n The base-independent settings are:\n \nprecision:\n the number of digits to be used for an operation; results are\n rounded to this precision\n\n roundingMode:\n a RoundingMode object which specifies the algorithm to be\n used for rounding.\n ", "codes": ["public final class MathContext\nextends Object\nimplements Serializable"], "fields": [{"field_name": "UNLIMITED", "field_sig": "public static final\u00a0MathContext UNLIMITED", "description": "A MathContext object whose settings have the values\n  required for unlimited precision arithmetic.\n  The values of the settings are:\n  \n  precision=0 roundingMode=HALF_UP\n  "}, {"field_name": "DECIMAL32", "field_sig": "public static final\u00a0MathContext DECIMAL32", "description": "A MathContext object with a precision setting\n  matching the IEEE 754R Decimal32 format, 7 digits, and a\n  rounding mode of HALF_EVEN, the\n  IEEE 754R default."}, {"field_name": "DECIMAL64", "field_sig": "public static final\u00a0MathContext DECIMAL64", "description": "A MathContext object with a precision setting\n  matching the IEEE 754R Decimal64 format, 16 digits, and a\n  rounding mode of HALF_EVEN, the\n  IEEE 754R default."}, {"field_name": "DECIMAL128", "field_sig": "public static final\u00a0MathContext DECIMAL128", "description": "A MathContext object with a precision setting\n  matching the IEEE 754R Decimal128 format, 34 digits, and a\n  rounding mode of HALF_EVEN, the\n  IEEE 754R default."}], "methods": [{"method_name": "getPrecision", "method_sig": "public int getPrecision()", "description": "Returns the precision setting.\n This value is always non-negative."}, {"method_name": "getRoundingMode", "method_sig": "public RoundingMode getRoundingMode()", "description": "Returns the roundingMode setting.\n This will be one of\n RoundingMode.CEILING,\n RoundingMode.DOWN,\n RoundingMode.FLOOR,\n RoundingMode.HALF_DOWN,\n RoundingMode.HALF_EVEN,\n RoundingMode.HALF_UP,\n RoundingMode.UNNECESSARY, or\n RoundingMode.UP."}, {"method_name": "equals", "method_sig": "public boolean equals (Object x)", "description": "Compares this MathContext with the specified\n Object for equality."}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Returns the hash code for this MathContext."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns the string representation of this MathContext.\n The String returned represents the settings of the\n MathContext object as two space-delimited words\n (separated by a single space character, '\\u0020',\n and with no leading or trailing white space), as follows:\n \n\n The string \"precision=\", immediately followed\n by the value of the precision setting as a numeric string as if\n generated by the Integer.toString\n method.\n\n \n The string \"roundingMode=\", immediately\n followed by the value of the roundingMode setting as a\n word.  This word will be the same as the name of the\n corresponding public constant in the RoundingMode\n enum.\n \n\n For example:\n \n precision=9 roundingMode=HALF_UP\n \n\n Additional words may be appended to the result of\n toString in the future if more properties are added to\n this class."}]}