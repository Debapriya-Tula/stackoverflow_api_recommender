{"name": "Class Patch", "module": "java.desktop", "package": "javax.sound.midi", "text": "A Patch object represents a location, on a MIDI synthesizer, into\n which a single instrument is stored (loaded). Every Instrument object\n has its own Patch object that specifies the memory location into\n which that instrument should be loaded. The location is specified abstractly\n by a bank index and a program number (not by any scheme that directly refers\n to a specific address or offset in RAM). This is a hierarchical indexing\n scheme: MIDI provides for up to 16384 banks, each of which contains up to 128\n program locations. For example, a minimal sort of synthesizer might have only\n one bank of instruments, and only 32 instruments (programs) in that bank.\n \n To select what instrument should play the notes on a particular MIDI channel,\n two kinds of MIDI message are used that specify a patch location: a\n bank-select command, and a program-change channel command. The Java Sound\n equivalent is the\n programChange(int, int) method of\n MidiChannel.", "codes": ["public class Patch\nextends Object"], "fields": [], "methods": [{"method_name": "getBank", "method_sig": "public int getBank()", "description": "Returns the number of the bank that contains the instrument whose\n location this Patch specifies."}, {"method_name": "getProgram", "method_sig": "public int getProgram()", "description": "Returns the index, within a bank, of the instrument whose location this\n Patch specifies."}]}