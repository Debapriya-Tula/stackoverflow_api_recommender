{"name": "Interface MethodDoc", "module": "jdk.javadoc", "package": "com.sun.javadoc", "text": "Represents a method of a java class.", "codes": ["@Deprecated(since=\"9\",\n            forRemoval=true)\npublic interface MethodDoc\nextends ExecutableMemberDoc"], "fields": [], "methods": [{"method_name": "isAbstract", "method_sig": "boolean isAbstract()", "description": "Return true if this method is abstract"}, {"method_name": "isDefault", "method_sig": "boolean isDefault()", "description": "Return true if this method is default"}, {"method_name": "returnType", "method_sig": "Type returnType()", "description": "Get return type."}, {"method_name": "overriddenClass", "method_sig": "ClassDoc overriddenClass()", "description": "Return the class containing the method that this method overrides.\n\n  The overriddenClass method cannot\n accommodate certain generic type constructs.  The\n overriddenType method should be used instead."}, {"method_name": "overriddenType", "method_sig": "Type overriddenType()", "description": "Return the type containing the method that this method overrides.\n It may be a ClassDoc or a ParameterizedType."}, {"method_name": "overriddenMethod", "method_sig": "MethodDoc overriddenMethod()", "description": "Return the method that this method overrides."}, {"method_name": "overrides", "method_sig": "boolean overrides (MethodDoc meth)", "description": "Tests whether this method overrides another.\n The overridden method may be one declared in a superclass or\n a superinterface (unlike overriddenMethod()).\n\n  When a non-abstract method overrides an abstract one, it is\n also said to implement the other."}]}