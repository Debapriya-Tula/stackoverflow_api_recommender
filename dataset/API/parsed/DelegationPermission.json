{"name": "Class DelegationPermission", "module": "java.security.jgss", "package": "javax.security.auth.kerberos", "text": "This class is used to restrict the usage of the Kerberos\n delegation model, ie: forwardable and proxiable tickets.\n \n The target name of this Permission specifies a pair of\n kerberos service principals. The first is the subordinate service principal\n being entrusted to use the TGT. The second service principal designates\n the target service the subordinate service principal is to\n interact with on behalf of the initiating KerberosPrincipal. This\n latter service principal is specified to restrict the use of a\n proxiable ticket.\n \n For example, to specify the \"host\" service use of a forwardable TGT the\n target permission is specified as follows:\n\n \n  DelegationPermission(\"\\\"host/foo.example.com@EXAMPLE.COM\\\" \\\"krbtgt/EXAMPLE.COM@EXAMPLE.COM\\\"\");\n \n\n To give the \"backup\" service a proxiable nfs service ticket the target permission\n might be specified:\n\n \n  DelegationPermission(\"\\\"backup/bar.example.com@EXAMPLE.COM\\\" \\\"nfs/home.EXAMPLE.COM@EXAMPLE.COM\\\"\");\n ", "codes": ["public final class DelegationPermission\nextends BasicPermission\nimplements Serializable"], "fields": [], "methods": [{"method_name": "implies", "method_sig": "public boolean implies (Permission p)", "description": "Checks if this Kerberos delegation permission object \"implies\" the\n specified permission.\n \n This method returns true if this DelegationPermission\n is equal to p, and returns false otherwise."}, {"method_name": "equals", "method_sig": "public boolean equals (Object obj)", "description": "Checks two DelegationPermission objects for equality."}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Returns the hash code value for this object."}, {"method_name": "newPermissionCollection", "method_sig": "public PermissionCollection newPermissionCollection()", "description": "Returns a PermissionCollection object for storing\n DelegationPermission objects.\n \n DelegationPermission objects must be stored in a manner that\n allows them to be inserted into the collection in any order, but\n that also enables the PermissionCollection implies method to\n be implemented in an efficient (and consistent) manner."}]}