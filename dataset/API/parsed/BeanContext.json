{"name": "Interface BeanContext", "module": "java.desktop", "package": "java.beans.beancontext", "text": "\n The BeanContext acts a logical hierarchical container for JavaBeans.\n ", "codes": ["public interface BeanContext\nextends BeanContextChild, Collection, DesignMode, Visibility"], "fields": [{"field_name": "globalHierarchyLock", "field_sig": "static final\u00a0Object globalHierarchyLock", "description": "This global lock is used by both BeanContext\n and BeanContextServices implementors\n to serialize changes in a BeanContext\n hierarchy and any service requests etc."}], "methods": [{"method_name": "instantiateChild", "method_sig": "Object instantiateChild (String beanName)\n                 throws IOException,\n                        ClassNotFoundException", "description": "Instantiate the javaBean named as a\n child of this BeanContext.\n The implementation of the JavaBean is\n derived from the value of the beanName parameter,\n and is defined by the\n java.beans.Beans.instantiate() method."}, {"method_name": "getResourceAsStream", "method_sig": "InputStream getResourceAsStream (String name,\n                                BeanContextChild bcc)\n                         throws IllegalArgumentException", "description": "Analagous to java.lang.ClassLoader.getResourceAsStream(),\n this method allows a BeanContext implementation\n to interpose behavior between the child Component\n and underlying ClassLoader."}, {"method_name": "getResource", "method_sig": "URL getResource (String name,\n                BeanContextChild bcc)\n         throws IllegalArgumentException", "description": "Analagous to java.lang.ClassLoader.getResource(), this\n method allows a BeanContext implementation to interpose\n behavior between the child Component\n and underlying ClassLoader."}, {"method_name": "addBeanContextMembershipListener", "method_sig": "void addBeanContextMembershipListener (BeanContextMembershipListener bcml)", "description": "Adds the specified BeanContextMembershipListener\n to receive BeanContextMembershipEvents from\n this BeanContext whenever it adds\n or removes a child Component(s)."}, {"method_name": "removeBeanContextMembershipListener", "method_sig": "void removeBeanContextMembershipListener (BeanContextMembershipListener bcml)", "description": "Removes the specified BeanContextMembershipListener\n so that it no longer receives BeanContextMembershipEvents\n when the child Component(s) are added or removed."}]}