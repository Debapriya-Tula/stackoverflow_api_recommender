{"name": "Class AreaAveragingScaleFilter", "module": "java.desktop", "package": "java.awt.image", "text": "An ImageFilter class for scaling images using a simple area averaging\n algorithm that produces smoother results than the nearest neighbor\n algorithm.\n This class extends the basic ImageFilter Class to scale an existing\n image and provide a source for a new image containing the resampled\n image.  The pixels in the source image are blended to produce pixels\n for an image of the specified size.  The blending process is analogous\n to scaling up the source image to a multiple of the destination size\n using pixel replication and then scaling it back down to the destination\n size by simply averaging all the pixels in the supersized image that\n fall within a given pixel of the destination image.  If the data from\n the source is not delivered in TopDownLeftRight order then the filter\n will back off to a simple pixel replication behavior and utilize the\n requestTopDownLeftRightResend() method to refilter the pixels in a\n better way at the end.\n It is meant to be used in conjunction with a FilteredImageSource\n object to produce scaled versions of existing images.  Due to\n implementation dependencies, there may be differences in pixel values\n of an image filtered on different platforms.", "codes": ["public class AreaAveragingScaleFilter\nextends ReplicateScaleFilter"], "fields": [], "methods": [{"method_name": "setHints", "method_sig": "public void setHints (int hints)", "description": "Detect if the data is being delivered with the necessary hints\n to allow the averaging algorithm to do its work.\n \n Note: This method is intended to be called by the\n ImageProducer of the Image whose\n pixels are being filtered.  Developers using\n this class to filter pixels from an image should avoid calling\n this method directly since that operation could interfere\n with the filtering operation."}, {"method_name": "setPixels", "method_sig": "public void setPixels (int x,\n                      int y,\n                      int w,\n                      int h,\n                      ColorModel model,\n                      byte[] pixels,\n                      int off,\n                      int scansize)", "description": "Combine the components for the delivered byte pixels into the\n accumulation arrays and send on any averaged data for rows of\n pixels that are complete.  If the correct hints were not\n specified in the setHints call then relay the work to our\n superclass which is capable of scaling pixels regardless of\n the delivery hints.\n \n Note: This method is intended to be called by the\n ImageProducer of the Image\n whose pixels are being filtered.  Developers using\n this class to filter pixels from an image should avoid calling\n this method directly since that operation could interfere\n with the filtering operation."}, {"method_name": "setPixels", "method_sig": "public void setPixels (int x,\n                      int y,\n                      int w,\n                      int h,\n                      ColorModel model,\n                      int[] pixels,\n                      int off,\n                      int scansize)", "description": "Combine the components for the delivered int pixels into the\n accumulation arrays and send on any averaged data for rows of\n pixels that are complete.  If the correct hints were not\n specified in the setHints call then relay the work to our\n superclass which is capable of scaling pixels regardless of\n the delivery hints.\n \n Note: This method is intended to be called by the\n ImageProducer of the Image\n whose pixels are being filtered.  Developers using\n this class to filter pixels from an image should avoid calling\n this method directly since that operation could interfere\n with the filtering operation."}]}