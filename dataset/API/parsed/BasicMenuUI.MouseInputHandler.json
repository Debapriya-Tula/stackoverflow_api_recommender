{"name": "Class BasicMenuUI.MouseInputHandler", "module": "java.desktop", "package": "javax.swing.plaf.basic", "text": "Instantiated and used by a menu item to handle the current menu selection\n from mouse events. A MouseInputHandler processes and forwards all mouse events\n to a shared instance of the MenuSelectionManager.\n \n This class is protected so that it can be subclassed by other look and\n feels to implement their own mouse handling behavior. All overridden\n methods should call the parent methods so that the menu selection\n is correct.", "codes": ["protected class BasicMenuUI.MouseInputHandler\nextends Object\nimplements MouseInputListener"], "fields": [], "methods": [{"method_name": "mousePressed", "method_sig": "public void mousePressed (MouseEvent e)", "description": "Invoked when the mouse has been clicked on the menu. This\n method clears or sets the selection path of the\n MenuSelectionManager."}, {"method_name": "mouseReleased", "method_sig": "public void mouseReleased (MouseEvent e)", "description": "Invoked when the mouse has been released on the menu. Delegates the\n mouse event to the MenuSelectionManager."}, {"method_name": "mouseEntered", "method_sig": "public void mouseEntered (MouseEvent e)", "description": "Invoked when the cursor enters the menu. This method sets the selected\n path for the MenuSelectionManager and handles the case\n in which a menu item is used to pop up an additional menu, as in a\n hierarchical menu system."}, {"method_name": "mouseDragged", "method_sig": "public void mouseDragged (MouseEvent e)", "description": "Invoked when a mouse button is pressed on the menu and then dragged.\n Delegates the mouse event to the MenuSelectionManager."}]}