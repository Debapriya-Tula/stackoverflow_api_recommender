{"name": "Interface IntUnaryOperator", "module": "java.base", "package": "java.util.function", "text": "Represents an operation on a single int-valued operand that produces\n an int-valued result.  This is the primitive type specialization of\n UnaryOperator for int.\n\n This is a functional interface\n whose functional method is applyAsInt(int).", "codes": ["@FunctionalInterface\npublic interface IntUnaryOperator"], "fields": [], "methods": [{"method_name": "applyAsInt", "method_sig": "int applyAsInt (int operand)", "description": "Applies this operator to the given operand."}, {"method_name": "compose", "method_sig": "default IntUnaryOperator compose (IntUnaryOperator before)", "description": "Returns a composed operator that first applies the before\n operator to its input, and then applies this operator to the result.\n If evaluation of either operator throws an exception, it is relayed to\n the caller of the composed operator."}, {"method_name": "andThen", "method_sig": "default IntUnaryOperator andThen (IntUnaryOperator after)", "description": "Returns a composed operator that first applies this operator to\n its input, and then applies the after operator to the result.\n If evaluation of either operator throws an exception, it is relayed to\n the caller of the composed operator."}, {"method_name": "identity", "method_sig": "static IntUnaryOperator identity()", "description": "Returns a unary operator that always returns its input argument."}]}