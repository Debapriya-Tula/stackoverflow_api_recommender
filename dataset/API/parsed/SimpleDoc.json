{"name": "Class SimpleDoc", "module": "java.desktop", "package": "javax.print", "text": "This class is an implementation of interface Doc that can be used in\n many common printing requests. It can handle all of the presently defined\n \"pre-defined\" doc flavors defined as static variables in the\n DocFlavor class.\n \n In particular this class implements certain required semantics of the\n Doc specification as follows:\n \nconstructs a stream for the service if requested and appropriate.\n   ensures the same object is returned for each call on a method.\n   ensures multiple threads can access the Doc\nperforms some validation of that the data matches the doc flavor.\n \n Clients who want to re-use the doc object in other jobs, or need a\n MultiDoc will not want to use this class.\n \n If the print data is a stream, or a print job requests data as a stream, then\n SimpleDoc does not monitor if the service properly closes the stream\n after data transfer completion or job termination. Clients may prefer to use\n provide their own implementation of doc that adds a listener to monitor job\n completion and to validate that resources such as streams are freed (ie\n closed).", "codes": ["public final class SimpleDoc\nextends Object\nimplements Doc"], "fields": [], "methods": [{"method_name": "getDocFlavor", "method_sig": "public DocFlavor getDocFlavor()", "description": "Determines the doc flavor in which this doc object will supply its piece\n of print data."}, {"method_name": "getAttributes", "method_sig": "public DocAttributeSet getAttributes()", "description": "Obtains the set of printing attributes for this doc object. If the\n returned attribute set includes an instance of a particular attribute\n X, the printer must use that attribute value for this doc,\n overriding any value of attribute X in the job's attribute set. If\n the returned attribute set does not include an instance of a particular\n attribute X or if null is returned, the printer must\n consult the job's attribute set to obtain the value for attribute\n X, and if not found there, the printer must use an\n implementation-dependent default value. The returned attribute set is\n unmodifiable."}, {"method_name": "getPrintData", "method_sig": "public Object getPrintData()\n                    throws IOException", "description": "Obtains the print data representation object that contains this doc\n object's piece of print data in the format corresponding to the supported\n doc flavor. The getPrintData() method returns an instance of the\n representation class whose name is given by getDocFlavor().getRepresentationClassName(), and the return value can be cast from\n class Object to that representation class."}, {"method_name": "getReaderForText", "method_sig": "public Reader getReaderForText()\n                        throws IOException", "description": "Obtains a reader for extracting character print data from this doc. The\n Doc implementation is required to support this method if the\n DocFlavor has one of the following print data representation\n classes, and return null otherwise:\n \nchar[]\njava.lang.String\njava.io.Reader\n\n The doc's print data representation object is used to construct and\n return a Reader for reading the print data as a stream of\n characters from the print data representation object. However, if the\n print data representation object is itself a Reader then the\n print data representation object is simply returned."}, {"method_name": "getStreamForBytes", "method_sig": "public InputStream getStreamForBytes()\n                              throws IOException", "description": "Obtains an input stream for extracting byte print data from this doc. The\n Doc implementation is required to support this method if the\n DocFlavor has one of the following print data representation\n classes; otherwise this method returns null:\n \nbyte[]\njava.io.InputStream\n\n The doc's print data representation object is obtained. Then, an input\n stream for reading the print data from the print data representation\n object as a stream of bytes is created and returned. However, if the\n print data representation object is itself an input stream then the print\n data representation object is simply returned."}]}