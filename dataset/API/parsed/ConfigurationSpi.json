{"name": "Class ConfigurationSpi", "module": "java.base", "package": "javax.security.auth.login", "text": "This class defines the Service Provider Interface (SPI)\n for the Configuration class.\n All the abstract methods in this class must be implemented by each\n service provider who wishes to supply a Configuration implementation.\n\n  Subclass implementations of this abstract class must provide\n a public constructor that takes a Configuration.Parameters\n object as an input parameter.  This constructor also must throw\n an IllegalArgumentException if it does not understand the\n Configuration.Parameters input.", "codes": ["public abstract class ConfigurationSpi\nextends Object"], "fields": [], "methods": [{"method_name": "engineGetAppConfigurationEntry", "method_sig": "protected abstract AppConfigurationEntry[] engineGetAppConfigurationEntry (String name)", "description": "Retrieve the AppConfigurationEntries for the specified name."}, {"method_name": "engineRefresh", "method_sig": "protected void engineRefresh()", "description": "Refresh and reload the Configuration.\n\n  This method causes this Configuration object to refresh/reload its\n contents in an implementation-dependent manner.\n For example, if this Configuration object stores its entries in a file,\n calling refresh may cause the file to be re-read.\n\n  The default implementation of this method does nothing.\n This method should be overridden if a refresh operation is supported\n by the implementation."}]}