{"name": "Interface Extension", "module": "java.base", "package": "java.security.cert", "text": "This interface represents an X.509 extension.\n\n \n Extensions provide a means of associating additional attributes with users\n or public keys and for managing a certification hierarchy.  The extension\n format also allows communities to define private extensions to carry\n information unique to those communities.\n\n \n Each extension contains an object identifier, a criticality setting\n indicating whether it is a critical or a non-critical extension, and\n and an ASN.1 DER-encoded value. Its ASN.1 definition is:\n\n \n\n     Extension ::= SEQUENCE {\n         extnId        OBJECT IDENTIFIER,\n         critical      BOOLEAN DEFAULT FALSE,\n         extnValue     OCTET STRING\n                 -- contains a DER encoding of a value\n                 -- of the type registered for use with\n                 -- the extnId object identifier value\n     }\n\n \n\n This interface is designed to provide access to a single extension,\n unlike X509Extension which is more suitable\n for accessing a set of extensions.", "codes": ["public interface Extension"], "fields": [], "methods": [{"method_name": "getId", "method_sig": "String getId()", "description": "Gets the extensions's object identifier."}, {"method_name": "isCritical", "method_sig": "boolean isCritical()", "description": "Gets the extension's criticality setting."}, {"method_name": "getValue", "method_sig": "byte[] getValue()", "description": "Gets the extensions's DER-encoded value. Note, this is the bytes\n that are encoded as an OCTET STRING. It does not include the OCTET\n STRING tag and length."}, {"method_name": "encode", "method_sig": "void encode (OutputStream out)\n     throws IOException", "description": "Generates the extension's DER encoding and writes it to the output\n stream."}]}