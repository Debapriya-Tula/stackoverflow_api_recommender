{"name": "Class HttpHeaders", "module": "java.net.http", "package": "java.net.http", "text": "A read-only view of a set of HTTP headers.\n\n  An HttpHeaders is not typically created directly, but rather\n returned from an HttpRequest or an\n HttpResponse. Specific HTTP headers can be\n set for a request through one of the request\n builder's headers methods.\n\n  The methods of this class ( that accept a String header name ), and the\n Map returned by the map method, operate without regard\n to case when retrieving the header value(s).\n\n  An HTTP header name may appear more than once in the HTTP protocol. As\n such, headers are represented as a name and a list of values. Each occurrence\n of a header value is added verbatim, to the appropriate header name list,\n without interpreting its value. In particular, HttpHeaders does not\n perform any splitting or joining of comma separated header value strings. The\n order of elements in a header value list is preserved when building a request. For\n responses, the order of elements in a header value list is the order in which\n they were received. The Map returned by the map method,\n however, does not provide any guarantee with regard to the ordering of its\n entries.\n\n  HttpHeaders instances are immutable.", "codes": ["public final class HttpHeaders\nextends Object"], "fields": [], "methods": [{"method_name": "firstValue", "method_sig": "public Optional<String> firstValue (String name)", "description": "Returns an Optional containing the first header string value of\n the given named (and possibly multi-valued) header. If the header is not\n present, then the returned Optional is empty."}, {"method_name": "firstValueAsLong", "method_sig": "public OptionalLong firstValueAsLong (String name)", "description": "Returns an OptionalLong containing the first header string value\n of the named header field. If the header is not present, then the\n Optional is empty. If the header is present but contains a value that\n does not parse as a Long value, then an exception is thrown."}, {"method_name": "allValues", "method_sig": "public List<String> allValues (String name)", "description": "Returns an unmodifiable List of all of the header string values of the\n given named header. Always returns a List, which may be empty if the\n header is not present."}, {"method_name": "map", "method_sig": "public Map<String, List<String>> map()", "description": "Returns an unmodifiable multi Map view of this HttpHeaders."}, {"method_name": "equals", "method_sig": "public final boolean equals (Object obj)", "description": "Tests this HTTP headers instance for equality with the given object.\n\n  If the given object is not an HttpHeaders then this\n method returns false. Two HTTP headers are equal if each\n of their corresponding maps are equal.\n\n  This method satisfies the general contract of the Object.equals method."}, {"method_name": "hashCode", "method_sig": "public final int hashCode()", "description": "Computes a hash code for this HTTP headers instance.\n\n  The hash code is based upon the components of the HTTP headers\n map, and satisfies the general contract of the\n Object.hashCode method."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns this HTTP headers as a string."}, {"method_name": "of", "method_sig": "public static HttpHeaders of (Map<String, List<String>> headerMap,\n                             BiPredicate<String, String> filter)", "description": "Returns an HTTP headers from the given map. The given map's key\n represents the header name, and its value the list of string header\n values for that header name.\n\n  An HTTP header name may appear more than once in the HTTP protocol.\n Such, multi-valued, headers must be represented by a single entry\n in the given map, whose entry value is a list that represents the\n multiple header string values. Leading and trailing whitespaces are\n removed from all string values retrieved from the given map and its lists\n before processing. Only headers that, after filtering, contain at least\n one, possibly empty string, value will be added to the HTTP headers."}]}