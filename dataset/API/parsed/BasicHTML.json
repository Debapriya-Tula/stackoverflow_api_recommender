{"name": "Class BasicHTML", "module": "java.desktop", "package": "javax.swing.plaf.basic", "text": "Support for providing html views for the swing components.\n This translates a simple html string to a javax.swing.text.View\n implementation that can render the html and provide the necessary\n layout semantics.", "codes": ["public class BasicHTML\nextends Object"], "fields": [{"field_name": "propertyKey", "field_sig": "public static final\u00a0String propertyKey", "description": "Key to use for the html renderer when stored as a\n client property of a JComponent."}, {"field_name": "documentBaseKey", "field_sig": "public static final\u00a0String documentBaseKey", "description": "Key stored as a client property to indicate the base that relative\n references are resolved against. For example, lets say you keep\n your images in the directory resources relative to the code path,\n you would use the following the set the base:\n \n   jComponent.putClientProperty(documentBaseKey,\n                                xxx.class.getResource(\"resources/\"));\n "}], "methods": [{"method_name": "createHTMLView", "method_sig": "public static View createHTMLView (JComponent c,\n                                  String html)", "description": "Create an html renderer for the given component and\n string of html."}, {"method_name": "getHTMLBaseline", "method_sig": "public static int getHTMLBaseline (View view,\n                                  int w,\n                                  int h)", "description": "Returns the baseline for the html renderer."}, {"method_name": "isHTMLString", "method_sig": "public static boolean isHTMLString (String s)", "description": "Check the given string to see if it should trigger the\n html rendering logic in a non-text component that supports\n html rendering."}, {"method_name": "updateRenderer", "method_sig": "public static void updateRenderer (JComponent c,\n                                  String text)", "description": "Stash the HTML render for the given text into the client\n properties of the given JComponent. If the given text is\n NOT HTML the property will be cleared of any\n renderer.\n \n This method is useful for ComponentUI implementations\n that are static (i.e. shared) and get their state\n entirely from the JComponent."}]}