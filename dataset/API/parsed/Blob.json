{"name": "Interface Blob", "module": "java.sql", "package": "java.sql", "text": "The representation (mapping) in\n the Java\u2122 programming language of an SQL\n BLOB value.  An SQL BLOB is a built-in type\n that stores a Binary Large Object as a column value in a row of\n a database table. By default drivers implement Blob using\n an SQL locator(BLOB), which means that a\n Blob object contains a logical pointer to the\n SQL BLOB data rather than the data itself.\n A Blob object is valid for the duration of the\n transaction in which is was created.\n\n Methods in the interfaces ResultSet,\n CallableStatement, and PreparedStatement, such as\n getBlob and setBlob allow a programmer to\n access an SQL BLOB value.\n The Blob interface provides methods for getting the\n length of an SQL BLOB (Binary Large Object) value,\n for materializing a BLOB value on the client, and for\n determining the position of a pattern of bytes within a\n BLOB value. In addition, this interface has methods for updating\n a BLOB value.\n \n All methods on the Blob interface must be fully implemented if the\n JDBC driver supports the data type.", "codes": ["public interface Blob"], "fields": [], "methods": [{"method_name": "length", "method_sig": "long length()\n     throws SQLException", "description": "Returns the number of bytes in the BLOB value\n designated by this Blob object."}, {"method_name": "getBytes", "method_sig": "byte[] getBytes (long pos,\n                int length)\n         throws SQLException", "description": "Retrieves all or part of the BLOB\n value that this Blob object represents, as an array of\n bytes.  This byte array contains up to length\n consecutive bytes starting at position pos."}, {"method_name": "getBinaryStream", "method_sig": "InputStream getBinaryStream()\n                     throws SQLException", "description": "Retrieves the BLOB value designated by this\n Blob instance as a stream."}, {"method_name": "position", "method_sig": "long position (byte[] pattern,\n              long start)\n       throws SQLException", "description": "Retrieves the byte position at which the specified byte array\n pattern begins within the BLOB\n value that this Blob object represents.\n The search for pattern begins at position\n start."}, {"method_name": "position", "method_sig": "long position (Blob pattern,\n              long start)\n       throws SQLException", "description": "Retrieves the byte position in the BLOB value\n designated by this Blob object at which\n pattern begins.  The search begins at position\n start."}, {"method_name": "setBytes", "method_sig": "int setBytes (long pos,\n             byte[] bytes)\n      throws SQLException", "description": "Writes the given array of bytes to the BLOB value that\n this Blob object represents, starting at position\n pos, and returns the number of bytes written.\n The array of bytes will overwrite the existing bytes\n in the Blob object starting at the position\n pos.  If the end of the Blob value is reached\n while writing the array of bytes, then the length of the Blob\n value will be increased to accommodate the extra bytes.\n \nNote: If the value specified for pos\n is greater than the length+1 of the BLOB value then the\n behavior is undefined. Some JDBC drivers may throw an\n SQLException while other drivers may support this\n operation."}, {"method_name": "setBytes", "method_sig": "int setBytes (long pos,\n             byte[] bytes,\n             int offset,\n             int len)\n      throws SQLException", "description": "Writes all or part of the given byte array to the\n BLOB value that this Blob object represents\n and returns the number of bytes written.\n Writing starts at position pos in the BLOB\n value; len bytes from the given byte array are written.\n The array of bytes will overwrite the existing bytes\n in the Blob object starting at the position\n pos.  If the end of the Blob value is reached\n while writing the array of bytes, then the length of the Blob\n value will be increased to accommodate the extra bytes.\n \nNote: If the value specified for pos\n is greater than the length+1 of the BLOB value then the\n behavior is undefined. Some JDBC drivers may throw an\n SQLException while other drivers may support this\n operation."}, {"method_name": "setBinaryStream", "method_sig": "OutputStream setBinaryStream (long pos)\n                      throws SQLException", "description": "Retrieves a stream that can be used to write to the BLOB\n value that this Blob object represents.  The stream begins\n at position pos.\n The  bytes written to the stream will overwrite the existing bytes\n in the Blob object starting at the position\n pos.  If the end of the Blob value is reached\n while writing to the stream, then the length of the Blob\n value will be increased to accommodate the extra bytes.\n \nNote: If the value specified for pos\n is greater than the length+1 of the BLOB value then the\n behavior is undefined. Some JDBC drivers may throw an\n SQLException while other drivers may support this\n operation."}, {"method_name": "truncate", "method_sig": "void truncate (long len)\n       throws SQLException", "description": "Truncates the BLOB value that this Blob\n object represents to be len bytes in length.\n \nNote: If the value specified for pos\n is greater than the length+1 of the BLOB value then the\n behavior is undefined. Some JDBC drivers may throw an\n SQLException while other drivers may support this\n operation."}, {"method_name": "free", "method_sig": "void free()\n   throws SQLException", "description": "This method frees the Blob object and releases the resources that\n it holds. The object is invalid once the free\n method is called.\n \n After free has been called, any attempt to invoke a\n method other than free will result in an SQLException\n being thrown.  If free is called multiple times, the subsequent\n calls to free are treated as a no-op."}, {"method_name": "getBinaryStream", "method_sig": "InputStream getBinaryStream (long pos,\n                            long length)\n                     throws SQLException", "description": "Returns an InputStream object that contains\n a partial Blob value, starting with the byte\n specified by pos, which is length bytes in length."}]}