{"name": "Class ScriptEngineManager", "module": "java.scripting", "package": "javax.script", "text": "The ScriptEngineManager implements a discovery and instantiation\n mechanism for ScriptEngine classes and also maintains a\n collection of key/value pairs storing state shared by all engines created\n by the Manager. This class uses the service provider mechanism described in the\n ServiceLoader class to enumerate all the\n implementations of ScriptEngineFactory. \n The ScriptEngineManager provides a method to return a list of all these factories\n as well as utility methods which look up factories on the basis of language name, file extension\n and mime type.\n \n The Bindings of key/value pairs, referred to as the \"Global Scope\"  maintained\n by the manager is available to all instances of ScriptEngine created\n by the ScriptEngineManager.  The values in the Bindings are\n generally exposed in all scripts.", "codes": ["public class ScriptEngineManager\nextends Object"], "fields": [], "methods": [{"method_name": "setBindings", "method_sig": "public void setBindings (Bindings bindings)", "description": "setBindings stores the specified Bindings\n in the globalScope field. ScriptEngineManager sets this\n Bindings as global bindings for ScriptEngine\n objects created by it."}, {"method_name": "getBindings", "method_sig": "public Bindings getBindings()", "description": "getBindings returns the value of the globalScope field.\n ScriptEngineManager sets this Bindings as global bindings for\n ScriptEngine objects created by it."}, {"method_name": "put", "method_sig": "public void put (String key,\n                Object value)", "description": "Sets the specified key/value pair in the Global Scope."}, {"method_name": "get", "method_sig": "public Object get (String key)", "description": "Gets the value for the specified key in the Global Scope"}, {"method_name": "getEngineByName", "method_sig": "public ScriptEngine getEngineByName (String shortName)", "description": "Looks up and creates a ScriptEngine for a given  name.\n The algorithm first searches for a ScriptEngineFactory that has been\n registered as a handler for the specified name using the registerEngineName\n method.\n  If one is not found, it searches the set of ScriptEngineFactory instances\n stored by the constructor for one with the specified name.  If a ScriptEngineFactory\n is found by either method, it is used to create instance of ScriptEngine."}, {"method_name": "getEngineByExtension", "method_sig": "public ScriptEngine getEngineByExtension (String extension)", "description": "Look up and create a ScriptEngine for a given extension.  The algorithm\n used by getEngineByName is used except that the search starts\n by looking for a ScriptEngineFactory registered to handle the\n given extension using registerEngineExtension."}, {"method_name": "getEngineByMimeType", "method_sig": "public ScriptEngine getEngineByMimeType (String mimeType)", "description": "Look up and create a ScriptEngine for a given mime type.  The algorithm\n used by getEngineByName is used except that the search starts\n by looking for a ScriptEngineFactory registered to handle the\n given mime type using registerEngineMimeType."}, {"method_name": "getEngineFactories", "method_sig": "public List<ScriptEngineFactory> getEngineFactories()", "description": "Returns a list whose elements are instances of all the ScriptEngineFactory classes\n found by the discovery mechanism."}, {"method_name": "registerEngineName", "method_sig": "public void registerEngineName (String name,\n                               ScriptEngineFactory factory)", "description": "Registers a ScriptEngineFactory to handle a language\n name.  Overrides any such association found using the Discovery mechanism."}, {"method_name": "registerEngineMimeType", "method_sig": "public void registerEngineMimeType (String type,\n                                   ScriptEngineFactory factory)", "description": "Registers a ScriptEngineFactory to handle a mime type.\n Overrides any such association found using the Discovery mechanism."}, {"method_name": "registerEngineExtension", "method_sig": "public void registerEngineExtension (String extension,\n                                    ScriptEngineFactory factory)", "description": "Registers a ScriptEngineFactory to handle an extension.\n Overrides any such association found using the Discovery mechanism."}]}