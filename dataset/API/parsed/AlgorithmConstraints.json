{"name": "Interface AlgorithmConstraints", "module": "java.base", "package": "java.security", "text": "This interface specifies constraints for cryptographic algorithms,\n keys (key sizes), and other algorithm parameters.\n \nAlgorithmConstraints objects are immutable.  An implementation\n of this interface should not provide methods that can change the state\n of an instance once it has been created.\n \n Note that AlgorithmConstraints can be used to represent the\n restrictions described by the security properties\n jdk.certpath.disabledAlgorithms and\n jdk.tls.disabledAlgorithms, or could be used by a\n concrete PKIXCertPathChecker to check whether a specified\n certificate in the certification path contains the required algorithm\n constraints.", "codes": ["public interface AlgorithmConstraints"], "fields": [], "methods": [{"method_name": "permits", "method_sig": "boolean permits (Set<CryptoPrimitive> primitives,\n                String algorithm,\n                AlgorithmParameters parameters)", "description": "Determines whether an algorithm is granted permission for the\n specified cryptographic primitives."}, {"method_name": "permits", "method_sig": "boolean permits (Set<CryptoPrimitive> primitives,\n                Key key)", "description": "Determines whether a key is granted permission for the specified\n cryptographic primitives.\n \n This method is usually used to check key size and key usage."}, {"method_name": "permits", "method_sig": "boolean permits (Set<CryptoPrimitive> primitives,\n                String algorithm,\n                Key key,\n                AlgorithmParameters parameters)", "description": "Determines whether an algorithm and the corresponding key are granted\n permission for the specified cryptographic primitives."}]}