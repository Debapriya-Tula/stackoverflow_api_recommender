{"name": "Class StringContent", "module": "java.desktop", "package": "javax.swing.text", "text": "An implementation of the AbstractDocument.Content interface that is\n a brute force implementation that is useful for relatively small\n documents and/or debugging.  It manages the character content\n as a simple character array.  It is also quite inefficient.\n \n It is generally recommended that the gap buffer or piece table\n implementations be used instead.  This buffer does not scale up\n to large sizes.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["public final class StringContent\nextends Object\nimplements AbstractDocument.Content, Serializable"], "fields": [], "methods": [{"method_name": "length", "method_sig": "public int length()", "description": "Returns the length of the content."}, {"method_name": "insertString", "method_sig": "public UndoableEdit insertString (int where,\n                                 String str)\n                          throws BadLocationException", "description": "Inserts a string into the content."}, {"method_name": "remove", "method_sig": "public UndoableEdit remove (int where,\n                           int nitems)\n                    throws BadLocationException", "description": "Removes part of the content.  where + nitems must be < length()."}, {"method_name": "getString", "method_sig": "public String getString (int where,\n                        int len)\n                 throws BadLocationException", "description": "Retrieves a portion of the content.  where + len must be <= length()."}, {"method_name": "getChars", "method_sig": "public void getChars (int where,\n                     int len,\n                     Segment chars)\n              throws BadLocationException", "description": "Retrieves a portion of the content.  where + len must be <= length()"}, {"method_name": "createPosition", "method_sig": "public Position createPosition (int offset)\n                        throws BadLocationException", "description": "Creates a position within the content that will\n track change as the content is mutated."}, {"method_name": "getPositionsInRange", "method_sig": "protected Vector getPositionsInRange (Vector v,\n                                     int offset,\n                                     int length)", "description": "Returns a Vector containing instances of UndoPosRef for the\n Positions in the range\n offset to offset + length.\n If v is not null the matching Positions are placed in\n there. The vector with the resulting Positions are returned.\n \n This is meant for internal usage, and is generally not of interest\n to subclasses."}, {"method_name": "updateUndoPositions", "method_sig": "protected void updateUndoPositions (Vector positions)", "description": "Resets the location for all the UndoPosRef instances\n in positions.\n \n This is meant for internal usage, and is generally not of interest\n to subclasses."}]}