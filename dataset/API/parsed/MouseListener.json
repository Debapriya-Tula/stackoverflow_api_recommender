{"name": "Interface MouseListener", "module": "java.desktop", "package": "java.awt.event", "text": "The listener interface for receiving \"interesting\" mouse events\n (press, release, click, enter, and exit) on a component.\n (To track mouse moves and mouse drags, use the\n MouseMotionListener.)\n \n The class that is interested in processing a mouse event\n either implements this interface (and all the methods it\n contains) or extends the abstract MouseAdapter class\n (overriding only the methods of interest).\n \n The listener object created from that class is then registered with a\n component using the component's addMouseListener\n method. A mouse event is generated when the mouse is pressed, released\n clicked (pressed and released). A mouse event is also generated when\n the mouse cursor enters or leaves a component. When a mouse event\n occurs, the relevant method in the listener object is invoked, and\n the MouseEvent is passed to it.", "codes": ["public interface MouseListener\nextends EventListener"], "fields": [], "methods": [{"method_name": "mouseClicked", "method_sig": "void mouseClicked (MouseEvent e)", "description": "Invoked when the mouse button has been clicked (pressed\n and released) on a component."}, {"method_name": "mousePressed", "method_sig": "void mousePressed (MouseEvent e)", "description": "Invoked when a mouse button has been pressed on a component."}, {"method_name": "mouseReleased", "method_sig": "void mouseReleased (MouseEvent e)", "description": "Invoked when a mouse button has been released on a component."}, {"method_name": "mouseEntered", "method_sig": "void mouseEntered (MouseEvent e)", "description": "Invoked when the mouse enters a component."}, {"method_name": "mouseExited", "method_sig": "void mouseExited (MouseEvent e)", "description": "Invoked when the mouse exits a component."}]}