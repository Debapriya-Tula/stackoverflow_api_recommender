{"name": "Class AncestorEvent", "module": "java.desktop", "package": "javax.swing.event", "text": "An event reported to a child component that originated from an\n ancestor in the component hierarchy.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["public class AncestorEvent\nextends AWTEvent"], "fields": [{"field_name": "ANCESTOR_ADDED", "field_sig": "public static final\u00a0int ANCESTOR_ADDED", "description": "An ancestor-component was added to the hierarchy of\n visible objects (made visible), and is currently being displayed."}, {"field_name": "ANCESTOR_REMOVED", "field_sig": "public static final\u00a0int ANCESTOR_REMOVED", "description": "An ancestor-component was removed from the hierarchy\n of visible objects (hidden) and is no longer being displayed."}, {"field_name": "ANCESTOR_MOVED", "field_sig": "public static final\u00a0int ANCESTOR_MOVED", "description": "An ancestor-component changed its position on the screen."}], "methods": [{"method_name": "getAncestor", "method_sig": "public Container getAncestor()", "description": "Returns the ancestor that the event actually occurred on."}, {"method_name": "getAncestorParent", "method_sig": "public Container getAncestorParent()", "description": "Returns the parent of the ancestor the event actually occurred on.\n This is most interesting in an ANCESTOR_REMOVED event, as\n the ancestor may no longer be in the component hierarchy."}, {"method_name": "getComponent", "method_sig": "public JComponent getComponent()", "description": "Returns the component that the listener was added to."}]}