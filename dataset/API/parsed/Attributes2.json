{"name": "Interface Attributes2", "module": "java.xml", "package": "org.xml.sax.ext", "text": "SAX2 extension to augment the per-attribute information\n provided though Attributes.\n If an implementation supports this extension, the attributes\n provided in ContentHandler.startElement()  will implement this interface,\n and the http://xml.org/sax/features/use-attributes2\n feature flag will have the value true.\n\n \nThis module, both source code and documentation, is in the\n Public Domain, and comes with NO WARRANTY.\n\n XMLReader implementations are not required to support this\n information, and it is not part of core-only SAX2 distributions.\nNote that if an attribute was defaulted (!isSpecified())\n it will of necessity also have been declared (isDeclared())\n in the DTD.\n Similarly if an attribute's type is anything except CDATA, then it\n must have been declared.\n ", "codes": ["public interface Attributes2\nextends Attributes"], "fields": [], "methods": [{"method_name": "isDeclared", "method_sig": "boolean isDeclared (int index)", "description": "Returns false unless the attribute was declared in the DTD.\n This helps distinguish two kinds of attributes that SAX reports\n as CDATA:  ones that were declared (and hence are usually valid),\n and those that were not (and which are never valid)."}, {"method_name": "isDeclared", "method_sig": "boolean isDeclared (String qName)", "description": "Returns false unless the attribute was declared in the DTD.\n This helps distinguish two kinds of attributes that SAX reports\n as CDATA:  ones that were declared (and hence are usually valid),\n and those that were not (and which are never valid)."}, {"method_name": "isDeclared", "method_sig": "boolean isDeclared (String uri,\n                   String localName)", "description": "Returns false unless the attribute was declared in the DTD.\n This helps distinguish two kinds of attributes that SAX reports\n as CDATA:  ones that were declared (and hence are usually valid),\n and those that were not (and which are never valid).\n\n Remember that since DTDs do not \"understand\" namespaces, the\n namespace URI associated with an attribute may not have come from\n the DTD.  The declaration will have applied to the attribute's\n qName."}, {"method_name": "isSpecified", "method_sig": "boolean isSpecified (int index)", "description": "Returns true unless the attribute value was provided\n by DTD defaulting."}, {"method_name": "isSpecified", "method_sig": "boolean isSpecified (String uri,\n                    String localName)", "description": "Returns true unless the attribute value was provided\n by DTD defaulting.\n\n Remember that since DTDs do not \"understand\" namespaces, the\n namespace URI associated with an attribute may not have come from\n the DTD.  The declaration will have applied to the attribute's\n qName."}, {"method_name": "isSpecified", "method_sig": "boolean isSpecified (String qName)", "description": "Returns true unless the attribute value was provided\n by DTD defaulting."}]}