{"name": "Class SimpleAnnotationValueVisitor8<R,\u200bP>", "module": "java.compiler", "package": "javax.lang.model.util", "text": "A simple visitor for annotation values with default behavior\n appropriate for the RELEASE_8\n source version.  Visit methods call defaultAction passing their arguments to defaultAction's\n corresponding parameters.\n\n  Methods in this class may be overridden subject to their\n general contract.  Note that annotating methods in concrete\n subclasses with @Override will help\n ensure that methods are overridden as intended.\n\n  WARNING: The AnnotationValueVisitor interface\n implemented by this class may have methods added to it in the\n future to accommodate new, currently unknown, language structures\n added to future versions of the Java\u2122 programming language.\n Therefore, methods whose names begin with \"visit\" may be\n added to this class in the future; to avoid incompatibilities,\n classes which extend this class should not declare any instance\n methods with names beginning with \"visit\".\n\n When such a new visit method is added, the default\n implementation in this class will be to call the visitUnknown method.  A new simple annotation\n value visitor class will also be introduced to correspond to the\n new language level; this visitor will have different default\n behavior for the visit method in question.  When the new visitor is\n introduced, all or portions of this visitor may be deprecated.", "codes": ["@SupportedSourceVersion(RELEASE_8)\npublic class SimpleAnnotationValueVisitor8<R, P>\nextends SimpleAnnotationValueVisitor7<R, P>"], "fields": [], "methods": []}