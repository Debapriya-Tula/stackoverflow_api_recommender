{"name": "Class ColorType", "module": "java.desktop", "package": "javax.swing.plaf.synth", "text": "A typesafe enumeration of colors that can be fetched from a style.\n \n Each SynthStyle has a set of ColorTypes that\n are accessed by way of the\n SynthStyle.getColor(SynthContext, ColorType) method.\n SynthStyle's installDefaults will install\n the FOREGROUND color\n as the foreground of\n the Component, and the BACKGROUND color to the background of\n the component (assuming that you have not explicitly specified a\n foreground and background color). Some components\n support more color based properties, for\n example JList has the property\n selectionForeground which will be mapped to\n FOREGROUND with a component state of\n SynthConstants.SELECTED.\n \n The following example shows a custom SynthStyle that returns\n a red Color for the DISABLED state, otherwise a black color.\n \n class MyStyle extends SynthStyle {\n     private Color disabledColor = new ColorUIResource(Color.RED);\n     private Color color = new ColorUIResource(Color.BLACK);\n     protected Color getColorForState(SynthContext context, ColorType type){\n         if (context.getComponentState() == SynthConstants.DISABLED) {\n             return disabledColor;\n         }\n         return color;\n     }\n }\n ", "codes": ["public class ColorType\nextends Object"], "fields": [{"field_name": "FOREGROUND", "field_sig": "public static final\u00a0ColorType FOREGROUND", "description": "ColorType for the foreground of a region."}, {"field_name": "BACKGROUND", "field_sig": "public static final\u00a0ColorType BACKGROUND", "description": "ColorType for the background of a region."}, {"field_name": "TEXT_FOREGROUND", "field_sig": "public static final\u00a0ColorType TEXT_FOREGROUND", "description": "ColorType for the foreground of a region."}, {"field_name": "TEXT_BACKGROUND", "field_sig": "public static final\u00a0ColorType TEXT_BACKGROUND", "description": "ColorType for the background of a region."}, {"field_name": "FOCUS", "field_sig": "public static final\u00a0ColorType FOCUS", "description": "ColorType for the focus."}, {"field_name": "MAX_COUNT", "field_sig": "public static final\u00a0int MAX_COUNT", "description": "Maximum number of ColorTypes."}], "methods": [{"method_name": "getID", "method_sig": "public final int getID()", "description": "Returns a unique id, as an integer, for this ColorType."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns the textual description of this ColorType.\n This is the same value that the ColorType was created\n with."}]}