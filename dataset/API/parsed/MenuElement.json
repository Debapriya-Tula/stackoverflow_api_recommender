{"name": "Interface MenuElement", "module": "java.desktop", "package": "javax.swing", "text": "Any component that can be placed into a menu should implement this interface.\n This interface is used by MenuSelectionManager\n to handle selection and navigation in menu hierarchies.", "codes": ["public interface MenuElement"], "fields": [], "methods": [{"method_name": "processMouseEvent", "method_sig": "void processMouseEvent (MouseEvent event,\n                       MenuElement[] path,\n                       MenuSelectionManager manager)", "description": "Processes a mouse event. event is a MouseEvent with\n source being the receiving element's component. path is the\n path of the receiving element in the menu hierarchy including the\n receiving element itself. manager is the\n MenuSelectionManagerfor the menu hierarchy. This method should\n process the MouseEvent and change the menu selection if necessary\n by using MenuSelectionManager's API Note: you do not have to\n forward the event to sub-components. This is done automatically by the\n MenuSelectionManager."}, {"method_name": "processKeyEvent", "method_sig": "void processKeyEvent (KeyEvent event,\n                     MenuElement[] path,\n                     MenuSelectionManager manager)", "description": "Process a key event."}, {"method_name": "menuSelectionChanged", "method_sig": "void menuSelectionChanged (boolean isIncluded)", "description": "Call by the MenuSelectionManager when the MenuElement is\n added or removed from the menu selection."}, {"method_name": "getSubElements", "method_sig": "MenuElement[] getSubElements()", "description": "This method should return an array containing the sub-elements for the\n receiving menu element."}, {"method_name": "getComponent", "method_sig": "Component getComponent()", "description": "This method should return the java.awt.Component used to paint the\n receiving element. The returned component will be used to convert events\n and detect if an event is inside a MenuElement's component."}]}