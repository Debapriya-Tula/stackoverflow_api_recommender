{"name": "Interface Spliterator.OfPrimitive<T,\u200bT_CONS,\u200bT_SPLITR extends Spliterator.OfPrimitive<T,\u200bT_CONS,\u200bT_SPLITR>>", "module": "java.base", "package": "java.util", "text": "A Spliterator specialized for primitive values.", "codes": ["public static interface Spliterator.OfPrimitive<T, T_CONS, T_SPLITR extends Spliterator.OfPrimitive<T, T_CONS, T_SPLITR>>\nextends Spliterator<T>"], "fields": [], "methods": [{"method_name": "tryAdvance", "method_sig": "boolean tryAdvance (T_CONS action)", "description": "If a remaining element exists, performs the given action on it,\n returning true; else returns false.  If this\n Spliterator is Spliterator.ORDERED the action is performed on the\n next element in encounter order.  Exceptions thrown by the\n action are relayed to the caller."}, {"method_name": "forEachRemaining", "method_sig": "default void forEachRemaining (T_CONS action)", "description": "Performs the given action for each remaining element, sequentially in\n the current thread, until all elements have been processed or the\n action throws an exception.  If this Spliterator is Spliterator.ORDERED,\n actions are performed in encounter order.  Exceptions thrown by the\n action are relayed to the caller."}]}