{"name": "Class OpenMBeanAttributeInfoSupport", "module": "java.management", "package": "javax.management.openmbean", "text": "Describes an attribute of an open MBean.", "codes": ["public class OpenMBeanAttributeInfoSupport\nextends MBeanAttributeInfo\nimplements OpenMBeanAttributeInfo"], "fields": [], "methods": [{"method_name": "getOpenType", "method_sig": "public OpenType<?> getOpenType()", "description": "Returns the open type for the values of the attribute described\n by this OpenMBeanAttributeInfoSupport instance."}, {"method_name": "getDefaultValue", "method_sig": "public Object getDefaultValue()", "description": "Returns the default value for the attribute described by this\n OpenMBeanAttributeInfoSupport instance, if specified,\n or null otherwise."}, {"method_name": "getLegalValues", "method_sig": "public Set<?> getLegalValues()", "description": "Returns an unmodifiable Set of legal values for the attribute\n described by this OpenMBeanAttributeInfoSupport\n instance, if specified, or null otherwise."}, {"method_name": "getMinValue", "method_sig": "public Comparable<?> getMinValue()", "description": "Returns the minimal value for the attribute described by this\n OpenMBeanAttributeInfoSupport instance, if specified,\n or null otherwise."}, {"method_name": "getMaxValue", "method_sig": "public Comparable<?> getMaxValue()", "description": "Returns the maximal value for the attribute described by this\n OpenMBeanAttributeInfoSupport instance, if specified,\n or null otherwise."}, {"method_name": "hasDefaultValue", "method_sig": "public boolean hasDefaultValue()", "description": "Returns true if this \n OpenMBeanAttributeInfoSupport instance specifies a non-null\n default value for the described attribute, false\n otherwise."}, {"method_name": "hasLegalValues", "method_sig": "public boolean hasLegalValues()", "description": "Returns true if this \n OpenMBeanAttributeInfoSupport instance specifies a non-null\n set of legal values for the described attribute, false\n otherwise."}, {"method_name": "hasMinValue", "method_sig": "public boolean hasMinValue()", "description": "Returns true if this \n OpenMBeanAttributeInfoSupport instance specifies a non-null\n minimal value for the described attribute, false\n otherwise."}, {"method_name": "hasMaxValue", "method_sig": "public boolean hasMaxValue()", "description": "Returns true if this \n OpenMBeanAttributeInfoSupport instance specifies a non-null\n maximal value for the described attribute, false\n otherwise."}, {"method_name": "isValue", "method_sig": "public boolean isValue (Object obj)", "description": "Tests whether obj is a valid value for the attribute\n described by this OpenMBeanAttributeInfoSupport\n instance."}, {"method_name": "equals", "method_sig": "public boolean equals (Object obj)", "description": "Compares the specified obj parameter with this \n OpenMBeanAttributeInfoSupport instance for equality.\n \n Returns true if and only if all of the following statements are true:\n \nobj is non null,\nobj also implements the OpenMBeanAttributeInfo interface,\ntheir names are equal\ntheir open types are equal\ntheir access properties (isReadable, isWritable and isIs) are equal\ntheir default, min, max and legal values are equal.\n\n This ensures that this equals method works properly for\n obj parameters which are different implementations of\n the OpenMBeanAttributeInfo interface.\n\n If obj also implements DescriptorRead, then its\n getDescriptor() method must\n also return the same value as for this object."}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Returns the hash code value for this \n OpenMBeanAttributeInfoSupport instance.\nThe hash code of an OpenMBeanAttributeInfoSupport\n instance is the sum of the hash codes of all elements of\n information used in equals comparisons (ie: its name,\n its open type, its default, min, max and legal\n values, and its Descriptor).\n\n This ensures that t1.equals(t2) implies that \n t1.hashCode()==t2.hashCode() for any two \n OpenMBeanAttributeInfoSupport instances t1 and \n t2, as required by the general contract of the method Object.hashCode().\n\n However, note that another instance of a class implementing\n the OpenMBeanAttributeInfo interface may be equal to\n this OpenMBeanAttributeInfoSupport instance as defined\n by equals(java.lang.Object), but may have a different\n hash code if it is calculated differently.\n\n As OpenMBeanAttributeInfoSupport instances are\n immutable, the hash code for this instance is calculated once,\n on the first call to hashCode, and then the same value\n is returned for subsequent calls."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns a string representation of this\n OpenMBeanAttributeInfoSupport instance.\n \n The string representation consists of the name of this class (i.e.\n javax.management.openmbean.OpenMBeanAttributeInfoSupport),\n the string representation of the name and open type of the\n described parameter, the string representation of its\n default, min, max and legal values and the string\n representation of its descriptor.\n\n As OpenMBeanAttributeInfoSupport instances are\n immutable, the string representation for this instance is\n calculated once, on the first call to toString, and\n then the same value is returned for subsequent calls."}]}