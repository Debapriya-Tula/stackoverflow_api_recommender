{"name": "Interface UserDataHandler", "module": "java.xml", "package": "org.w3c.dom", "text": "When associating an object to a key on a node using\n Node.setUserData() the application can provide a handler\n that gets called when the node the object is associated to is being\n cloned, imported, or renamed. This can be used by the application to\n implement various behaviors regarding the data it associates to the DOM\n nodes. This interface defines that handler.\n See also the Document Object Model (DOM) Level 3 Core Specification.", "codes": ["public interface UserDataHandler"], "fields": [{"field_name": "NODE_CLONED", "field_sig": "static final\u00a0short NODE_CLONED", "description": "The node is cloned, using Node.cloneNode()."}, {"field_name": "NODE_IMPORTED", "field_sig": "static final\u00a0short NODE_IMPORTED", "description": "The node is imported, using Document.importNode()."}, {"field_name": "NODE_DELETED", "field_sig": "static final\u00a0short NODE_DELETED", "description": "The node is deleted.\n Note: This may not be supported or may not be reliable in\n certain environments, such as Java, where the implementation has no\n real control over when objects are actually deleted."}, {"field_name": "NODE_RENAMED", "field_sig": "static final\u00a0short NODE_RENAMED", "description": "The node is renamed, using Document.renameNode()."}, {"field_name": "NODE_ADOPTED", "field_sig": "static final\u00a0short NODE_ADOPTED", "description": "The node is adopted, using Document.adoptNode()."}], "methods": [{"method_name": "handle", "method_sig": "void handle (short operation,\n            String key,\n            Object data,\n            Node src,\n            Node dst)", "description": "This method is called whenever the node for which this handler is\n registered is imported or cloned.\n  DOM applications must not raise exceptions in a\n UserDataHandler. The effect of throwing exceptions from\n the handler is DOM implementation dependent."}]}