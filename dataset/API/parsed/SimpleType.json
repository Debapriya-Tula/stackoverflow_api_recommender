{"name": "Class SimpleType<T>", "module": "java.management", "package": "javax.management.openmbean", "text": "The SimpleType class is the open type class whose instances describe\n all open data values which are neither arrays,\n nor CompositeData values,\n nor TabularData values.\n It predefines all its possible instances as static fields, and has no public constructor.\n \n Given a SimpleType instance describing values whose Java class name is className,\n the internal fields corresponding to the name and description of this SimpleType instance\n are also set to className.\n In other words, its methods getClassName, getTypeName and getDescription\n all return the same string value className.", "codes": ["public final class SimpleType<T>\nextends OpenType<T>"], "fields": [{"field_name": "VOID", "field_sig": "public static final\u00a0SimpleType<Void> VOID", "description": "The SimpleType instance describing values whose\n Java class name is java.lang.Void."}, {"field_name": "BOOLEAN", "field_sig": "public static final\u00a0SimpleType<Boolean> BOOLEAN", "description": "The SimpleType instance describing values whose\n Java class name is java.lang.Boolean."}, {"field_name": "CHARACTER", "field_sig": "public static final\u00a0SimpleType<Character> CHARACTER", "description": "The SimpleType instance describing values whose\n Java class name is java.lang.Character."}, {"field_name": "BYTE", "field_sig": "public static final\u00a0SimpleType<Byte> BYTE", "description": "The SimpleType instance describing values whose\n Java class name is java.lang.Byte."}, {"field_name": "SHORT", "field_sig": "public static final\u00a0SimpleType<Short> SHORT", "description": "The SimpleType instance describing values whose\n Java class name is java.lang.Short."}, {"field_name": "INTEGER", "field_sig": "public static final\u00a0SimpleType<Integer> INTEGER", "description": "The SimpleType instance describing values whose\n Java class name is java.lang.Integer."}, {"field_name": "LONG", "field_sig": "public static final\u00a0SimpleType<Long> LONG", "description": "The SimpleType instance describing values whose\n Java class name is java.lang.Long."}, {"field_name": "FLOAT", "field_sig": "public static final\u00a0SimpleType<Float> FLOAT", "description": "The SimpleType instance describing values whose\n Java class name is java.lang.Float."}, {"field_name": "DOUBLE", "field_sig": "public static final\u00a0SimpleType<Double> DOUBLE", "description": "The SimpleType instance describing values whose\n Java class name is java.lang.Double."}, {"field_name": "STRING", "field_sig": "public static final\u00a0SimpleType<String> STRING", "description": "The SimpleType instance describing values whose\n Java class name is java.lang.String."}, {"field_name": "BIGDECIMAL", "field_sig": "public static final\u00a0SimpleType<BigDecimal> BIGDECIMAL", "description": "The SimpleType instance describing values whose\n Java class name is java.math.BigDecimal."}, {"field_name": "BIGINTEGER", "field_sig": "public static final\u00a0SimpleType<BigInteger> BIGINTEGER", "description": "The SimpleType instance describing values whose\n Java class name is java.math.BigInteger."}, {"field_name": "DATE", "field_sig": "public static final\u00a0SimpleType<Date> DATE", "description": "The SimpleType instance describing values whose\n Java class name is java.util.Date."}, {"field_name": "OBJECTNAME", "field_sig": "public static final\u00a0SimpleType<ObjectName> OBJECTNAME", "description": "The SimpleType instance describing values whose\n Java class name is javax.management.ObjectName."}], "methods": [{"method_name": "isValue", "method_sig": "public boolean isValue (Object obj)", "description": "Tests whether obj is a value for this\n SimpleType instance.   This method returns\n true if and only if obj is not null and\n obj's class name is the same as the className field\n defined for this SimpleType instance (ie the class\n name returned by the getClassName method)."}, {"method_name": "equals", "method_sig": "public boolean equals (Object obj)", "description": "Compares the specified obj parameter with this SimpleType instance for equality.\n \n Two SimpleType instances are equal if and only if their\n getClassName methods return the same value."}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Returns the hash code value for this SimpleType instance.\n The hash code of a SimpleType instance is the hash code of\n the string value returned by the getClassName method.\n \n As SimpleType instances are immutable, the hash code for this instance is calculated once,\n on the first call to hashCode, and then the same value is returned for subsequent calls."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns a string representation of this SimpleType instance.\n \n The string representation consists of\n the name of this class (ie javax.management.openmbean.SimpleType) and the type name\n for this instance (which is the java class name of the values this SimpleType instance represents).\n \n As SimpleType instances are immutable, the string representation for this instance is calculated once,\n on the first call to toString, and then the same value is returned for subsequent calls."}, {"method_name": "readResolve", "method_sig": "public Object readResolve()\n                   throws ObjectStreamException", "description": "Replace an object read from an ObjectInputStream with the unique instance for that\n value."}]}