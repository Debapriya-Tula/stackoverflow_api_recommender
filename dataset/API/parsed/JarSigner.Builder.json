{"name": "Class JarSigner.Builder", "module": "jdk.jartool", "package": "jdk.security.jarsigner", "text": "A mutable builder class that can create an immutable JarSigner\n from various signing-related parameters.", "codes": ["public static class JarSigner.Builder\nextends Object"], "fields": [], "methods": [{"method_name": "digestAlgorithm", "method_sig": "public JarSigner.Builder digestAlgorithm (String algorithm)\n                                  throws NoSuchAlgorithmException", "description": "Sets the digest algorithm. If no digest algorithm is specified,\n the default algorithm returned by getDefaultDigestAlgorithm()\n will be used."}, {"method_name": "digestAlgorithm", "method_sig": "public JarSigner.Builder digestAlgorithm (String algorithm,\n                                         Provider provider)\n                                  throws NoSuchAlgorithmException", "description": "Sets the digest algorithm from the specified provider.\n If no digest algorithm is specified, the default algorithm\n returned by getDefaultDigestAlgorithm() will be used."}, {"method_name": "signatureAlgorithm", "method_sig": "public JarSigner.Builder signatureAlgorithm (String algorithm)\n                                     throws NoSuchAlgorithmException", "description": "Sets the signature algorithm. If no signature algorithm\n is specified, the default signature algorithm returned by\n getDefaultSignatureAlgorithm(java.security.PrivateKey) for the private key\n will be used."}, {"method_name": "signatureAlgorithm", "method_sig": "public JarSigner.Builder signatureAlgorithm (String algorithm,\n                                            Provider provider)\n                                     throws NoSuchAlgorithmException", "description": "Sets the signature algorithm from the specified provider. If no\n signature algorithm is specified, the default signature algorithm\n returned by getDefaultSignatureAlgorithm(java.security.PrivateKey) for the private\n key will be used."}, {"method_name": "tsa", "method_sig": "public JarSigner.Builder tsa (URI uri)", "description": "Sets the URI of the Time Stamping Authority (TSA)."}, {"method_name": "signerName", "method_sig": "public JarSigner.Builder signerName (String name)", "description": "Sets the signer name. The name will be used as the base name for\n the signature files. All lowercase characters will be converted to\n uppercase for signature file names. If a signer name is not\n specified, the string \"SIGNER\" will be used."}, {"method_name": "eventHandler", "method_sig": "public JarSigner.Builder eventHandler (BiConsumer<String, String> handler)", "description": "Sets en event handler that will be triggered when a JarEntry\n is to be added, signed, or updated during the signing process.\n \n The handler can be used to display signing progress. The first\n argument of the handler can be \"adding\", \"signing\", or \"updating\",\n and the second argument is the name of the JarEntry\n being processed."}, {"method_name": "setProperty", "method_sig": "public JarSigner.Builder setProperty (String key,\n                                     String value)", "description": "Sets an additional implementation-specific property indicated by\n the specified key."}, {"method_name": "getDefaultDigestAlgorithm", "method_sig": "public static String getDefaultDigestAlgorithm()", "description": "Gets the default digest algorithm."}, {"method_name": "getDefaultSignatureAlgorithm", "method_sig": "public static String getDefaultSignatureAlgorithm (PrivateKey key)", "description": "Gets the default signature algorithm for a private key.\n For example, SHA256withRSA for a 2048-bit RSA key, and\n SHA384withECDSA for a 384-bit EC key."}, {"method_name": "build", "method_sig": "public JarSigner build()", "description": "Builds a JarSigner object from the parameters set by the\n setter methods.\n \n This method does not modify internal state of this Builder\n object and can be called multiple times to generate multiple\n JarSigner objects. After this method is called, calling\n any method on this Builder will have no effect on\n the newly built JarSigner object."}]}