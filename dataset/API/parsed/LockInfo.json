{"name": "Class LockInfo", "module": "java.management", "package": "java.lang.management", "text": "Information about a lock.  A lock can be a built-in object monitor,\n an ownable synchronizer, or the Condition\n object associated with synchronizers.\n \nAn ownable synchronizer is\n a synchronizer that may be exclusively owned by a thread and uses\n AbstractOwnableSynchronizer\n (or its subclass) to implement its synchronization property.\n ReentrantLock and the write-lock (but not\n the read-lock) of ReentrantReadWriteLock are\n two examples of ownable synchronizers provided by the platform.\n\n MXBean Mapping\nLockInfo is mapped to a CompositeData\n as specified in the from method.", "codes": ["public class LockInfo\nextends Object"], "fields": [], "methods": [{"method_name": "getClassName", "method_sig": "public String getClassName()", "description": "Returns the fully qualified name of the class of the lock object."}, {"method_name": "getIdentityHashCode", "method_sig": "public int getIdentityHashCode()", "description": "Returns the identity hash code of the lock object\n returned from the System.identityHashCode(java.lang.Object) method."}, {"method_name": "from", "method_sig": "public static LockInfo from (CompositeData cd)", "description": "Returns a LockInfo object represented by the\n given CompositeData.\n The given CompositeData must contain the following attributes:\n \nThe attributes and the types the given CompositeData contains\n\n\nAttribute Name\nType\n\n\n\n\nclassName\njava.lang.String\n\n\nidentityHashCode\njava.lang.Integer\n\n\n"}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns a string representation of a lock.  The returned\n string representation consists of the name of the class of the\n lock object, the at-sign character `@', and the unsigned\n hexadecimal representation of the identity hash code\n of the object.  This method returns a string equals to the value of:\n \n\n lock.getClass().getName() + '@' + Integer.toHexString(System.identityHashCode(lock))\n \n where lock is the lock object."}]}