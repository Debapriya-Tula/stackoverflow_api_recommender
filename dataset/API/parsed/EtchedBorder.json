{"name": "Class EtchedBorder", "module": "java.desktop", "package": "javax.swing.border", "text": "A class which implements a simple etched border which can\n either be etched-in or etched-out.  If no highlight/shadow\n colors are initialized when the border is created, then\n these colors will be dynamically derived from the background\n color of the component argument passed into the paintBorder()\n method.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["public class EtchedBorder\nextends AbstractBorder"], "fields": [{"field_name": "RAISED", "field_sig": "public static final\u00a0int RAISED", "description": "Raised etched type."}, {"field_name": "LOWERED", "field_sig": "public static final\u00a0int LOWERED", "description": "Lowered etched type."}, {"field_name": "etchType", "field_sig": "protected\u00a0int etchType", "description": "The type of etch to be drawn by the border."}, {"field_name": "highlight", "field_sig": "protected\u00a0Color highlight", "description": "The color to use for the etched highlight."}, {"field_name": "shadow", "field_sig": "protected\u00a0Color shadow", "description": "The color to use for the etched shadow."}], "methods": [{"method_name": "paintBorder", "method_sig": "public void paintBorder (Component c,\n                        Graphics g,\n                        int x,\n                        int y,\n                        int width,\n                        int height)", "description": "Paints the border for the specified component with the\n specified position and size."}, {"method_name": "getBorderInsets", "method_sig": "public Insets getBorderInsets (Component c,\n                              Insets insets)", "description": "Reinitialize the insets parameter with this Border's current Insets."}, {"method_name": "isBorderOpaque", "method_sig": "public boolean isBorderOpaque()", "description": "Returns whether or not the border is opaque.\n This implementation returns true."}, {"method_name": "getEtchType", "method_sig": "public int getEtchType()", "description": "Returns which etch-type is set on the etched border."}, {"method_name": "getHighlightColor", "method_sig": "public Color getHighlightColor (Component c)", "description": "Returns the highlight color of the etched border\n when rendered on the specified component.  If no highlight\n color was specified at instantiation, the highlight color\n is derived from the specified component's background color."}, {"method_name": "getHighlightColor", "method_sig": "public Color getHighlightColor()", "description": "Returns the highlight color of the etched border.\n Will return null if no highlight color was specified\n at instantiation."}, {"method_name": "getShadowColor", "method_sig": "public Color getShadowColor (Component c)", "description": "Returns the shadow color of the etched border\n when rendered on the specified component.  If no shadow\n color was specified at instantiation, the shadow color\n is derived from the specified component's background color."}, {"method_name": "getShadowColor", "method_sig": "public Color getShadowColor()", "description": "Returns the shadow color of the etched border.\n Will return null if no shadow color was specified\n at instantiation."}]}