{"name": "Class JPanel", "module": "java.desktop", "package": "javax.swing", "text": "JPanel is a generic lightweight container.\n For examples and task-oriented documentation for JPanel, see\n How to Use Panels,\n a section in The Java Tutorial.\n \nWarning: Swing is not thread safe. For more\n information see Swing's Threading\n Policy.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["@JavaBean(defaultProperty=\"UI\",\n          description=\"A generic lightweight container.\")\npublic class JPanel\nextends JComponent\nimplements Accessible"], "fields": [], "methods": [{"method_name": "updateUI", "method_sig": "public void updateUI()", "description": "Resets the UI property with a value from the current look and feel."}, {"method_name": "getUI", "method_sig": "public PanelUI getUI()", "description": "Returns the look and feel (L&F) object that renders this component."}, {"method_name": "setUI", "method_sig": "@BeanProperty(hidden=true,\n              visualUpdate=true,\n              description=\"The UI object that implements the Component\\'s LookAndFeel.\")\npublic void setUI (PanelUI ui)", "description": "Sets the look and feel (L&F) object that renders this component."}, {"method_name": "getUIClassID", "method_sig": "@BeanProperty(bound=false,\n              expert=true,\n              description=\"A string that specifies the name of the L&F class.\")\npublic String getUIClassID()", "description": "Returns a string that specifies the name of the L&F class\n that renders this component."}, {"method_name": "paramString", "method_sig": "protected String paramString()", "description": "Returns a string representation of this JPanel. This method\n is intended to be used only for debugging purposes, and the\n content and format of the returned string may vary between\n implementations. The returned string may be empty but may not\n be null."}, {"method_name": "getAccessibleContext", "method_sig": "@BeanProperty(bound=false)\npublic AccessibleContext getAccessibleContext()", "description": "Gets the AccessibleContext associated with this JPanel.\n For JPanels, the AccessibleContext takes the form of an\n AccessibleJPanel.\n A new AccessibleJPanel instance is created if necessary."}]}