{"name": "Class KeyManagerFactorySpi", "module": "java.base", "package": "javax.net.ssl", "text": "This class defines the Service Provider Interface (SPI)\n for the KeyManagerFactory class.\n\n  All the abstract methods in this class must be implemented by each\n cryptographic service provider who wishes to supply the implementation\n of a particular key manager factory.", "codes": ["public abstract class KeyManagerFactorySpi\nextends Object"], "fields": [], "methods": [{"method_name": "engineInit", "method_sig": "protected abstract void engineInit (KeyStore ks,\n                                   char[] password)\n                            throws KeyStoreException,\n                                   NoSuchAlgorithmException,\n                                   UnrecoverableKeyException", "description": "Initializes this factory with a source of key material."}, {"method_name": "engineInit", "method_sig": "protected abstract void engineInit (ManagerFactoryParameters spec)\n                            throws InvalidAlgorithmParameterException", "description": "Initializes this factory with a source of key material.\n \n In some cases, initialization parameters other than a keystore\n and password may be needed by a provider.  Users of that\n particular provider are expected to pass an implementation of\n the appropriate ManagerFactoryParameters as\n defined by the provider.  The provider can then call the\n specified methods in the ManagerFactoryParameters\n implementation to obtain the needed information."}, {"method_name": "engineGetKeyManagers", "method_sig": "protected abstract KeyManager[] engineGetKeyManagers()", "description": "Returns one key manager for each type of key material."}]}