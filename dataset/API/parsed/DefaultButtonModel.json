{"name": "Class DefaultButtonModel", "module": "java.desktop", "package": "javax.swing", "text": "The default implementation of a Button component's data model.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing. As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["public class DefaultButtonModel\nextends Object\nimplements ButtonModel, Serializable"], "fields": [{"field_name": "stateMask", "field_sig": "protected\u00a0int stateMask", "description": "The bitmask used to store the state of the button."}, {"field_name": "actionCommand", "field_sig": "protected\u00a0String actionCommand", "description": "The action command string fired by the button."}, {"field_name": "group", "field_sig": "protected\u00a0ButtonGroup group", "description": "The button group that the button belongs to."}, {"field_name": "mnemonic", "field_sig": "protected\u00a0int mnemonic", "description": "The button's mnemonic."}, {"field_name": "changeEvent", "field_sig": "protected transient\u00a0ChangeEvent changeEvent", "description": "Only one ChangeEvent is needed per button model\n instance since the event's only state is the source property.\n The source of events generated is always \"this\"."}, {"field_name": "listenerList", "field_sig": "protected\u00a0EventListenerList listenerList", "description": "Stores the listeners on this model."}, {"field_name": "ARMED", "field_sig": "public static final\u00a0int ARMED", "description": "Identifies the \"armed\" bit in the bitmask, which\n indicates partial commitment towards choosing/triggering\n the button."}, {"field_name": "SELECTED", "field_sig": "public static final\u00a0int SELECTED", "description": "Identifies the \"selected\" bit in the bitmask, which\n indicates that the button has been selected. Only needed for\n certain types of buttons - such as radio button or check box."}, {"field_name": "PRESSED", "field_sig": "public static final\u00a0int PRESSED", "description": "Identifies the \"pressed\" bit in the bitmask, which\n indicates that the button is pressed."}, {"field_name": "ENABLED", "field_sig": "public static final\u00a0int ENABLED", "description": "Identifies the \"enabled\" bit in the bitmask, which\n indicates that the button can be selected by\n an input device (such as a mouse pointer)."}, {"field_name": "ROLLOVER", "field_sig": "public static final\u00a0int ROLLOVER", "description": "Identifies the \"rollover\" bit in the bitmask, which\n indicates that the mouse is over the button."}], "methods": [{"method_name": "getChangeListeners", "method_sig": "public ChangeListener[] getChangeListeners()", "description": "Returns an array of all the change listeners\n registered on this DefaultButtonModel."}, {"method_name": "fireStateChanged", "method_sig": "protected void fireStateChanged()", "description": "Notifies all listeners that have registered interest for\n notification on this event type.  The event instance\n is created lazily."}, {"method_name": "getActionListeners", "method_sig": "public ActionListener[] getActionListeners()", "description": "Returns an array of all the action listeners\n registered on this DefaultButtonModel."}, {"method_name": "fireActionPerformed", "method_sig": "protected void fireActionPerformed (ActionEvent e)", "description": "Notifies all listeners that have registered interest for\n notification on this event type."}, {"method_name": "getItemListeners", "method_sig": "public ItemListener[] getItemListeners()", "description": "Returns an array of all the item listeners\n registered on this DefaultButtonModel."}, {"method_name": "fireItemStateChanged", "method_sig": "protected void fireItemStateChanged (ItemEvent e)", "description": "Notifies all listeners that have registered interest for\n notification on this event type."}, {"method_name": "getListeners", "method_sig": "public <T extends EventListener> T[] getListeners (Class<T> listenerType)", "description": "Returns an array of all the objects currently registered as\n FooListeners\n upon this model.\n FooListeners\n are registered using the addFooListener method.\n \n You can specify the listenerType argument\n with a class literal, such as FooListener.class.\n For example, you can query a DefaultButtonModel\n instance m\n for its action listeners\n with the following code:\n\n ActionListener[] als = (ActionListener[])(m.getListeners(ActionListener.class));\n\n If no such listeners exist,\n this method returns an empty array."}, {"method_name": "getSelectedObjects", "method_sig": "public Object[] getSelectedObjects()", "description": "Overridden to return null."}, {"method_name": "getGroup", "method_sig": "public ButtonGroup getGroup()", "description": "Returns the group that the button belongs to.\n Normally used with radio buttons, which are mutually\n exclusive within their group."}]}