{"name": "Interface Clob", "module": "java.sql", "package": "java.sql", "text": "The mapping in the Java\u2122 programming language\n for the SQL CLOB type.\n An SQL CLOB is a built-in type\n that stores a Character Large Object as a column value in a row of\n a database table.\n By default drivers implement a Clob object using an SQL\n locator(CLOB), which means that a Clob object\n contains a logical pointer to the SQL CLOB data rather than\n the data itself. A Clob object is valid for the duration\n of the transaction in which it was created.\n The Clob interface provides methods for getting the\n length of an SQL CLOB (Character Large Object) value,\n for materializing a CLOB value on the client, and for\n searching for a substring or CLOB object within a\n CLOB value.\n Methods in the interfaces ResultSet,\n CallableStatement, and PreparedStatement, such as\n getClob and setClob allow a programmer to\n access an SQL CLOB value.  In addition, this interface\n has methods for updating a CLOB value.\n \n All methods on the Clob interface must be\n fully implemented if the JDBC driver supports the data type.", "codes": ["public interface Clob"], "fields": [], "methods": [{"method_name": "length", "method_sig": "long length()\n     throws SQLException", "description": "Retrieves the number of characters\n in the CLOB value\n designated by this Clob object."}, {"method_name": "getSubString", "method_sig": "String getSubString (long pos,\n                    int length)\n             throws SQLException", "description": "Retrieves a copy of the specified substring\n in the CLOB value\n designated by this Clob object.\n The substring begins at position\n pos and has up to length consecutive\n characters."}, {"method_name": "getCharacterStream", "method_sig": "Reader getCharacterStream()\n                   throws SQLException", "description": "Retrieves the CLOB value designated by this Clob\n object as a java.io.Reader object (or as a stream of\n characters)."}, {"method_name": "getAsciiStream", "method_sig": "InputStream getAsciiStream()\n                    throws SQLException", "description": "Retrieves the CLOB value designated by this Clob\n object as an ascii stream."}, {"method_name": "position", "method_sig": "long position (String searchstr,\n              long start)\n       throws SQLException", "description": "Retrieves the character position at which the specified substring\n searchstr appears in the SQL CLOB value\n represented by this Clob object.  The search\n begins at position start."}, {"method_name": "position", "method_sig": "long position (Clob searchstr,\n              long start)\n       throws SQLException", "description": "Retrieves the character position at which the specified\n Clob object searchstr appears in this\n Clob object.  The search begins at position\n start."}, {"method_name": "setString", "method_sig": "int setString (long pos,\n              String str)\n       throws SQLException", "description": "Writes the given Java String to the CLOB\n value that this Clob object designates at the position\n pos. The string will overwrite the existing characters\n in the Clob object starting at the position\n pos.  If the end of the Clob value is reached\n while writing the given string, then the length of the Clob\n value will be increased to accommodate the extra characters.\n \nNote: If the value specified for pos\n is greater than the length+1 of the CLOB value then the\n behavior is undefined. Some JDBC drivers may throw an\n SQLException while other drivers may support this\n operation."}, {"method_name": "setString", "method_sig": "int setString (long pos,\n              String str,\n              int offset,\n              int len)\n       throws SQLException", "description": "Writes len characters of str, starting\n at character offset, to the CLOB value\n that this Clob represents.\n The string will overwrite the existing characters\n in the Clob object starting at the position\n pos.  If the end of the Clob value is reached\n while writing the given string, then the length of the Clob\n value will be increased to accommodate the extra characters.\n \nNote: If the value specified for pos\n is greater than the length+1 of the CLOB value then the\n behavior is undefined. Some JDBC drivers may throw an\n SQLException while other drivers may support this\n operation."}, {"method_name": "setAsciiStream", "method_sig": "OutputStream setAsciiStream (long pos)\n                     throws SQLException", "description": "Retrieves a stream to be used to write Ascii characters to the\n CLOB value that this Clob object represents,\n starting at position pos.  Characters written to the stream\n will overwrite the existing characters\n in the Clob object starting at the position\n pos.  If the end of the Clob value is reached\n while writing characters to the stream, then the length of the Clob\n value will be increased to accommodate the extra characters.\n \nNote: If the value specified for pos\n is greater than the length+1 of the CLOB value then the\n behavior is undefined. Some JDBC drivers may throw an\n SQLException while other drivers may support this\n operation."}, {"method_name": "setCharacterStream", "method_sig": "Writer setCharacterStream (long pos)\n                   throws SQLException", "description": "Retrieves a stream to be used to write a stream of Unicode characters\n to the CLOB value that this Clob object\n represents, at position pos. Characters written to the stream\n will overwrite the existing characters\n in the Clob object starting at the position\n pos.  If the end of the Clob value is reached\n while writing characters to the stream, then the length of the Clob\n value will be increased to accommodate the extra characters.\n \nNote: If the value specified for pos\n is greater than the length+1 of the CLOB value then the\n behavior is undefined. Some JDBC drivers may throw an\n SQLException while other drivers may support this\n operation."}, {"method_name": "truncate", "method_sig": "void truncate (long len)\n       throws SQLException", "description": "Truncates the CLOB value that this Clob\n designates to have a length of len\n characters.\n \nNote: If the value specified for pos\n is greater than the length+1 of the CLOB value then the\n behavior is undefined. Some JDBC drivers may throw an\n SQLException while other drivers may support this\n operation."}, {"method_name": "free", "method_sig": "void free()\n   throws SQLException", "description": "This method releases the resources that the Clob object\n holds.  The object is invalid once the free method\n is called.\n \n After free has been called, any attempt to invoke a\n method other than free will result in a SQLException\n being thrown.  If free is called multiple times, the subsequent\n calls to free are treated as a no-op."}, {"method_name": "getCharacterStream", "method_sig": "Reader getCharacterStream (long pos,\n                          long length)\n                   throws SQLException", "description": "Returns a Reader object that contains\n a partial Clob value, starting with the character\n specified by pos, which is length characters in length."}]}