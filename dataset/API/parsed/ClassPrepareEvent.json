{"name": "Interface ClassPrepareEvent", "module": "jdk.jdi", "package": "com.sun.jdi.event", "text": "Notification of a class prepare in the target VM. See the JVM\n specification for a definition of class preparation. Class prepare\n events are not generated for primitive classes (for example,\n java.lang.Integer.TYPE).", "codes": ["public interface ClassPrepareEvent\nextends Event"], "fields": [], "methods": [{"method_name": "thread", "method_sig": "ThreadReference thread()", "description": "Returns the thread in which this event has occurred.\n \n In rare cases, this event may occur in a debugger system\n thread within the target VM. Debugger threads take precautions\n to prevent these events, but they cannot be avoided under some\n conditions, especially for some subclasses of\n Error.\n If the event was generated by a debugger system thread, the\n value returned by this method is null, and if the requested\n suspend policy for the event was\n EventRequest.SUSPEND_EVENT_THREAD,\n all threads will be suspended instead, and the\n EventSet.suspendPolicy() will reflect this change.\n \n Note that the discussion above does not apply to system threads\n created by the target VM during its normal (non-debug) operation."}, {"method_name": "referenceType", "method_sig": "ReferenceType referenceType()", "description": "Returns the reference type for which this event was generated."}]}