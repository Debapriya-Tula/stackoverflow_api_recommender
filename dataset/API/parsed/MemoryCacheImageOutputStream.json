{"name": "Class MemoryCacheImageOutputStream", "module": "java.desktop", "package": "javax.imageio.stream", "text": "An implementation of ImageOutputStream that writes its\n output to a regular OutputStream.  A memory buffer is\n used to cache at least the data between the discard position and\n the current write position.  The only constructor takes an\n OutputStream, so this class may not be used for\n read/modify/write operations.  Reading can occur only on parts of\n the stream that have already been written to the cache and not\n yet flushed.", "codes": ["public class MemoryCacheImageOutputStream\nextends ImageOutputStreamImpl"], "fields": [], "methods": [{"method_name": "isCached", "method_sig": "public boolean isCached()", "description": "Returns true since this\n ImageOutputStream caches data in order to allow\n seeking backwards."}, {"method_name": "isCachedFile", "method_sig": "public boolean isCachedFile()", "description": "Returns false since this\n ImageOutputStream does not maintain a file cache."}, {"method_name": "isCachedMemory", "method_sig": "public boolean isCachedMemory()", "description": "Returns true since this\n ImageOutputStream maintains a main memory cache."}, {"method_name": "close", "method_sig": "public void close()\n           throws IOException", "description": "Closes this MemoryCacheImageOutputStream.  All\n pending data is flushed to the output, and the cache\n is released.  The destination OutputStream\n is not closed."}]}