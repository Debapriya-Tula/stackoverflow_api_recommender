{"name": "Interface ModuleElement", "module": "java.compiler", "package": "javax.lang.model.element", "text": "Represents a module program element.  Provides access to\n information about the module, its directives, and its members.", "codes": ["public interface ModuleElement\nextends Element, QualifiedNameable"], "fields": [], "methods": [{"method_name": "getQualifiedName", "method_sig": "Name getQualifiedName()", "description": "Returns the fully qualified name of this module.  For an\n unnamed module, an empty name is returned."}, {"method_name": "getSimpleName", "method_sig": "Name getSimpleName()", "description": "Returns the simple name of this module.  For an unnamed module, an empty name is returned."}, {"method_name": "getEnclosedElements", "method_sig": "List<? extends Element> getEnclosedElements()", "description": "Returns the packages within this module."}, {"method_name": "isOpen", "method_sig": "boolean isOpen()", "description": "Returns true if this is an open module and \n false otherwise."}, {"method_name": "isUnnamed", "method_sig": "boolean isUnnamed()", "description": "Returns true if this is an unnamed module and \n false otherwise."}, {"method_name": "getEnclosingElement", "method_sig": "Element getEnclosingElement()", "description": "Returns null since a module is not enclosed by another\n element."}, {"method_name": "getDirectives", "method_sig": "List<? extends ModuleElement.Directive> getDirectives()", "description": "Returns the directives contained in the declaration of this module."}]}