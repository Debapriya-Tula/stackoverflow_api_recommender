{"name": "Class TextComponent.AccessibleAWTTextComponent", "module": "java.desktop", "package": "java.awt", "text": "This class implements accessibility support for the\n TextComponent class.  It provides an implementation of the\n Java Accessibility API appropriate to text component user-interface\n elements.", "codes": ["protected class TextComponent.AccessibleAWTTextComponent\nextends Component.AccessibleAWTComponent\nimplements AccessibleText, TextListener"], "fields": [], "methods": [{"method_name": "textValueChanged", "method_sig": "public void textValueChanged (TextEvent textEvent)", "description": "TextListener notification of a text value change."}, {"method_name": "getAccessibleStateSet", "method_sig": "public AccessibleStateSet getAccessibleStateSet()", "description": "Gets the state set of the TextComponent.\n The AccessibleStateSet of an object is composed of a set of\n unique AccessibleStates.  A change in the AccessibleStateSet\n of an object will cause a PropertyChangeEvent to be fired\n for the AccessibleContext.ACCESSIBLE_STATE_PROPERTY property."}, {"method_name": "getAccessibleRole", "method_sig": "public AccessibleRole getAccessibleRole()", "description": "Gets the role of this object."}, {"method_name": "getAccessibleText", "method_sig": "public AccessibleText getAccessibleText()", "description": "Get the AccessibleText associated with this object.  In the\n implementation of the Java Accessibility API for this class,\n return this object, which is responsible for implementing the\n AccessibleText interface on behalf of itself."}, {"method_name": "getIndexAtPoint", "method_sig": "public int getIndexAtPoint (Point p)", "description": "Given a point in local coordinates, return the zero-based index\n of the character under that Point.  If the point is invalid,\n this method returns -1."}, {"method_name": "getCharacterBounds", "method_sig": "public Rectangle getCharacterBounds (int i)", "description": "Determines the bounding box of the character at the given\n index into the string.  The bounds are returned in local\n coordinates.  If the index is invalid a null rectangle\n is returned."}, {"method_name": "getCharCount", "method_sig": "public int getCharCount()", "description": "Returns the number of characters (valid indices)"}, {"method_name": "getCaretPosition", "method_sig": "public int getCaretPosition()", "description": "Returns the zero-based offset of the caret.\n\n Note: The character to the right of the caret will have the\n same index value as the offset (the caret is between\n two characters)."}, {"method_name": "getCharacterAttribute", "method_sig": "public AttributeSet getCharacterAttribute (int i)", "description": "Returns the AttributeSet for a given character (at a given index)."}, {"method_name": "getSelectionStart", "method_sig": "public int getSelectionStart()", "description": "Returns the start offset within the selected text.\n If there is no selection, but there is\n a caret, the start and end offsets will be the same.\n Return 0 if the text is empty, or the caret position\n if no selection."}, {"method_name": "getSelectionEnd", "method_sig": "public int getSelectionEnd()", "description": "Returns the end offset within the selected text.\n If there is no selection, but there is\n a caret, the start and end offsets will be the same.\n Return 0 if the text is empty, or the caret position\n if no selection."}, {"method_name": "getSelectedText", "method_sig": "public String getSelectedText()", "description": "Returns the portion of the text that is selected."}, {"method_name": "getAtIndex", "method_sig": "public String getAtIndex (int part,\n                         int index)", "description": "Returns the String at a given index."}, {"method_name": "getAfterIndex", "method_sig": "public String getAfterIndex (int part,\n                            int index)", "description": "Returns the String after a given index."}, {"method_name": "getBeforeIndex", "method_sig": "public String getBeforeIndex (int part,\n                             int index)", "description": "Returns the String before a given index."}]}