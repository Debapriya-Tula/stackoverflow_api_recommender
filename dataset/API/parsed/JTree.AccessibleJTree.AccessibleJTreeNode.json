{"name": "Class JTree.AccessibleJTree.AccessibleJTreeNode", "module": "java.desktop", "package": "javax.swing", "text": "This class implements accessibility support for the\n JTree child.  It provides an implementation of the\n Java Accessibility API appropriate to tree nodes.", "codes": ["protected class JTree.AccessibleJTree.AccessibleJTreeNode\nextends AccessibleContext\nimplements Accessible, AccessibleComponent, AccessibleSelection, AccessibleAction"], "fields": [], "methods": [{"method_name": "getAccessibleContext", "method_sig": "public AccessibleContext getAccessibleContext()", "description": "Get the AccessibleContext associated with this tree node.\n In the implementation of the Java Accessibility API for\n this class, return this object, which is its own\n AccessibleContext."}, {"method_name": "getAccessibleName", "method_sig": "public String getAccessibleName()", "description": "Get the accessible name of this object."}, {"method_name": "setAccessibleName", "method_sig": "public void setAccessibleName (String s)", "description": "Set the localized accessible name of this object."}, {"method_name": "getAccessibleDescription", "method_sig": "public String getAccessibleDescription()", "description": "Get the accessible description of this object."}, {"method_name": "setAccessibleDescription", "method_sig": "public void setAccessibleDescription (String s)", "description": "Set the accessible description of this object."}, {"method_name": "getAccessibleRole", "method_sig": "public AccessibleRole getAccessibleRole()", "description": "Get the role of this object."}, {"method_name": "getAccessibleStateSet", "method_sig": "public AccessibleStateSet getAccessibleStateSet()", "description": "Get the state set of this object."}, {"method_name": "getAccessibleParent", "method_sig": "public Accessible getAccessibleParent()", "description": "Get the Accessible parent of this object."}, {"method_name": "getAccessibleIndexInParent", "method_sig": "public int getAccessibleIndexInParent()", "description": "Get the index of this object in its accessible parent."}, {"method_name": "getAccessibleChildrenCount", "method_sig": "public int getAccessibleChildrenCount()", "description": "Returns the number of accessible children in the object."}, {"method_name": "getAccessibleChild", "method_sig": "public Accessible getAccessibleChild (int i)", "description": "Return the specified Accessible child of the object."}, {"method_name": "getLocale", "method_sig": "public Locale getLocale()", "description": "Gets the locale of the component. If the component does not have\n a locale, then the locale of its parent is returned."}, {"method_name": "addPropertyChangeListener", "method_sig": "public void addPropertyChangeListener (PropertyChangeListener l)", "description": "Add a PropertyChangeListener to the listener list.\n The listener is registered for all properties."}, {"method_name": "removePropertyChangeListener", "method_sig": "public void removePropertyChangeListener (PropertyChangeListener l)", "description": "Remove a PropertyChangeListener from the listener list.\n This removes a PropertyChangeListener that was registered\n for all properties."}, {"method_name": "getAccessibleAction", "method_sig": "public AccessibleAction getAccessibleAction()", "description": "Get the AccessibleAction associated with this object.  In the\n implementation of the Java Accessibility API for this class,\n return this object, which is responsible for implementing the\n AccessibleAction interface on behalf of itself."}, {"method_name": "getAccessibleComponent", "method_sig": "public AccessibleComponent getAccessibleComponent()", "description": "Get the AccessibleComponent associated with this object.  In the\n implementation of the Java Accessibility API for this class,\n return this object, which is responsible for implementing the\n AccessibleComponent interface on behalf of itself."}, {"method_name": "getAccessibleSelection", "method_sig": "public AccessibleSelection getAccessibleSelection()", "description": "Get the AccessibleSelection associated with this object if one\n exists.  Otherwise return null."}, {"method_name": "getAccessibleText", "method_sig": "public AccessibleText getAccessibleText()", "description": "Get the AccessibleText associated with this object if one\n exists.  Otherwise return null."}, {"method_name": "getAccessibleValue", "method_sig": "public AccessibleValue getAccessibleValue()", "description": "Get the AccessibleValue associated with this object if one\n exists.  Otherwise return null."}, {"method_name": "getBackground", "method_sig": "public Color getBackground()", "description": "Get the background color of this object."}, {"method_name": "setBackground", "method_sig": "public void setBackground (Color c)", "description": "Set the background color of this object."}, {"method_name": "getForeground", "method_sig": "public Color getForeground()", "description": "Get the foreground color of this object."}, {"method_name": "getLocationInJTree", "method_sig": "protected Point getLocationInJTree()", "description": "Returns the relative location of the node"}, {"method_name": "getAccessibleAt", "method_sig": "public Accessible getAccessibleAt (Point p)", "description": "Returns the Accessible child, if one exists,\n contained at the local coordinate Point.\n Otherwise returns null."}, {"method_name": "getAccessibleSelectionCount", "method_sig": "public int getAccessibleSelectionCount()", "description": "Returns the number of items currently selected.\n If no items are selected, the return value will be 0."}, {"method_name": "getAccessibleSelection", "method_sig": "public Accessible getAccessibleSelection (int i)", "description": "Returns an Accessible representing the specified selected item\n in the object.  If there isn't a selection, or there are\n fewer items selected than the integer passed in, the return\n value will be null."}, {"method_name": "isAccessibleChildSelected", "method_sig": "public boolean isAccessibleChildSelected (int i)", "description": "Returns true if the current child of this object is selected."}, {"method_name": "addAccessibleSelection", "method_sig": "public void addAccessibleSelection (int i)", "description": "Adds the specified selected item in the object to the object's\n selection.  If the object supports multiple selections,\n the specified item is added to any existing selection, otherwise\n it replaces any existing selection in the object.  If the\n specified item is already selected, this method has no effect."}, {"method_name": "removeAccessibleSelection", "method_sig": "public void removeAccessibleSelection (int i)", "description": "Removes the specified selected item in the object from the\n object's\n selection.  If the specified item isn't currently selected, this\n method has no effect."}, {"method_name": "clearAccessibleSelection", "method_sig": "public void clearAccessibleSelection()", "description": "Clears the selection in the object, so that nothing in the\n object is selected."}, {"method_name": "selectAllAccessibleSelection", "method_sig": "public void selectAllAccessibleSelection()", "description": "Causes every selected item in the object to be selected\n if the object supports multiple selections."}, {"method_name": "getAccessibleActionCount", "method_sig": "public int getAccessibleActionCount()", "description": "Returns the number of accessible actions available in this\n tree node.  If this node is not a leaf, there is at least\n one action (toggle expand), in addition to any available\n on the object behind the TreeCellRenderer."}, {"method_name": "getAccessibleActionDescription", "method_sig": "public String getAccessibleActionDescription (int i)", "description": "Return a description of the specified action of the tree node.\n If this node is not a leaf, there is at least one action\n description (toggle expand), in addition to any available\n on the object behind the TreeCellRenderer."}, {"method_name": "doAccessibleAction", "method_sig": "public boolean doAccessibleAction (int i)", "description": "Perform the specified Action on the tree node.  If this node\n is not a leaf, there is at least one action which can be\n done (toggle expand), in addition to any available on the\n object behind the TreeCellRenderer."}]}