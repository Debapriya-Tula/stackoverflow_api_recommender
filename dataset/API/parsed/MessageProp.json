{"name": "Class MessageProp", "module": "java.security.jgss", "package": "org.ietf.jgss", "text": "This is a utility class used within the per-message GSSContext\n methods to convey per-message properties.\n\n When used with the GSSContext interface's wrap and getMIC methods, an\n instance of this class is used to indicate the desired\n Quality-of-Protection (QOP) and to request if confidentiality services\n are to be applied to caller supplied data (wrap only).  To request\n default QOP, the value of 0 should be used for QOP.\n\n When used with the unwrap and verifyMIC methods of the GSSContext\n interface, an instance of this class will be used to indicate the\n applied QOP and confidentiality services over the supplied message.\n In the case of verifyMIC, the confidentiality state will always be\n false.  Upon return from these methods, this object will also\n contain any supplementary status values applicable to the processed\n token.  The supplementary status values can indicate old tokens, out\n of sequence tokens, gap tokens or duplicate tokens.", "codes": ["public class MessageProp\nextends Object"], "fields": [], "methods": [{"method_name": "getQOP", "method_sig": "public int getQOP()", "description": "Retrieves the QOP value."}, {"method_name": "getPrivacy", "method_sig": "public boolean getPrivacy()", "description": "Retrieves the privacy state."}, {"method_name": "setQOP", "method_sig": "public void setQOP (int qop)", "description": "Sets the QOP value."}, {"method_name": "setPrivacy", "method_sig": "public void setPrivacy (boolean privState)", "description": "Sets the privacy state."}, {"method_name": "isDuplicateToken", "method_sig": "public boolean isDuplicateToken()", "description": "Tests if this is a duplicate of an earlier token."}, {"method_name": "isOldToken", "method_sig": "public boolean isOldToken()", "description": "Tests if this token's validity period has expired, i.e., the token\n is too old to be checked for duplication."}, {"method_name": "isUnseqToken", "method_sig": "public boolean isUnseqToken()", "description": "Tests if a later token had already been processed."}, {"method_name": "isGapToken", "method_sig": "public boolean isGapToken()", "description": "Tests if an expected token was not received, i.e., one or more\n predecessor tokens have not yet been successfully processed."}, {"method_name": "getMinorStatus", "method_sig": "public int getMinorStatus()", "description": "Retrieves the minor status code that the underlying mechanism might\n have set for this per-message operation."}, {"method_name": "getMinorString", "method_sig": "public String getMinorString()", "description": "Retrieves a string explaining the minor status code."}, {"method_name": "setSupplementaryStates", "method_sig": "public void setSupplementaryStates (boolean duplicate,\n                                   boolean old,\n                                   boolean unseq,\n                                   boolean gap,\n                                   int minorStatus,\n                                   String minorString)", "description": "This method sets the state for the supplementary information flags\n and the minor status in MessageProp.  It is not used by the\n application but by the GSS implementation to return this information\n to the caller of a per-message context method."}]}