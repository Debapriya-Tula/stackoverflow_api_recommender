{"name": "Class DefaultCellEditor", "module": "java.desktop", "package": "javax.swing", "text": "The default editor for table and tree cells.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["public class DefaultCellEditor\nextends AbstractCellEditor\nimplements TableCellEditor, TreeCellEditor"], "fields": [{"field_name": "editorComponent", "field_sig": "protected\u00a0JComponent editorComponent", "description": "The Swing component being edited."}, {"field_name": "delegate", "field_sig": "protected\u00a0DefaultCellEditor.EditorDelegate delegate", "description": "The delegate class which handles all methods sent from the\n CellEditor."}, {"field_name": "clickCountToStart", "field_sig": "protected\u00a0int clickCountToStart", "description": "An integer specifying the number of clicks needed to start editing.\n Even if clickCountToStart is defined as zero, it\n will not initiate until a click occurs."}], "methods": [{"method_name": "getComponent", "method_sig": "public Component getComponent()", "description": "Returns a reference to the editor component."}, {"method_name": "setClickCountToStart", "method_sig": "public void setClickCountToStart (int count)", "description": "Specifies the number of clicks needed to start editing."}, {"method_name": "getClickCountToStart", "method_sig": "public int getClickCountToStart()", "description": "Returns the number of clicks needed to start editing."}, {"method_name": "getCellEditorValue", "method_sig": "public Object getCellEditorValue()", "description": "Forwards the message from the CellEditor to\n the delegate."}, {"method_name": "isCellEditable", "method_sig": "public boolean isCellEditable (EventObject anEvent)", "description": "Forwards the message from the CellEditor to\n the delegate."}, {"method_name": "shouldSelectCell", "method_sig": "public boolean shouldSelectCell (EventObject anEvent)", "description": "Forwards the message from the CellEditor to\n the delegate."}, {"method_name": "stopCellEditing", "method_sig": "public boolean stopCellEditing()", "description": "Forwards the message from the CellEditor to\n the delegate."}, {"method_name": "cancelCellEditing", "method_sig": "public void cancelCellEditing()", "description": "Forwards the message from the CellEditor to\n the delegate."}, {"method_name": "getTreeCellEditorComponent", "method_sig": "public Component getTreeCellEditorComponent (JTree tree,\n                                            Object value,\n                                            boolean isSelected,\n                                            boolean expanded,\n                                            boolean leaf,\n                                            int row)", "description": "Implements the TreeCellEditor interface."}, {"method_name": "getTableCellEditorComponent", "method_sig": "public Component getTableCellEditorComponent (JTable table,\n                                             Object value,\n                                             boolean isSelected,\n                                             int row,\n                                             int column)", "description": "Implements the TableCellEditor interface."}]}