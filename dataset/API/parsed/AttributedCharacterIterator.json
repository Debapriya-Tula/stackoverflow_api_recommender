{"name": "Interface AttributedCharacterIterator", "module": "java.base", "package": "java.text", "text": "An AttributedCharacterIterator allows iteration through both text and\n related attribute information.\n\n \n An attribute is a key/value pair, identified by the key.  No two\n attributes on a given character can have the same key.\n\n The values for an attribute are immutable, or must not be mutated\n by clients or storage.  They are always passed by reference, and not\n cloned.\n\n A run with respect to an attribute is a maximum text range for\n which:\n \nthe attribute is undefined or null for the entire range, or\n the attribute value is defined and has the same non-null value for the\n     entire range.\n \nA run with respect to a set of attributes is a maximum text range for\n which this condition is met for each member attribute.\n\n When getting a run with no explicit attributes specified (i.e.,\n calling getRunStart() and getRunLimit()), any\n contiguous text segments having the same attributes (the same set\n of attribute/value pairs) are treated as separate runs if the\n attributes have been given to those text segments separately.\n\n The returned indexes are limited to the range of the iterator.\n\n The returned attribute information is limited to runs that contain\n the current character.\n\n \n Attribute keys are instances of AttributedCharacterIterator.Attribute and its\n subclasses, such as TextAttribute.", "codes": ["public interface AttributedCharacterIterator\nextends CharacterIterator"], "fields": [], "methods": [{"method_name": "getRunStart", "method_sig": "int getRunStart()", "description": "Returns the index of the first character of the run\n with respect to all attributes containing the current character.\n\n Any contiguous text segments having the same attributes (the\n same set of attribute/value pairs) are treated as separate runs\n if the attributes have been given to those text segments separately."}, {"method_name": "getRunStart", "method_sig": "int getRunStart (AttributedCharacterIterator.Attribute attribute)", "description": "Returns the index of the first character of the run\n with respect to the given attribute containing the current character."}, {"method_name": "getRunStart", "method_sig": "int getRunStart (Set<? extends AttributedCharacterIterator.Attribute> attributes)", "description": "Returns the index of the first character of the run\n with respect to the given attributes containing the current character."}, {"method_name": "getRunLimit", "method_sig": "int getRunLimit()", "description": "Returns the index of the first character following the run\n with respect to all attributes containing the current character.\n\n Any contiguous text segments having the same attributes (the\n same set of attribute/value pairs) are treated as separate runs\n if the attributes have been given to those text segments separately."}, {"method_name": "getRunLimit", "method_sig": "int getRunLimit (AttributedCharacterIterator.Attribute attribute)", "description": "Returns the index of the first character following the run\n with respect to the given attribute containing the current character."}, {"method_name": "getRunLimit", "method_sig": "int getRunLimit (Set<? extends AttributedCharacterIterator.Attribute> attributes)", "description": "Returns the index of the first character following the run\n with respect to the given attributes containing the current character."}, {"method_name": "getAttributes", "method_sig": "Map<AttributedCharacterIterator.Attribute, Object> getAttributes()", "description": "Returns a map with the attributes defined on the current\n character."}, {"method_name": "getAttribute", "method_sig": "Object getAttribute (AttributedCharacterIterator.Attribute attribute)", "description": "Returns the value of the named attribute for the current character.\n Returns null if the attribute is not defined."}, {"method_name": "getAllAttributeKeys", "method_sig": "Set<AttributedCharacterIterator.Attribute> getAllAttributeKeys()", "description": "Returns the keys of all attributes defined on the\n iterator's text range. The set is empty if no\n attributes are defined."}]}