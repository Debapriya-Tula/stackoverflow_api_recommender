{"name": "Class Cleaner", "module": "java.base", "package": "java.lang.ref", "text": "Cleaner manages a set of object references and corresponding cleaning actions.\n \n Cleaning actions are registered\n to run after the cleaner is notified that the object has become\n phantom reachable.\n The cleaner uses PhantomReference and ReferenceQueue to be\n notified when the reachability\n changes.\n \n Each cleaner operates independently, managing the pending cleaning actions\n and handling threading and termination when the cleaner is no longer in use.\n Registering an object reference and corresponding cleaning action returns\n a Cleanable. The most efficient use is to explicitly invoke\n the clean method when the object is closed or\n no longer needed.\n The cleaning action is a Runnable to be invoked at most once when\n the object has become phantom reachable unless it has already been explicitly cleaned.\n Note that the cleaning action must not refer to the object being registered.\n If so, the object will not become phantom reachable and the cleaning action\n will not be invoked automatically.\n \n The execution of the cleaning action is performed\n by a thread associated with the cleaner.\n All exceptions thrown by the cleaning action are ignored.\n The cleaner and other cleaning actions are not affected by\n exceptions in a cleaning action.\n The thread runs until all registered cleaning actions have\n completed and the cleaner itself is reclaimed by the garbage collector.\n \n The behavior of cleaners during System.exit\n is implementation specific. No guarantees are made relating\n to whether cleaning actions are invoked or not.\n \n Unless otherwise noted, passing a null argument to a constructor or\n method in this class will cause a\n NullPointerException to be thrown.", "codes": ["public final class Cleaner\nextends Object"], "fields": [], "methods": [{"method_name": "create", "method_sig": "public static Cleaner create()", "description": "Returns a new Cleaner.\n \n The cleaner creates a daemon thread\n to process the phantom reachable objects and to invoke cleaning actions.\n The context class loader\n of the thread is set to the\n system class loader.\n The thread has no permissions, enforced only if a\n SecurityManager is set.\n \n The cleaner terminates when it is phantom reachable and all of the\n registered cleaning actions are complete."}, {"method_name": "create", "method_sig": "public static Cleaner create (ThreadFactory threadFactory)", "description": "Returns a new Cleaner using a Thread from the ThreadFactory.\n \n A thread from the thread factory's newThread\n method is set to be a daemon thread\n and started to process phantom reachable objects and invoke cleaning actions.\n On each call the thread factory\n must provide a Thread that is suitable for performing the cleaning actions.\n \n The cleaner terminates when it is phantom reachable and all of the\n registered cleaning actions are complete."}, {"method_name": "register", "method_sig": "public Cleaner.Cleanable register (Object obj,\n                                  Runnable action)", "description": "Registers an object and a cleaning action to run when the object\n becomes phantom reachable.\n Refer to the API Note above for\n cautions about the behavior of cleaning actions."}]}