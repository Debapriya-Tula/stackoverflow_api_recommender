{"name": "Interface CounterMonitorMBean", "module": "java.management", "package": "javax.management.monitor", "text": "Exposes the remote management interface of the counter monitor MBean.", "codes": ["public interface CounterMonitorMBean\nextends MonitorMBean"], "fields": [], "methods": [{"method_name": "getDerivedGauge", "method_sig": "@Deprecated\nNumber getDerivedGauge()", "description": "Gets the derived gauge."}, {"method_name": "getDerivedGaugeTimeStamp", "method_sig": "@Deprecated\nlong getDerivedGaugeTimeStamp()", "description": "Gets the derived gauge timestamp."}, {"method_name": "getThreshold", "method_sig": "@Deprecated\nNumber getThreshold()", "description": "Gets the threshold value."}, {"method_name": "setThreshold", "method_sig": "@Deprecated\nvoid setThreshold (Number value)\n           throws IllegalArgumentException", "description": "Sets the threshold value."}, {"method_name": "getDerivedGauge", "method_sig": "Number getDerivedGauge (ObjectName object)", "description": "Gets the derived gauge for the specified MBean."}, {"method_name": "getDerivedGaugeTimeStamp", "method_sig": "long getDerivedGaugeTimeStamp (ObjectName object)", "description": "Gets the derived gauge timestamp for the specified MBean."}, {"method_name": "getThreshold", "method_sig": "Number getThreshold (ObjectName object)", "description": "Gets the threshold value for the specified MBean."}, {"method_name": "getInitThreshold", "method_sig": "Number getInitThreshold()", "description": "Gets the initial threshold value common to all observed objects."}, {"method_name": "setInitThreshold", "method_sig": "void setInitThreshold (Number value)\n               throws IllegalArgumentException", "description": "Sets the initial threshold value common to all observed MBeans."}, {"method_name": "getOffset", "method_sig": "Number getOffset()", "description": "Gets the offset value."}, {"method_name": "setOffset", "method_sig": "void setOffset (Number value)\n        throws IllegalArgumentException", "description": "Sets the offset value."}, {"method_name": "getModulus", "method_sig": "Number getModulus()", "description": "Gets the modulus value."}, {"method_name": "setModulus", "method_sig": "void setModulus (Number value)\n         throws IllegalArgumentException", "description": "Sets the modulus value."}, {"method_name": "getNotify", "method_sig": "boolean getNotify()", "description": "Gets the notification's on/off switch value."}, {"method_name": "setNotify", "method_sig": "void setNotify (boolean value)", "description": "Sets the notification's on/off switch value."}, {"method_name": "getDifferenceMode", "method_sig": "boolean getDifferenceMode()", "description": "Gets the difference mode flag value."}, {"method_name": "setDifferenceMode", "method_sig": "void setDifferenceMode (boolean value)", "description": "Sets the difference mode flag value."}]}