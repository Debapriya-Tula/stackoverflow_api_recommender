{"name": "Class AbstractSet<E>", "module": "java.base", "package": "java.util", "text": "This class provides a skeletal implementation of the Set\n interface to minimize the effort required to implement this\n interface. \n\n The process of implementing a set by extending this class is identical\n to that of implementing a Collection by extending AbstractCollection,\n except that all of the methods and constructors in subclasses of this\n class must obey the additional constraints imposed by the Set\n interface (for instance, the add method must not permit addition of\n multiple instances of an object to a set).\n\n Note that this class does not override any of the implementations from\n the AbstractCollection class.  It merely adds implementations\n for equals and hashCode.\n\n This class is a member of the\n \n Java Collections Framework.", "codes": ["public abstract class AbstractSet<E>\nextends AbstractCollection<E>\nimplements Set<E>"], "fields": [], "methods": [{"method_name": "equals", "method_sig": "public boolean equals (Object o)", "description": "Compares the specified object with this set for equality.  Returns\n true if the given object is also a set, the two sets have\n the same size, and every member of the given set is contained in\n this set.  This ensures that the equals method works\n properly across different implementations of the Set\n interface.\n\n This implementation first checks if the specified object is this\n set; if so it returns true.  Then, it checks if the\n specified object is a set whose size is identical to the size of\n this set; if not, it returns false.  If so, it returns\n containsAll((Collection) o)."}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Returns the hash code value for this set.  The hash code of a set is\n defined to be the sum of the hash codes of the elements in the set,\n where the hash code of a null element is defined to be zero.\n This ensures that s1.equals(s2) implies that\n s1.hashCode()==s2.hashCode() for any two sets s1\n and s2, as required by the general contract of\n Object.hashCode().\n\n This implementation iterates over the set, calling the\n hashCode method on each element in the set, and adding up\n the results."}, {"method_name": "removeAll", "method_sig": "public boolean removeAll (Collection<?> c)", "description": "Removes from this set all of its elements that are contained in the\n specified collection (optional operation).  If the specified\n collection is also a set, this operation effectively modifies this\n set so that its value is the asymmetric set difference of\n the two sets.\n\n This implementation determines which is the smaller of this set\n and the specified collection, by invoking the size\n method on each.  If this set has fewer elements, then the\n implementation iterates over this set, checking each element\n returned by the iterator in turn to see if it is contained in\n the specified collection.  If it is so contained, it is removed\n from this set with the iterator's remove method.  If\n the specified collection has fewer elements, then the\n implementation iterates over the specified collection, removing\n from this set each element returned by the iterator, using this\n set's remove method.\n\n Note that this implementation will throw an\n UnsupportedOperationException if the iterator returned by the\n iterator method does not implement the remove method."}]}