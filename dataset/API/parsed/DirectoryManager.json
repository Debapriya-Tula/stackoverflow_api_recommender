{"name": "Class DirectoryManager", "module": "java.naming", "package": "javax.naming.spi", "text": "This class contains methods for supporting DirContext\n implementations.\n\n This class is an extension of NamingManager.  It contains methods\n for use by service providers for accessing object factories and\n state factories, and for getting continuation contexts for\n supporting federation.\n\nDirectoryManager is safe for concurrent access by multiple threads.\n\n Except as otherwise noted,\n a Name, Attributes, or environment parameter\n passed to any method is owned by the caller.\n The implementation will not modify the object or keep a reference\n to it, although it may keep a reference to a clone or copy.", "codes": ["public class DirectoryManager\nextends NamingManager"], "fields": [], "methods": [{"method_name": "getContinuationDirContext", "method_sig": "public static DirContext getContinuationDirContext (CannotProceedException cpe)\n                                            throws NamingException", "description": "Creates a context in which to continue a DirContext operation.\n Operates just like NamingManager.getContinuationContext(),\n only the continuation context returned is a DirContext."}, {"method_name": "getObjectInstance", "method_sig": "public static Object getObjectInstance (Object refInfo,\n                                       Name name,\n                                       Context nameCtx,\n                                       Hashtable<?, ?> environment,\n                                       Attributes attrs)\n                                throws Exception", "description": "Creates an instance of an object for the specified object,\n attributes, and environment.\n \n This method is the same as NamingManager.getObjectInstance\n except for the following differences:\n\n\n It accepts an Attributes parameter that contains attributes\n associated with the object. The DirObjectFactory might use these\n attributes to save having to look them up from the directory.\n\n The object factories tried must implement either\n ObjectFactory or DirObjectFactory.\n If it implements DirObjectFactory,\n DirObjectFactory.getObjectInstance() is used, otherwise,\n ObjectFactory.getObjectInstance() is used.\n\n Service providers that implement the DirContext interface\n should use this method, not NamingManager.getObjectInstance()."}, {"method_name": "getStateToBind", "method_sig": "public static DirStateFactory.Result getStateToBind (Object obj,\n                                                    Name name,\n                                                    Context nameCtx,\n                                                    Hashtable<?, ?> environment,\n                                                    Attributes attrs)\n                                             throws NamingException", "description": "Retrieves the state of an object for binding when given the original\n object and its attributes.\n \n This method is like NamingManager.getStateToBind except\n for the following differences:\n\nIt accepts an Attributes parameter containing attributes\n    that were passed to the DirContext.bind() method.\nIt returns a non-null DirStateFactory.Result instance\n    containing the object to be bound, and the attributes to\n    accompany the binding. Either the object or the attributes may be null.\n\n The state factories tried must each implement either\n StateFactory or DirStateFactory.\n If it implements DirStateFactory, then\n DirStateFactory.getStateToBind() is called; otherwise,\n StateFactory.getStateToBind() is called.\n\n\n Service providers that implement the DirContext interface\n should use this method, not NamingManager.getStateToBind().\n\n See NamingManager.getStateToBind() for a description of how\n the list of state factories to be tried is determined.\n\n The object returned by this method is owned by the caller.\n The implementation will not subsequently modify it.\n It will contain either a new Attributes object that is\n likewise owned by the caller, or a reference to the original\n attrs parameter."}]}