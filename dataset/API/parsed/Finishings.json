{"name": "Class Finishings", "module": "java.desktop", "package": "javax.print.attribute.standard", "text": "Class Finishings is a printing attribute class, an enumeration, that\n identifies whether the printer applies a finishing operation of some kind of\n binding to each copy of each printed document in the job. For multidoc print\n jobs (jobs with multiple documents), the\n MultipleDocumentHandling attribute\n determines what constitutes a \"copy\" for purposes of finishing.\n \n Standard Finishings values are:\n \nStandard Finishings values\n\n\u00a0\n     NONE\nSTAPLE\nEDGE_STITCH\n\n\u00a0\n     BIND\nSADDLE_STITCH\nCOVER\n\u00a0\n \n\n The following Finishings values are more specific; they indicate a\n corner or an edge as if the document were a portrait document:\n \nSpecific Finishings values\n\n\u00a0\n     STAPLE_TOP_LEFT\nEDGE_STITCH_LEFT\nSTAPLE_DUAL_LEFT\n\u00a0\n   \n\u00a0\n     STAPLE_BOTTOM_LEFT\nEDGE_STITCH_TOP\nSTAPLE_DUAL_TOP\n\u00a0\n   \n\u00a0\n     STAPLE_TOP_RIGHT\nEDGE_STITCH_RIGHT\nSTAPLE_DUAL_RIGHT\n\u00a0\n   \n\u00a0\n     STAPLE_BOTTOM_RIGHT\nEDGE_STITCH_BOTTOM\nSTAPLE_DUAL_BOTTOM\n\u00a0\n \n\n The STAPLE_XXX values are specified with respect to the document as if\n the document were a portrait document. If the document is actually a\n landscape or a reverse-landscape document, the client supplies the\n appropriate transformed value. For example, to position a staple in the upper\n left hand corner of a landscape document when held for reading, the client\n supplies the STAPLE_BOTTOM_LEFT value (since landscape is defined as\n a +90 degree rotation from portrait, i.e., anti-clockwise). On the other\n hand, to position a staple in the upper left hand corner of a\n reverse-landscape document when held for reading, the client supplies the\n STAPLE_TOP_RIGHT value (since reverse-landscape is defined as a -90\n degree rotation from portrait, i.e., clockwise).\n \n The angle (vertical, horizontal, angled) of each staple with respect to the\n document depends on the implementation which may in turn depend on the value\n of the attribute.\n \n The effect of a Finishings attribute on a multidoc print job (a job\n with multiple documents) depends on whether all the docs have the same\n binding specified or whether different docs have different bindings\n specified, and on the (perhaps defaulted) value of the\n MultipleDocumentHandling attribute.\n \nIf all the docs have the same binding specified, then any value of\n   MultipleDocumentHandling makes sense, and\n   the printer's processing depends on the\n   MultipleDocumentHandling value:\n   \nSINGLE_DOCUMENT -- All the input docs will be bound together\n     as one output document with the specified binding.\n     SINGLE_DOCUMENT_NEW_SHEET -- All the input docs will be bound\n     together as one output document with the specified binding, and the first\n     impression of each input doc will always start on a new media sheet.\n     SEPARATE_DOCUMENTS_UNCOLLATED_COPIES -- Each input doc will\n     be bound separately with the specified binding.\n     SEPARATE_DOCUMENTS_COLLATED_COPIES -- Each input doc will be\n     bound separately with the specified binding.\n   \nIf different docs have different bindings specified, then only two\n   values of MultipleDocumentHandling make\n   sense, and the printer reports an error when the job is submitted if any\n   other value is specified:\n   \nSEPARATE_DOCUMENTS_UNCOLLATED_COPIES -- Each input doc will\n     be bound separately with its own specified binding.\n     SEPARATE_DOCUMENTS_COLLATED_COPIES -- Each input doc will be\n     bound separately with its own specified binding.\n   \n\n\nIPP Compatibility: Class Finishings encapsulates some of the IPP enum\n values that can be included in an IPP \"finishings\" attribute, which is a set\n of enums. The category name returned by getName() is the IPP\n attribute name. The enumeration's integer value is the IPP enum value. The\n toString() method returns the IPP string representation of the\n attribute value. In IPP Finishings is a multi-value attribute, this API\n currently allows only one binding to be specified.", "codes": ["public class Finishings\nextends EnumSyntax\nimplements DocAttribute, PrintRequestAttribute, PrintJobAttribute"], "fields": [{"field_name": "NONE", "field_sig": "public static final\u00a0Finishings NONE", "description": "Perform no binding."}, {"field_name": "STAPLE", "field_sig": "public static final\u00a0Finishings STAPLE", "description": "Bind the document(s) with one or more staples. The exact number and\n placement of the staples is site-defined."}, {"field_name": "COVER", "field_sig": "public static final\u00a0Finishings COVER", "description": "This value is specified when it is desired to select a non-printed (or\n pre-printed) cover for the document. This does not supplant the\n specification of a printed cover (on cover stock medium) by the document\n itself."}, {"field_name": "BIND", "field_sig": "public static final\u00a0Finishings BIND", "description": "This value indicates that a binding is to be applied to the document; the\n type and placement of the binding is site-defined."}, {"field_name": "SADDLE_STITCH", "field_sig": "public static final\u00a0Finishings SADDLE_STITCH", "description": "Bind the document(s) with one or more staples (wire stitches) along the\n middle fold. The exact number and placement of the staples and the middle\n fold is implementation- and/or site-defined."}, {"field_name": "EDGE_STITCH", "field_sig": "public static final\u00a0Finishings EDGE_STITCH", "description": "Bind the document(s) with one or more staples (wire stitches) along one\n edge. The exact number and placement of the staples is implementation-\n and/or site- defined."}, {"field_name": "STAPLE_TOP_LEFT", "field_sig": "public static final\u00a0Finishings STAPLE_TOP_LEFT", "description": "Bind the document(s) with one or more staples in the top left corner."}, {"field_name": "STAPLE_BOTTOM_LEFT", "field_sig": "public static final\u00a0Finishings STAPLE_BOTTOM_LEFT", "description": "Bind the document(s) with one or more staples in the bottom left corner."}, {"field_name": "STAPLE_TOP_RIGHT", "field_sig": "public static final\u00a0Finishings STAPLE_TOP_RIGHT", "description": "Bind the document(s) with one or more staples in the top right corner."}, {"field_name": "STAPLE_BOTTOM_RIGHT", "field_sig": "public static final\u00a0Finishings STAPLE_BOTTOM_RIGHT", "description": "Bind the document(s) with one or more staples in the bottom right corner."}, {"field_name": "EDGE_STITCH_LEFT", "field_sig": "public static final\u00a0Finishings EDGE_STITCH_LEFT", "description": "Bind the document(s) with one or more staples (wire stitches) along the\n left edge. The exact number and placement of the staples is\n implementation- and/or site-defined."}, {"field_name": "EDGE_STITCH_TOP", "field_sig": "public static final\u00a0Finishings EDGE_STITCH_TOP", "description": "Bind the document(s) with one or more staples (wire stitches) along the\n top edge. The exact number and placement of the staples is\n implementation- and/or site-defined."}, {"field_name": "EDGE_STITCH_RIGHT", "field_sig": "public static final\u00a0Finishings EDGE_STITCH_RIGHT", "description": "Bind the document(s) with one or more staples (wire stitches) along the\n right edge. The exact number and placement of the staples is\n implementation- and/or site-defined."}, {"field_name": "EDGE_STITCH_BOTTOM", "field_sig": "public static final\u00a0Finishings EDGE_STITCH_BOTTOM", "description": "Bind the document(s) with one or more staples (wire stitches) along the\n bottom edge. The exact number and placement of the staples is\n implementation- and/or site-defined."}, {"field_name": "STAPLE_DUAL_LEFT", "field_sig": "public static final\u00a0Finishings STAPLE_DUAL_LEFT", "description": "Bind the document(s) with two staples (wire stitches) along the left edge\n assuming a portrait document (see above)."}, {"field_name": "STAPLE_DUAL_TOP", "field_sig": "public static final\u00a0Finishings STAPLE_DUAL_TOP", "description": "Bind the document(s) with two staples (wire stitches) along the top edge\n assuming a portrait document (see above)."}, {"field_name": "STAPLE_DUAL_RIGHT", "field_sig": "public static final\u00a0Finishings STAPLE_DUAL_RIGHT", "description": "Bind the document(s) with two staples (wire stitches) along the right\n edge assuming a portrait document (see above)."}, {"field_name": "STAPLE_DUAL_BOTTOM", "field_sig": "public static final\u00a0Finishings STAPLE_DUAL_BOTTOM", "description": "Bind the document(s) with two staples (wire stitches) along the bottom\n edge assuming a portrait document (see above)."}], "methods": [{"method_name": "getStringTable", "method_sig": "protected String[] getStringTable()", "description": "Returns the string table for class Finishings."}, {"method_name": "getEnumValueTable", "method_sig": "protected EnumSyntax[] getEnumValueTable()", "description": "Returns the enumeration value table for class Finishings."}, {"method_name": "getOffset", "method_sig": "protected int getOffset()", "description": "Returns the lowest integer value used by class Finishings."}, {"method_name": "getCategory", "method_sig": "public final Class<? extends Attribute> getCategory()", "description": "Get the printing attribute class which is to be used as the \"category\"\n for this printing attribute value.\n \n For class Finishings and any vendor-defined subclasses, the\n category is class Finishings itself."}, {"method_name": "getName", "method_sig": "public final String getName()", "description": "Get the name of the category of which this attribute value is an\n instance.\n \n For class Finishings and any vendor-defined subclasses, the\n category name is \"finishings\"."}]}