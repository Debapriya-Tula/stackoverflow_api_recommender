{"name": "Interface DocumentListener", "module": "java.desktop", "package": "javax.swing.event", "text": "Interface for an observer to register to receive notifications\n of changes to a text document.\n \n The default implementation of\n the Document interface (AbstractDocument) supports asynchronous\n mutations.  If this feature is used (i.e. mutations are made\n from a thread other than the Swing event thread), the listeners\n will be notified via the mutating thread.  This means that\n if asynchronous updates are made, the implementation of this\n interface must be threadsafe!\n \n The DocumentEvent notification is based upon the JavaBeans\n event model.  There is no guarantee about the order of delivery\n to listeners, and all listeners must be notified prior to making\n further mutations to the Document.  This means implementations\n of the DocumentListener may not mutate the source of the event\n (i.e. the associated Document).", "codes": ["public interface DocumentListener\nextends EventListener"], "fields": [], "methods": [{"method_name": "insertUpdate", "method_sig": "void insertUpdate (DocumentEvent e)", "description": "Gives notification that there was an insert into the document.  The\n range given by the DocumentEvent bounds the freshly inserted region."}, {"method_name": "removeUpdate", "method_sig": "void removeUpdate (DocumentEvent e)", "description": "Gives notification that a portion of the document has been\n removed.  The range is given in terms of what the view last\n saw (that is, before updating sticky positions)."}, {"method_name": "changedUpdate", "method_sig": "void changedUpdate (DocumentEvent e)", "description": "Gives notification that an attribute or set of attributes changed."}]}