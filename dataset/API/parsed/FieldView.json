{"name": "Class FieldView", "module": "java.desktop", "package": "javax.swing.text", "text": "Extends the multi-line plain text view to be suitable\n for a single-line editor view.  If the view is\n allocated extra space, the field must adjust for it.\n If the hosting component is a JTextField, this view\n will manage the ranges of the associated BoundedRangeModel\n and will adjust the horizontal allocation to match the\n current visibility settings of the JTextField.", "codes": ["public class FieldView\nextends PlainView"], "fields": [], "methods": [{"method_name": "getFontMetrics", "method_sig": "protected FontMetrics getFontMetrics()", "description": "Fetches the font metrics associated with the component hosting\n this view."}, {"method_name": "adjustAllocation", "method_sig": "protected Shape adjustAllocation (Shape a)", "description": "Adjusts the allocation given to the view\n to be a suitable allocation for a text field.\n If the view has been allocated more than the\n preferred span vertically, the allocation is\n changed to be centered vertically.  Horizontally\n the view is adjusted according to the horizontal\n alignment property set on the associated JTextField\n (if that is the type of the hosting component)."}, {"method_name": "paint", "method_sig": "public void paint (Graphics g,\n                  Shape a)", "description": "Renders using the given rendering surface and area on that surface.\n The view may need to do layout and create child views to enable\n itself to render into the given allocation."}, {"method_name": "getPreferredSpan", "method_sig": "public float getPreferredSpan (int axis)", "description": "Determines the preferred span for this view along an\n axis."}, {"method_name": "getResizeWeight", "method_sig": "public int getResizeWeight (int axis)", "description": "Determines the resizability of the view along the\n given axis.  A value of 0 or less is not resizable."}, {"method_name": "modelToView", "method_sig": "public Shape modelToView (int pos,\n                         Shape a,\n                         Position.Bias b)\n                  throws BadLocationException", "description": "Provides a mapping from the document model coordinate space\n to the coordinate space of the view mapped to it."}, {"method_name": "viewToModel", "method_sig": "public int viewToModel (float fx,\n                       float fy,\n                       Shape a,\n                       Position.Bias[] bias)", "description": "Provides a mapping from the view coordinate space to the logical\n coordinate space of the model."}, {"method_name": "insertUpdate", "method_sig": "public void insertUpdate (DocumentEvent changes,\n                         Shape a,\n                         ViewFactory f)", "description": "Gives notification that something was inserted into the document\n in a location that this view is responsible for."}, {"method_name": "removeUpdate", "method_sig": "public void removeUpdate (DocumentEvent changes,\n                         Shape a,\n                         ViewFactory f)", "description": "Gives notification that something was removed from the document\n in a location that this view is responsible for."}]}