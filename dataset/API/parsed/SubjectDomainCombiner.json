{"name": "Class SubjectDomainCombiner", "module": "java.base", "package": "javax.security.auth", "text": "A SubjectDomainCombiner updates ProtectionDomains\n with Principals from the Subject associated with this\n SubjectDomainCombiner.", "codes": ["public class SubjectDomainCombiner\nextends Object\nimplements DomainCombiner"], "fields": [], "methods": [{"method_name": "getSubject", "method_sig": "public Subject getSubject()", "description": "Get the Subject associated with this\n SubjectDomainCombiner."}, {"method_name": "combine", "method_sig": "public ProtectionDomain[] combine (ProtectionDomain[] currentDomains,\n                                  ProtectionDomain[] assignedDomains)", "description": "Update the relevant ProtectionDomains with the Principals\n from the Subject associated with this\n SubjectDomainCombiner.\n\n  A new ProtectionDomain instance is created\n for each non-static ProtectionDomain (\n (staticPermissionsOnly() == false)\n in the currentDomains array.  Each new ProtectionDomain\n instance is created using the CodeSource,\n Permissions and ClassLoader\n from the corresponding ProtectionDomain in\n currentDomains, as well as with the Principals from\n the Subject associated with this\n SubjectDomainCombiner. Static ProtectionDomains are\n combined as-is and no new instance is created.\n\n  All of the ProtectionDomains (static and newly instantiated) are\n combined into a new array.  The ProtectionDomains from the\n assignedDomains array are appended to this new array,\n and the result is returned.\n\n  Note that optimizations such as the removal of duplicate\n ProtectionDomains may have occurred.\n In addition, caching of ProtectionDomains may be permitted."}]}