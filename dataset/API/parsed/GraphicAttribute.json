{"name": "Class GraphicAttribute", "module": "java.desktop", "package": "java.awt.font", "text": "This class is used with the CHAR_REPLACEMENT attribute.\n \n The GraphicAttribute class represents a graphic embedded\n in text. Clients subclass this class to implement their own char\n replacement graphics.  Clients wishing to embed shapes and images in\n text need not subclass this class.  Instead, clients can use the\n ShapeGraphicAttribute and ImageGraphicAttribute\n classes.\n \n Subclasses must ensure that their objects are immutable once they\n are constructed.  Mutating a GraphicAttribute that\n is used in a TextLayout results in undefined behavior from the\n TextLayout.", "codes": ["public abstract class GraphicAttribute\nextends Object"], "fields": [{"field_name": "TOP_ALIGNMENT", "field_sig": "public static final\u00a0int TOP_ALIGNMENT", "description": "Aligns top of graphic to top of line."}, {"field_name": "BOTTOM_ALIGNMENT", "field_sig": "public static final\u00a0int BOTTOM_ALIGNMENT", "description": "Aligns bottom of graphic to bottom of line."}, {"field_name": "ROMAN_BASELINE", "field_sig": "public static final\u00a0int ROMAN_BASELINE", "description": "Aligns origin of graphic to roman baseline of line."}, {"field_name": "CENTER_BASELINE", "field_sig": "public static final\u00a0int CENTER_BASELINE", "description": "Aligns origin of graphic to center baseline of line."}, {"field_name": "HANGING_BASELINE", "field_sig": "public static final\u00a0int HANGING_BASELINE", "description": "Aligns origin of graphic to hanging baseline of line."}], "methods": [{"method_name": "getAscent", "method_sig": "public abstract float getAscent()", "description": "Returns the ascent of this GraphicAttribute.  A\n graphic can be rendered above its ascent."}, {"method_name": "getDescent", "method_sig": "public abstract float getDescent()", "description": "Returns the descent of this GraphicAttribute.  A\n graphic can be rendered below its descent."}, {"method_name": "getAdvance", "method_sig": "public abstract float getAdvance()", "description": "Returns the advance of this GraphicAttribute.  The\n GraphicAttribute object's advance is the distance\n from the point at which the graphic is rendered and the point where\n the next character or graphic is rendered.  A graphic can be\n rendered beyond its advance"}, {"method_name": "getBounds", "method_sig": "public Rectangle2D getBounds()", "description": "Returns a Rectangle2D that encloses all of the\n bits drawn by this GraphicAttribute relative to the\n rendering position.\n A graphic may be rendered beyond its origin, ascent, descent,\n or advance;  but if it is, this method's implementation must\n indicate where the graphic is rendered.\n Default bounds is the rectangle (0, -ascent, advance, ascent+descent)."}, {"method_name": "getOutline", "method_sig": "public Shape getOutline (AffineTransform tx)", "description": "Return a Shape that represents the region that\n this GraphicAttribute renders.  This is used when a\n TextLayout is requested to return the outline of the text.\n The (untransformed) shape must not extend outside the rectangular\n bounds returned by getBounds.\n The default implementation returns the rectangle returned by\n getBounds(), transformed by the provided AffineTransform\n if present."}, {"method_name": "draw", "method_sig": "public abstract void draw (Graphics2D graphics,\n                          float x,\n                          float y)", "description": "Renders this GraphicAttribute at the specified\n location."}, {"method_name": "getAlignment", "method_sig": "public final int getAlignment()", "description": "Returns the alignment of this GraphicAttribute.\n Alignment can be to a particular baseline, or to the absolute top\n or bottom of a line."}, {"method_name": "getJustificationInfo", "method_sig": "public GlyphJustificationInfo getJustificationInfo()", "description": "Returns the justification information for this\n GraphicAttribute.  Subclasses\n can override this method to provide different justification\n information."}]}