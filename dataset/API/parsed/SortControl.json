{"name": "Class SortControl", "module": "java.naming", "package": "javax.naming.ldap", "text": "Requests that the results of a search operation be sorted by the LDAP server\n before being returned.\n The sort criteria are specified using an ordered list of one or more sort\n keys, with associated sort parameters.\n Search results are sorted at the LDAP server according to the parameters\n supplied in the sort control and then returned to the requestor. If sorting\n is not supported at the server (and the sort control is marked as critical)\n then the search operation is not performed and an error is returned.\n \n The following code sample shows how the class may be used:\n \n\n     // Open an LDAP association\n     LdapContext ctx = new InitialLdapContext();\n\n     // Activate sorting\n     String sortKey = \"cn\";\n     ctx.setRequestControls(new Control[]{\n         new SortControl(sortKey, Control.CRITICAL) });\n\n     // Perform a search\n     NamingEnumeration results =\n         ctx.search(\"\", \"(objectclass=*)\", new SearchControls());\n\n     // Iterate over search results\n     while (results != null && results.hasMore()) {\n         // Display an entry\n         SearchResult entry = (SearchResult)results.next();\n         System.out.println(entry.getName());\n         System.out.println(entry.getAttributes());\n\n         // Handle the entry's response controls (if any)\n         if (entry instanceof HasControls) {\n             // ((HasControls)entry).getControls();\n         }\n     }\n     // Examine the sort control response\n     Control[] controls = ctx.getResponseControls();\n     if (controls != null) {\n         for (int i = 0; i < controls.length; i++) {\n             if (controls[i] instanceof SortResponseControl) {\n                 SortResponseControl src = (SortResponseControl)controls[i];\n                 if (! src.isSorted()) {\n                     throw src.getException();\n                 }\n             } else {\n                 // Handle other response controls (if any)\n             }\n         }\n     }\n\n     // Close the LDAP association\n     ctx.close();\n     ...\n\n \n\n This class implements the LDAPv3 Request Control for server-side sorting\n as defined in\n RFC 2891.\n\n The control's value has the following ASN.1 definition:\n \n\n     SortKeyList ::= SEQUENCE OF SEQUENCE {\n         attributeType     AttributeDescription,\n         orderingRule  [0] MatchingRuleId OPTIONAL,\n         reverseOrder  [1] BOOLEAN DEFAULT FALSE }\n\n ", "codes": ["public final class SortControl\nextends BasicControl"], "fields": [{"field_name": "OID", "field_sig": "public static final\u00a0String OID", "description": "The server-side sort control's assigned object identifier\n is 1.2.840.113556.1.4.473."}], "methods": []}