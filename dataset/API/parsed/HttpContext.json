{"name": "Class HttpContext", "module": "jdk.httpserver", "package": "com.sun.net.httpserver", "text": "HttpContext represents a mapping between the root URI path of an application\n to a HttpHandler which is invoked to handle requests destined\n for that path on the associated HttpServer or HttpsServer.\n \n HttpContext instances are created by the create methods in HttpServer\n and HttpsServer\n \n A chain of Filter objects can be added to a HttpContext. All exchanges processed by the\n context can be pre- and post-processed by each Filter in the chain.", "codes": ["public abstract class HttpContext\nextends Object"], "fields": [], "methods": [{"method_name": "getHandler", "method_sig": "public abstract HttpHandler getHandler()", "description": "returns the handler for this context"}, {"method_name": "setHandler", "method_sig": "public abstract void setHandler (HttpHandler h)", "description": "Sets the handler for this context, if not already set."}, {"method_name": "getPath", "method_sig": "public abstract String getPath()", "description": "returns the path this context was created with"}, {"method_name": "getServer", "method_sig": "public abstract HttpServer getServer()", "description": "returns the server this context was created with"}, {"method_name": "getAttributes", "method_sig": "public abstract Map<String, Object> getAttributes()", "description": "returns a mutable Map, which can be used to pass\n configuration and other data to Filter modules\n and to the context's exchange handler.\n \n Every attribute stored in this Map will be visible to\n every HttpExchange processed by this context"}, {"method_name": "getFilters", "method_sig": "public abstract List<Filter> getFilters()", "description": "returns this context's list of Filters. This is the\n actual list used by the server when dispatching requests\n so modifications to this list immediately affect the\n the handling of exchanges."}, {"method_name": "setAuthenticator", "method_sig": "public abstract Authenticator setAuthenticator (Authenticator auth)", "description": "Sets the Authenticator for this HttpContext. Once an authenticator\n is establised on a context, all client requests must be\n authenticated, and the given object will be invoked to validate each\n request. Each call to this method replaces any previous value set."}, {"method_name": "getAuthenticator", "method_sig": "public abstract Authenticator getAuthenticator()", "description": "Returns the currently set Authenticator for this context\n if one exists."}]}