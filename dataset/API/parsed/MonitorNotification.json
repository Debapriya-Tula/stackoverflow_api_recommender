{"name": "Class MonitorNotification", "module": "java.management", "package": "javax.management.monitor", "text": "Provides definitions of the notifications sent by monitor MBeans.\n \n The notification source and a set of parameters concerning the monitor MBean's state\n need to be specified when creating a new object of this class.\n\n The list of notifications fired by the monitor MBeans is the following:\n\n \nCommon to all kind of monitors:\n     \nThe observed object is not registered in the MBean server.\n     The observed attribute is not contained in the observed object.\n     The type of the observed attribute is not correct.\n     Any exception (except the cases described above) occurs when trying to get the value of the observed attribute.\n     \nCommon to the counter and the gauge monitors:\n     \nThe threshold high or threshold low are not of the same type as the gauge (gauge monitors).\n     The threshold or the offset or the modulus are not of the same type as the counter (counter monitors).\n     \nCounter monitors only:\n     \nThe observed attribute has reached the threshold value.\n     \nGauge monitors only:\n     \nThe observed attribute has exceeded the threshold high value.\n     The observed attribute has exceeded the threshold low value.\n     \nString monitors only:\n     \nThe observed attribute has matched the \"string to compare\" value.\n     The observed attribute has differed from the \"string to compare\" value.\n     \n", "codes": ["public class MonitorNotification\nextends Notification"], "fields": [{"field_name": "OBSERVED_OBJECT_ERROR", "field_sig": "public static final\u00a0String OBSERVED_OBJECT_ERROR", "description": "Notification type denoting that the observed object is not registered in the MBean server.\n This notification is fired by all kinds of monitors.\n The value of this notification type is jmx.monitor.error.mbean."}, {"field_name": "OBSERVED_ATTRIBUTE_ERROR", "field_sig": "public static final\u00a0String OBSERVED_ATTRIBUTE_ERROR", "description": "Notification type denoting that the observed attribute is not contained in the observed object.\n This notification is fired by all kinds of monitors.\n The value of this notification type is jmx.monitor.error.attribute."}, {"field_name": "OBSERVED_ATTRIBUTE_TYPE_ERROR", "field_sig": "public static final\u00a0String OBSERVED_ATTRIBUTE_TYPE_ERROR", "description": "Notification type denoting that the type of the observed attribute is not correct.\n This notification is fired by all kinds of monitors.\n The value of this notification type is jmx.monitor.error.type."}, {"field_name": "THRESHOLD_ERROR", "field_sig": "public static final\u00a0String THRESHOLD_ERROR", "description": "Notification type denoting that the type of the thresholds, offset or modulus is not correct.\n This notification is fired by counter and gauge monitors.\n The value of this notification type is jmx.monitor.error.threshold."}, {"field_name": "RUNTIME_ERROR", "field_sig": "public static final\u00a0String RUNTIME_ERROR", "description": "Notification type denoting that a non-predefined error type has occurred when trying to get the value of the observed attribute.\n This notification is fired by all kinds of monitors.\n The value of this notification type is jmx.monitor.error.runtime."}, {"field_name": "THRESHOLD_VALUE_EXCEEDED", "field_sig": "public static final\u00a0String THRESHOLD_VALUE_EXCEEDED", "description": "Notification type denoting that the observed attribute has reached the threshold value.\n This notification is only fired by counter monitors.\n The value of this notification type is jmx.monitor.counter.threshold."}, {"field_name": "THRESHOLD_HIGH_VALUE_EXCEEDED", "field_sig": "public static final\u00a0String THRESHOLD_HIGH_VALUE_EXCEEDED", "description": "Notification type denoting that the observed attribute has exceeded the threshold high value.\n This notification is only fired by gauge monitors.\n The value of this notification type is jmx.monitor.gauge.high."}, {"field_name": "THRESHOLD_LOW_VALUE_EXCEEDED", "field_sig": "public static final\u00a0String THRESHOLD_LOW_VALUE_EXCEEDED", "description": "Notification type denoting that the observed attribute has exceeded the threshold low value.\n This notification is only fired by gauge monitors.\n The value of this notification type is jmx.monitor.gauge.low."}, {"field_name": "STRING_TO_COMPARE_VALUE_MATCHED", "field_sig": "public static final\u00a0String STRING_TO_COMPARE_VALUE_MATCHED", "description": "Notification type denoting that the observed attribute has matched the \"string to compare\" value.\n This notification is only fired by string monitors.\n The value of this notification type is jmx.monitor.string.matches."}, {"field_name": "STRING_TO_COMPARE_VALUE_DIFFERED", "field_sig": "public static final\u00a0String STRING_TO_COMPARE_VALUE_DIFFERED", "description": "Notification type denoting that the observed attribute has differed from the \"string to compare\" value.\n This notification is only fired by string monitors.\n The value of this notification type is jmx.monitor.string.differs."}], "methods": [{"method_name": "getObservedObject", "method_sig": "public ObjectName getObservedObject()", "description": "Gets the observed object of this monitor notification."}, {"method_name": "getObservedAttribute", "method_sig": "public String getObservedAttribute()", "description": "Gets the observed attribute of this monitor notification."}, {"method_name": "getDerivedGauge", "method_sig": "public Object getDerivedGauge()", "description": "Gets the derived gauge of this monitor notification."}, {"method_name": "getTrigger", "method_sig": "public Object getTrigger()", "description": "Gets the threshold/string (depending on the monitor type) that triggered off this monitor notification."}]}