{"name": "Class Arc2D.Float", "module": "java.desktop", "package": "java.awt.geom", "text": "This class defines an arc specified in float precision.", "codes": ["public static class Arc2D.Float\nextends Arc2D\nimplements Serializable"], "fields": [{"field_name": "x", "field_sig": "public\u00a0float x", "description": "The X coordinate of the upper-left corner of the framing\n rectangle of the arc."}, {"field_name": "y", "field_sig": "public\u00a0float y", "description": "The Y coordinate of the upper-left corner of the framing\n rectangle of the arc."}, {"field_name": "width", "field_sig": "public\u00a0float width", "description": "The overall width of the full ellipse of which this arc is\n a partial section (not considering the\n angular extents)."}, {"field_name": "height", "field_sig": "public\u00a0float height", "description": "The overall height of the full ellipse of which this arc is\n a partial section (not considering the\n angular extents)."}, {"field_name": "start", "field_sig": "public\u00a0float start", "description": "The starting angle of the arc in degrees."}, {"field_name": "extent", "field_sig": "public\u00a0float extent", "description": "The angular extent of the arc in degrees."}], "methods": [{"method_name": "getX", "method_sig": "public double getX()", "description": "Returns the X coordinate of the upper-left corner of\n the framing rectangle in double precision.\n Note that the arc\n partially inscribes\n the framing rectangle of this RectangularShape."}, {"method_name": "getY", "method_sig": "public double getY()", "description": "Returns the Y coordinate of the upper-left corner of\n the framing rectangle in double precision.\n Note that the arc\n partially inscribes\n the framing rectangle of this RectangularShape."}, {"method_name": "getWidth", "method_sig": "public double getWidth()", "description": "Returns the width of the framing rectangle in\n double precision.\n Note that the arc\n partially inscribes\n the framing rectangle of this RectangularShape."}, {"method_name": "getHeight", "method_sig": "public double getHeight()", "description": "Returns the height of the framing rectangle\n in double precision.\n Note that the arc\n partially inscribes\n the framing rectangle of this RectangularShape."}, {"method_name": "getAngleStart", "method_sig": "public double getAngleStart()", "description": "Returns the starting angle of the arc."}, {"method_name": "getAngleExtent", "method_sig": "public double getAngleExtent()", "description": "Returns the angular extent of the arc."}, {"method_name": "isEmpty", "method_sig": "public boolean isEmpty()", "description": "Determines whether the RectangularShape is empty.\n When the RectangularShape is empty, it encloses no\n area."}, {"method_name": "setArc", "method_sig": "public void setArc (double x,\n                   double y,\n                   double w,\n                   double h,\n                   double angSt,\n                   double angExt,\n                   int closure)", "description": "Sets the location, size, angular extents, and closure type of\n this arc to the specified double values."}, {"method_name": "setAngleStart", "method_sig": "public void setAngleStart (double angSt)", "description": "Sets the starting angle of this arc to the specified double\n value."}, {"method_name": "setAngleExtent", "method_sig": "public void setAngleExtent (double angExt)", "description": "Sets the angular extent of this arc to the specified double\n value."}, {"method_name": "makeBounds", "method_sig": "protected Rectangle2D makeBounds (double x,\n                                 double y,\n                                 double w,\n                                 double h)", "description": "Constructs a Rectangle2D of the appropriate precision\n to hold the parameters calculated to be the framing rectangle\n of this arc."}]}