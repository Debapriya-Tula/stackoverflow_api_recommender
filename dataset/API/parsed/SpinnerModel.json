{"name": "Interface SpinnerModel", "module": "java.desktop", "package": "javax.swing", "text": "A model for a potentially unbounded sequence of object values.  This model\n is similar to ListModel however there are some important differences:\n \n The number of sequence elements isn't necessarily bounded.\n  The model doesn't support indexed random access to sequence elements.\n      Only three sequence values are accessible at a time: current, next and\n      previous.\n  The current sequence element, can be set.\n \n\n A SpinnerModel has three properties, only the first is read/write.\n \nvalue\nThe current element of the sequence.\n\n   nextValue\nThe following element or null if value is the\n     last element of the sequence.\n\n   previousValue\nThe preceding element or null if value is the\n     first element of the sequence.\n \n When the value property changes,\n ChangeListeners are notified.  SpinnerModel may\n choose to notify the ChangeListeners under other circumstances.", "codes": ["public interface SpinnerModel"], "fields": [], "methods": [{"method_name": "getValue", "method_sig": "Object getValue()", "description": "The current element of the sequence.  This element is usually\n displayed by the editor part of a JSpinner."}, {"method_name": "setValue", "method_sig": "void setValue (Object value)", "description": "Changes current value of the model, typically this value is displayed\n by the editor part of a  JSpinner.\n If the SpinnerModel implementation doesn't support\n the specified value then an IllegalArgumentException\n is thrown.  For example a SpinnerModel for numbers might\n only support values that are integer multiples of ten. In\n that case, model.setValue(new Number(11))\n would throw an exception."}, {"method_name": "getNextValue", "method_sig": "Object getNextValue()", "description": "Return the object in the sequence that comes after the object returned\n by getValue(). If the end of the sequence has been reached\n then return null.  Calling this method does not effect value."}, {"method_name": "getPreviousValue", "method_sig": "Object getPreviousValue()", "description": "Return the object in the sequence that comes before the object returned\n by getValue().  If the end of the sequence has been reached then\n return null. Calling this method does not effect value."}, {"method_name": "addChangeListener", "method_sig": "void addChangeListener (ChangeListener l)", "description": "Adds a ChangeListener to the model's listener list.  The\n ChangeListeners must be notified when models value\n changes."}, {"method_name": "removeChangeListener", "method_sig": "void removeChangeListener (ChangeListener l)", "description": "Removes a ChangeListener from the model's listener list."}]}