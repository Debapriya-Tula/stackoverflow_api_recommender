{"name": "Interface TypeBasedGuardingDynamicLinker", "module": "jdk.dynalink", "package": "jdk.dynalink.linker", "text": "A guarding dynamic linker that can determine whether it can link the call site solely based on the type of the first\n argument at linking invocation time. (The first argument is usually the receiver). Most language-specific\n linkers will fall into this category, as they recognize their native objects as Java objects of classes implementing\n a specific language-native interface or superclass. The linker mechanism can optimize the dispatch for these linkers,\n see CompositeTypeBasedGuardingDynamicLinker.", "codes": ["public interface TypeBasedGuardingDynamicLinker\nextends GuardingDynamicLinker"], "fields": [], "methods": [{"method_name": "canLinkType", "method_sig": "boolean canLinkType (Class<?> type)", "description": "Returns true if the linker can link an invocation where the first argument (receiver) is of the specified type."}]}