{"name": "Interface Enumeration<E>", "module": "java.base", "package": "java.util", "text": "An object that implements the Enumeration interface generates a\n series of elements, one at a time. Successive calls to the\n nextElement method return successive elements of the\n series.\n \n For example, to print all elements of a Vector<E> v:\n \n   for (Enumeration<E> e = v.elements(); e.hasMoreElements();)\n       System.out.println(e.nextElement());\n\n Methods are provided to enumerate through the elements of a\n vector, the keys of a hashtable, and the values in a hashtable.\n Enumerations are also used to specify the input streams to a\n SequenceInputStream.", "codes": ["public interface Enumeration<E>"], "fields": [], "methods": [{"method_name": "hasMoreElements", "method_sig": "boolean hasMoreElements()", "description": "Tests if this enumeration contains more elements."}, {"method_name": "nextElement", "method_sig": "E nextElement()", "description": "Returns the next element of this enumeration if this enumeration\n object has at least one more element to provide."}, {"method_name": "asIterator", "method_sig": "default Iterator<E> asIterator()", "description": "Returns an Iterator that traverses the remaining elements\n covered by this enumeration. Traversal is undefined if any methods\n are called on this enumeration after the call to asIterator."}]}