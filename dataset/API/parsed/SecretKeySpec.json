{"name": "Class SecretKeySpec", "module": "java.base", "package": "javax.crypto.spec", "text": "This class specifies a secret key in a provider-independent fashion.\n\n It can be used to construct a SecretKey from a byte array,\n without having to go through a (provider-based)\n SecretKeyFactory.\n\n This class is only useful for raw secret keys that can be represented as\n a byte array and have no key parameters associated with them, e.g., DES or\n Triple DES keys.", "codes": ["public class SecretKeySpec\nextends Object\nimplements KeySpec, SecretKey"], "fields": [], "methods": [{"method_name": "getAlgorithm", "method_sig": "public String getAlgorithm()", "description": "Returns the name of the algorithm associated with this secret key."}, {"method_name": "getFormat", "method_sig": "public String getFormat()", "description": "Returns the name of the encoding format for this secret key."}, {"method_name": "getEncoded", "method_sig": "public byte[] getEncoded()", "description": "Returns the key material of this secret key."}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Calculates a hash code value for the object.\n Objects that are equal will also have the same hashcode."}, {"method_name": "equals", "method_sig": "public boolean equals (Object obj)", "description": "Tests for equality between the specified object and this\n object. Two SecretKeySpec objects are considered equal if\n they are both SecretKey instances which have the\n same case-insensitive algorithm name and key encoding."}]}