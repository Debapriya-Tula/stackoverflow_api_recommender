{"name": "Class ModelMBeanNotificationInfo", "module": "java.management", "package": "javax.management.modelmbean", "text": "The ModelMBeanNotificationInfo object describes a notification emitted\n by a ModelMBean.\n It is a subclass of MBeanNotificationInfo with the addition of an\n associated Descriptor and an implementation of the Descriptor interface.\n\n The fields in the descriptor are defined, but not limited to, the following.\n Note that when the Type in this table is Number, a String that is the decimal\n representation of a Long can also be used.\n\nModelMBeanNotificationInfo Fields\n\nNameTypeMeaning\n\n\nnameString\nNotification name.\ndescriptorTypeString\nMust be \"notification\".\nseverityNumber\n0-6 where 0: unknown; 1: non-recoverable;\n         2: critical, failure; 3: major, severe;\n         4: minor, marginal, error; 5: warning;\n         6: normal, cleared, informative\nmessageIDString\nUnique key for message text (to allow translation, analysis).\nmessageTextString\nText of notification.\nlogString\nT - log message, F - do not log message.\nlogfileString\nfully qualified file name appropriate for operating system.\nvisibilityNumber\n1-4 where 1: always visible 4: rarely visible.\npresentationStringString\nXML formatted string to allow presentation of data.\n\n\nThe default descriptor contains the name, descriptorType,\n displayName and severity(=6) fields.  The default value of the name\n and displayName fields is the name of the Notification class (as\n specified by the name parameter of the\n ModelMBeanNotificationInfo constructor).\nThe serialVersionUID of this class is -7445681389570207141L.", "codes": ["public class ModelMBeanNotificationInfo\nextends MBeanNotificationInfo\nimplements DescriptorAccess"], "fields": [], "methods": [{"method_name": "clone", "method_sig": "public Object clone()", "description": "Creates and returns a new ModelMBeanNotificationInfo which is a\n duplicate of this ModelMBeanNotificationInfo."}, {"method_name": "getDescriptor", "method_sig": "public Descriptor getDescriptor()", "description": "Returns a copy of the associated Descriptor for the\n ModelMBeanNotificationInfo."}, {"method_name": "setDescriptor", "method_sig": "public void setDescriptor (Descriptor inDescriptor)", "description": "Sets associated Descriptor (full replace) for the\n ModelMBeanNotificationInfo If the new Descriptor is null,\n then the associated Descriptor reverts to a default\n descriptor.  The Descriptor is validated before it is\n assigned.  If the new Descriptor is invalid, then a\n RuntimeOperationsException wrapping an\n IllegalArgumentException is thrown."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns a human readable string containing\n ModelMBeanNotificationInfo."}]}