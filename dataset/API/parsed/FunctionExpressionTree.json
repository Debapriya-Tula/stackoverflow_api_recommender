{"name": "Interface FunctionExpressionTree", "module": "jdk.scripting.nashorn", "package": "jdk.nashorn.api.tree", "text": "A tree node for function expressions including arrow functions.\n\n For example:\n \n   var func = function\n      ( parameters )\n      body\n \n\n   var func = (x) => x+1\n ", "codes": ["@Deprecated(since=\"11\",\n            forRemoval=true)\npublic interface FunctionExpressionTree\nextends ExpressionTree"], "fields": [], "methods": [{"method_name": "getName", "method_sig": "IdentifierTree getName()", "description": "Returns the name of the function being declared."}, {"method_name": "getParameters", "method_sig": "List<? extends ExpressionTree> getParameters()", "description": "Returns the parameters of this function."}, {"method_name": "getBody", "method_sig": "Tree getBody()", "description": "Returns the body of this function. This may be a BlockTree when this\n function has a block body. This is an ExpressionTree when the function body\n is a concise expression as in an expression arrow, or in an expression closure."}, {"method_name": "isStrict", "method_sig": "boolean isStrict()", "description": "Is this a strict function?"}, {"method_name": "isArrow", "method_sig": "boolean isArrow()", "description": "Is this a arrow function?"}, {"method_name": "isGenerator", "method_sig": "boolean isGenerator()", "description": "Is this a generator function?"}]}