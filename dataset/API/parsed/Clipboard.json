{"name": "Class Clipboard", "module": "java.datatransfer", "package": "java.awt.datatransfer", "text": "A class that implements a mechanism to transfer data using cut/copy/paste\n operations.\n \nFlavorListeners may be registered on an instance of the Clipboard\n class to be notified about changes to the set of DataFlavors\n available on this clipboard (see addFlavorListener(java.awt.datatransfer.FlavorListener)).", "codes": ["public class Clipboard\nextends Object"], "fields": [{"field_name": "owner", "field_sig": "protected\u00a0ClipboardOwner owner", "description": "The owner of the clipboard."}, {"field_name": "contents", "field_sig": "protected\u00a0Transferable contents", "description": "Contents of the clipboard."}], "methods": [{"method_name": "getName", "method_sig": "public String getName()", "description": "Returns the name of this clipboard object."}, {"method_name": "setContents", "method_sig": "public void setContents (Transferable contents,\n                        ClipboardOwner owner)", "description": "Sets the current contents of the clipboard to the specified transferable\n object and registers the specified clipboard owner as the owner of the\n new contents.\n \n If there is an existing owner different from the argument owner,\n that owner is notified that it no longer holds ownership of the clipboard\n contents via an invocation of ClipboardOwner.lostOwnership() on\n that owner. An implementation of setContents() is free not to\n invoke lostOwnership() directly from this method. For example,\n lostOwnership() may be invoked later on a different thread. The\n same applies to FlavorListeners registered on this clipboard.\n \n The method throws IllegalStateException if the clipboard is\n currently unavailable. For example, on some platforms, the system\n clipboard is unavailable while it is accessed by another application."}, {"method_name": "getContents", "method_sig": "public Transferable getContents (Object requestor)", "description": "Returns a transferable object representing the current contents of the\n clipboard. If the clipboard currently has no contents, it returns\n null. The parameter Object requestor is not currently used. The\n method throws IllegalStateException if the clipboard is currently\n unavailable. For example, on some platforms, the system clipboard is\n unavailable while it is accessed by another application."}, {"method_name": "getAvailableDataFlavors", "method_sig": "public DataFlavor[] getAvailableDataFlavors()", "description": "Returns an array of DataFlavors in which the current contents of\n this clipboard can be provided. If there are no DataFlavors\n available, this method returns a zero-length array."}, {"method_name": "isDataFlavorAvailable", "method_sig": "public boolean isDataFlavorAvailable (DataFlavor flavor)", "description": "Returns whether or not the current contents of this clipboard can be\n provided in the specified DataFlavor."}, {"method_name": "getData", "method_sig": "public Object getData (DataFlavor flavor)\n               throws UnsupportedFlavorException,\n                      IOException", "description": "Returns an object representing the current contents of this clipboard in\n the specified DataFlavor. The class of the object returned is\n defined by the representation class of flavor."}, {"method_name": "addFlavorListener", "method_sig": "public void addFlavorListener (FlavorListener listener)", "description": "Registers the specified FlavorListener to receive\n FlavorEvents from this clipboard. If listener is\n null, no exception is thrown and no action is performed."}, {"method_name": "removeFlavorListener", "method_sig": "public void removeFlavorListener (FlavorListener listener)", "description": "Removes the specified FlavorListener so that it no longer\n receives FlavorEvents from this Clipboard. This method\n performs no function, nor does it throw an exception, if the listener\n specified by the argument was not previously added to this\n Clipboard. If listener is null, no exception is\n thrown and no action is performed."}, {"method_name": "getFlavorListeners", "method_sig": "public FlavorListener[] getFlavorListeners()", "description": "Returns an array of all the FlavorListeners currently registered\n on this Clipboard."}]}