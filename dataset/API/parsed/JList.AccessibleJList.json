{"name": "Class JList.AccessibleJList", "module": "java.desktop", "package": "javax.swing", "text": "This class implements accessibility support for the\n JList class. It provides an implementation of the\n Java Accessibility API appropriate to list user-interface\n elements.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["protected class JList.AccessibleJList\nextends JComponent.AccessibleJComponent\nimplements AccessibleSelection, PropertyChangeListener, ListSelectionListener, ListDataListener"], "fields": [], "methods": [{"method_name": "propertyChange", "method_sig": "public void propertyChange (PropertyChangeEvent e)", "description": "Property Change Listener change method. Used to track changes\n to the DataModel and ListSelectionModel, in order to re-set\n listeners to those for reporting changes there via the Accessibility\n PropertyChange mechanism."}, {"method_name": "valueChanged", "method_sig": "public void valueChanged (ListSelectionEvent e)", "description": "List Selection Listener value change method. Used to fire\n the property change"}, {"method_name": "intervalAdded", "method_sig": "public void intervalAdded (ListDataEvent e)", "description": "List Data Listener interval added method. Used to fire the visible data property change"}, {"method_name": "intervalRemoved", "method_sig": "public void intervalRemoved (ListDataEvent e)", "description": "List Data Listener interval removed method. Used to fire the visible data property change"}, {"method_name": "contentsChanged", "method_sig": "public void contentsChanged (ListDataEvent e)", "description": "List Data Listener contents changed method. Used to fire the visible data property change"}, {"method_name": "getAccessibleStateSet", "method_sig": "public AccessibleStateSet getAccessibleStateSet()", "description": "Get the state set of this object."}, {"method_name": "getAccessibleRole", "method_sig": "public AccessibleRole getAccessibleRole()", "description": "Get the role of this object."}, {"method_name": "getAccessibleAt", "method_sig": "public Accessible getAccessibleAt (Point p)", "description": "Returns the Accessible child contained at\n the local coordinate Point, if one exists.\n Otherwise returns null."}, {"method_name": "getAccessibleChildrenCount", "method_sig": "public int getAccessibleChildrenCount()", "description": "Returns the number of accessible children in the object.  If all\n of the children of this object implement Accessible, than this\n method should return the number of children of this object."}, {"method_name": "getAccessibleChild", "method_sig": "public Accessible getAccessibleChild (int i)", "description": "Return the nth Accessible child of the object."}, {"method_name": "getAccessibleSelection", "method_sig": "public AccessibleSelection getAccessibleSelection()", "description": "Get the AccessibleSelection associated with this object.  In the\n implementation of the Java Accessibility API for this class,\n return this object, which is responsible for implementing the\n AccessibleSelection interface on behalf of itself."}, {"method_name": "getAccessibleSelectionCount", "method_sig": "public int getAccessibleSelectionCount()", "description": "Returns the number of items currently selected.\n If no items are selected, the return value will be 0."}, {"method_name": "getAccessibleSelection", "method_sig": "public Accessible getAccessibleSelection (int i)", "description": "Returns an Accessible representing the specified selected item\n in the object.  If there isn't a selection, or there are\n fewer items selected than the integer passed in, the return\n value will be null."}, {"method_name": "isAccessibleChildSelected", "method_sig": "public boolean isAccessibleChildSelected (int i)", "description": "Returns true if the current child of this object is selected."}, {"method_name": "addAccessibleSelection", "method_sig": "public void addAccessibleSelection (int i)", "description": "Adds the specified selected item in the object to the object's\n selection.  If the object supports multiple selections,\n the specified item is added to any existing selection, otherwise\n it replaces any existing selection in the object.  If the\n specified item is already selected, this method has no effect."}, {"method_name": "removeAccessibleSelection", "method_sig": "public void removeAccessibleSelection (int i)", "description": "Removes the specified selected item in the object from the object's\n selection.  If the specified item isn't currently selected, this\n method has no effect."}, {"method_name": "clearAccessibleSelection", "method_sig": "public void clearAccessibleSelection()", "description": "Clears the selection in the object, so that nothing in the\n object is selected."}, {"method_name": "selectAllAccessibleSelection", "method_sig": "public void selectAllAccessibleSelection()", "description": "Causes every selected item in the object to be selected\n if the object supports multiple selections."}]}