{"name": "Class StateEdit", "module": "java.desktop", "package": "javax.swing.undo", "text": "StateEdit is a general edit for objects that change state.\n Objects being edited must conform to the StateEditable interface.\nThis edit class works by asking an object to store it's state in\n Hashtables before and after editing occurs.  Upon undo or redo the\n object is told to restore it's state from these Hashtables.\n\n A state edit is used as follows:\n \n      // Create the edit during the \"before\" state of the object\n      StateEdit newEdit = new StateEdit(myObject);\n      // Modify the object\n      myObject.someStateModifyingMethod();\n      // \"end\" the edit when you are done modifying the object\n      newEdit.end();\n \nNote that when a StateEdit ends, it removes redundant state from\n the Hashtables - A state Hashtable is not guaranteed to contain all\n keys/values placed into it when the state is stored!", "codes": ["public class StateEdit\nextends AbstractUndoableEdit"], "fields": [{"field_name": "RCSID", "field_sig": "protected static final\u00a0String RCSID", "description": "Obsolete RCS version identity."}, {"field_name": "object", "field_sig": "protected\u00a0StateEditable object", "description": "The object being edited"}, {"field_name": "preState", "field_sig": "protected\u00a0Hashtable<Object,\u200bObject> preState", "description": "The state information prior to the edit"}, {"field_name": "postState", "field_sig": "protected\u00a0Hashtable<Object,\u200bObject> postState", "description": "The state information after the edit"}, {"field_name": "undoRedoName", "field_sig": "protected\u00a0String undoRedoName", "description": "The undo/redo presentation name"}], "methods": [{"method_name": "init", "method_sig": "protected void init (StateEditable anObject,\n                    String name)", "description": "Initialize the state edit."}, {"method_name": "end", "method_sig": "public void end()", "description": "Gets the post-edit state of the StateEditable object and\n ends the edit."}, {"method_name": "undo", "method_sig": "public void undo()", "description": "Tells the edited object to apply the state prior to the edit"}, {"method_name": "redo", "method_sig": "public void redo()", "description": "Tells the edited object to apply the state after the edit"}, {"method_name": "getPresentationName", "method_sig": "public String getPresentationName()", "description": "Gets the presentation name for this edit"}, {"method_name": "removeRedundantState", "method_sig": "protected void removeRedundantState()", "description": "Remove redundant key/values in state hashtables."}]}