{"name": "Interface Doclet.Option", "module": "jdk.javadoc", "package": "jdk.javadoc.doclet", "text": "An encapsulation of option name, aliases, parameters and descriptions\n as used by the Doclet.", "codes": ["public static interface Doclet.Option"], "fields": [], "methods": [{"method_name": "getArgumentCount", "method_sig": "int getArgumentCount()", "description": "Returns the number of arguments, this option will consume."}, {"method_name": "getDescription", "method_sig": "String getDescription()", "description": "Returns the description of the option. For instance, the option \"group\", would\n return the synopsis of the option such as, \"groups the documents\"."}, {"method_name": "getKind", "method_sig": "Doclet.Option.Kind getKind()", "description": "Returns the option kind."}, {"method_name": "getNames", "method_sig": "List<String> getNames()", "description": "Returns the list of names that may be used to identify the option. For instance, the\n list could be [\"-classpath\", \"--class-path\"] for the\n option \"-classpath\", with an alias \"--class-path\"."}, {"method_name": "getParameters", "method_sig": "String getParameters()", "description": "Returns the parameters of the option. For instance \"name <p1>:<p2>..\""}, {"method_name": "process", "method_sig": "boolean process (String option,\n                List<String> arguments)", "description": "Processes the option and arguments as needed. This method will\n be invoked if the given option name matches the option."}]}