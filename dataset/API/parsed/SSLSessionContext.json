{"name": "Interface SSLSessionContext", "module": "java.base", "package": "javax.net.ssl", "text": "A SSLSessionContext represents a set of\n SSLSessions associated with a single entity. For example,\n it could be associated with a server or client who participates in many\n sessions concurrently.\n \n Not all environments will contain session contexts.\n \n There are SSLSessionContext parameters that affect how\n sessions are stored:\n \nSessions can be set to expire after a specified\n      time limit.\n      The number of sessions that can be stored in context\n      can be limited.\n \n A session can be retrieved based on its session id, and all session id's\n in a SSLSessionContext can be listed.", "codes": ["public interface SSLSessionContext"], "fields": [], "methods": [{"method_name": "getSession", "method_sig": "SSLSession getSession (byte[] sessionId)", "description": "Returns the SSLSession bound to the specified session id."}, {"method_name": "getIds", "method_sig": "Enumeration<byte[]> getIds()", "description": "Returns an Enumeration of all session id's grouped under this\n SSLSessionContext."}, {"method_name": "setSessionTimeout", "method_sig": "void setSessionTimeout (int seconds)\n                throws IllegalArgumentException", "description": "Sets the timeout limit for SSLSession objects grouped\n under this SSLSessionContext.\n \n If the timeout limit is set to 't' seconds, a session exceeds the\n timeout limit 't' seconds after its creation time.\n When the timeout limit is exceeded for a session, the\n SSLSession object is invalidated and future connections\n cannot resume or rejoin the session.\n A check for sessions exceeding the timeout is made immediately whenever\n the timeout limit is changed for this SSLSessionContext."}, {"method_name": "getSessionTimeout", "method_sig": "int getSessionTimeout()", "description": "Returns the timeout limit of SSLSession objects grouped\n under this SSLSessionContext.\n \n If the timeout limit is set to 't' seconds, a session exceeds the\n timeout limit 't' seconds after its creation time.\n When the timeout limit is exceeded for a session, the\n SSLSession object is invalidated and future connections\n cannot resume or rejoin the session.\n A check for sessions exceeding the timeout limit is made immediately\n whenever the timeout limit is changed for this\n SSLSessionContext."}, {"method_name": "setSessionCacheSize", "method_sig": "void setSessionCacheSize (int size)\n                  throws IllegalArgumentException", "description": "Sets the size of the cache used for storing\n SSLSession objects grouped under this\n SSLSessionContext."}, {"method_name": "getSessionCacheSize", "method_sig": "int getSessionCacheSize()", "description": "Returns the size of the cache used for storing\n SSLSession objects grouped under this\n SSLSessionContext."}]}