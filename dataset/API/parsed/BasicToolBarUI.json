{"name": "Class BasicToolBarUI", "module": "java.desktop", "package": "javax.swing.plaf.basic", "text": "A Basic L&F implementation of ToolBarUI.  This implementation\n is a \"combined\" view/controller.", "codes": ["public class BasicToolBarUI\nextends ToolBarUI\nimplements SwingConstants"], "fields": [{"field_name": "toolBar", "field_sig": "protected\u00a0JToolBar toolBar", "description": "The instance of JToolBar."}, {"field_name": "dragWindow", "field_sig": "protected\u00a0BasicToolBarUI.DragWindow dragWindow", "description": "The instance of DragWindow."}, {"field_name": "focusedCompIndex", "field_sig": "protected\u00a0int focusedCompIndex", "description": "The index of the focused component."}, {"field_name": "dockingColor", "field_sig": "protected\u00a0Color dockingColor", "description": "The background color of the docking border."}, {"field_name": "floatingColor", "field_sig": "protected\u00a0Color floatingColor", "description": "The background color of the not docking border."}, {"field_name": "dockingBorderColor", "field_sig": "protected\u00a0Color dockingBorderColor", "description": "The color of the docking border."}, {"field_name": "floatingBorderColor", "field_sig": "protected\u00a0Color floatingBorderColor", "description": "The color of the not docking border."}, {"field_name": "dockingListener", "field_sig": "protected\u00a0MouseInputListener dockingListener", "description": "The instance of a MouseInputListener."}, {"field_name": "propertyListener", "field_sig": "protected\u00a0PropertyChangeListener propertyListener", "description": "The instance of a PropertyChangeListener."}, {"field_name": "toolBarContListener", "field_sig": "protected\u00a0ContainerListener toolBarContListener", "description": "The instance of a ContainerListener."}, {"field_name": "toolBarFocusListener", "field_sig": "protected\u00a0FocusListener toolBarFocusListener", "description": "The instance of a FocusListener."}, {"field_name": "constraintBeforeFloating", "field_sig": "protected\u00a0String constraintBeforeFloating", "description": "The layout before floating."}, {"field_name": "upKey", "field_sig": "@Deprecated\nprotected\u00a0KeyStroke upKey", "description": "As of Java 2 platform v1.3 this previously undocumented field is no\n longer used.\n Key bindings are now defined by the LookAndFeel, please refer to\n the key bindings specification for further details."}, {"field_name": "downKey", "field_sig": "@Deprecated\nprotected\u00a0KeyStroke downKey", "description": "As of Java 2 platform v1.3 this previously undocumented field is no\n longer used.\n Key bindings are now defined by the LookAndFeel, please refer to\n the key bindings specification for further details."}, {"field_name": "leftKey", "field_sig": "@Deprecated\nprotected\u00a0KeyStroke leftKey", "description": "As of Java 2 platform v1.3 this previously undocumented field is no\n longer used.\n Key bindings are now defined by the LookAndFeel, please refer to\n the key bindings specification for further details."}, {"field_name": "rightKey", "field_sig": "@Deprecated\nprotected\u00a0KeyStroke rightKey", "description": "As of Java 2 platform v1.3 this previously undocumented field is no\n longer used.\n Key bindings are now defined by the LookAndFeel, please refer to\n the key bindings specification for further details."}], "methods": [{"method_name": "createUI", "method_sig": "public static ComponentUI createUI (JComponent c)", "description": "Constructs a new instance of BasicToolBarUI."}, {"method_name": "installDefaults", "method_sig": "protected void installDefaults()", "description": "Installs default properties."}, {"method_name": "uninstallDefaults", "method_sig": "protected void uninstallDefaults()", "description": "Uninstalls default properties."}, {"method_name": "installComponents", "method_sig": "protected void installComponents()", "description": "Registers components."}, {"method_name": "uninstallComponents", "method_sig": "protected void uninstallComponents()", "description": "Unregisters components."}, {"method_name": "installListeners", "method_sig": "protected void installListeners()", "description": "Registers listeners."}, {"method_name": "uninstallListeners", "method_sig": "protected void uninstallListeners()", "description": "Unregisters listeners."}, {"method_name": "installKeyboardActions", "method_sig": "protected void installKeyboardActions()", "description": "Registers keyboard actions."}, {"method_name": "uninstallKeyboardActions", "method_sig": "protected void uninstallKeyboardActions()", "description": "Unregisters keyboard actions."}, {"method_name": "navigateFocusedComp", "method_sig": "protected void navigateFocusedComp (int direction)", "description": "Navigates the focused component."}, {"method_name": "createRolloverBorder", "method_sig": "protected Border createRolloverBorder()", "description": "Creates a rollover border for toolbar components. The\n rollover border will be installed if rollover borders are\n enabled.\n \n Override this method to provide an alternate rollover border."}, {"method_name": "createNonRolloverBorder", "method_sig": "protected Border createNonRolloverBorder()", "description": "Creates the non rollover border for toolbar components. This\n border will be installed as the border for components added\n to the toolbar if rollover borders are not enabled.\n \n Override this method to provide an alternate rollover border."}, {"method_name": "createFloatingFrame", "method_sig": "protected JFrame createFloatingFrame (JToolBar toolbar)", "description": "No longer used, use BasicToolBarUI.createFloatingWindow(JToolBar)"}, {"method_name": "createFloatingWindow", "method_sig": "protected RootPaneContainer createFloatingWindow (JToolBar toolbar)", "description": "Creates a window which contains the toolbar after it has been\n dragged out from its container"}, {"method_name": "createDragWindow", "method_sig": "protected BasicToolBarUI.DragWindow createDragWindow (JToolBar toolbar)", "description": "Returns an instance of DragWindow."}, {"method_name": "isRolloverBorders", "method_sig": "public boolean isRolloverBorders()", "description": "Returns a flag to determine whether rollover button borders\n are enabled."}, {"method_name": "setRolloverBorders", "method_sig": "public void setRolloverBorders (boolean rollover)", "description": "Sets the flag for enabling rollover borders on the toolbar and it will\n also install the appropriate border depending on the state of the flag."}, {"method_name": "installRolloverBorders", "method_sig": "protected void installRolloverBorders (JComponent c)", "description": "Installs rollover borders on all the child components of the JComponent.\n \n This is a convenience method to call setBorderToRollover\n for each child component."}, {"method_name": "installNonRolloverBorders", "method_sig": "protected void installNonRolloverBorders (JComponent c)", "description": "Installs non-rollover borders on all the child components of the JComponent.\n A non-rollover border is the border that is installed on the child component\n while it is in the toolbar.\n \n This is a convenience method to call setBorderToNonRollover\n for each child component."}, {"method_name": "installNormalBorders", "method_sig": "protected void installNormalBorders (JComponent c)", "description": "Installs normal borders on all the child components of the JComponent.\n A normal border is the original border that was installed on the child\n component before it was added to the toolbar.\n \n This is a convenience method to call setBorderNormal\n for each child component."}, {"method_name": "setBorderToRollover", "method_sig": "protected void setBorderToRollover (Component c)", "description": "Sets the border of the component to have a rollover border which\n was created by the createRolloverBorder() method."}, {"method_name": "getRolloverBorder", "method_sig": "protected Border getRolloverBorder (AbstractButton b)", "description": "Returns a rollover border for the button."}, {"method_name": "setBorderToNonRollover", "method_sig": "protected void setBorderToNonRollover (Component c)", "description": "Sets the border of the component to have a non-rollover border which\n was created by the createNonRolloverBorder() method."}, {"method_name": "getNonRolloverBorder", "method_sig": "protected Border getNonRolloverBorder (AbstractButton b)", "description": "Returns a non-rollover border for the button."}, {"method_name": "setBorderToNormal", "method_sig": "protected void setBorderToNormal (Component c)", "description": "Sets the border of the component to have a normal border.\n A normal border is the original border that was installed on the child\n component before it was added to the toolbar."}, {"method_name": "setFloatingLocation", "method_sig": "public void setFloatingLocation (int x,\n                                int y)", "description": "Sets the floating location."}, {"method_name": "isFloating", "method_sig": "public boolean isFloating()", "description": "Returns true if the JToolBar is floating"}, {"method_name": "setFloating", "method_sig": "public void setFloating (boolean b,\n                        Point p)", "description": "Sets the floating property."}, {"method_name": "setOrientation", "method_sig": "public void setOrientation (int orientation)", "description": "Sets the tool bar's orientation."}, {"method_name": "getDockingColor", "method_sig": "public Color getDockingColor()", "description": "Gets the color displayed when over a docking area"}, {"method_name": "setDockingColor", "method_sig": "public void setDockingColor (Color c)", "description": "Sets the color displayed when over a docking area"}, {"method_name": "getFloatingColor", "method_sig": "public Color getFloatingColor()", "description": "Gets the color displayed when over a floating area"}, {"method_name": "setFloatingColor", "method_sig": "public void setFloatingColor (Color c)", "description": "Sets the color displayed when over a floating area"}, {"method_name": "canDock", "method_sig": "public boolean canDock (Component c,\n                       Point p)", "description": "Returns true if the JToolBar can dock at the given position."}, {"method_name": "dragTo", "method_sig": "protected void dragTo (Point position,\n                      Point origin)", "description": "The method is used to drag DragWindow during the JToolBar\n is being dragged."}, {"method_name": "floatAt", "method_sig": "protected void floatAt (Point position,\n                       Point origin)", "description": "The method is called at end of dragging to place the frame in either\n its original place or in its floating frame."}, {"method_name": "createToolBarContListener", "method_sig": "protected ContainerListener createToolBarContListener()", "description": "Returns an instance of ContainerListener."}, {"method_name": "createToolBarFocusListener", "method_sig": "protected FocusListener createToolBarFocusListener()", "description": "Returns an instance of FocusListener."}, {"method_name": "createPropertyListener", "method_sig": "protected PropertyChangeListener createPropertyListener()", "description": "Returns an instance of PropertyChangeListener."}, {"method_name": "createDockingListener", "method_sig": "protected MouseInputListener createDockingListener()", "description": "Returns an instance of MouseInputListener."}, {"method_name": "createFrameListener", "method_sig": "protected WindowListener createFrameListener()", "description": "Constructs a new instance of WindowListener."}, {"method_name": "paintDragWindow", "method_sig": "protected void paintDragWindow (Graphics g)", "description": "Paints the contents of the window used for dragging."}]}