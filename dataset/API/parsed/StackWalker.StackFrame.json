{"name": "Interface StackWalker.StackFrame", "module": "java.base", "package": "java.lang", "text": "A StackFrame object represents a method invocation returned by\n StackWalker.\n\n  The getDeclaringClass() method may be unsupported as determined\n by the stack walking options of a stack walker.", "codes": ["public static interface StackWalker.StackFrame"], "fields": [], "methods": [{"method_name": "getClassName", "method_sig": "String getClassName()", "description": "Gets the binary name\n of the declaring class of the method represented by this stack frame."}, {"method_name": "getMethodName", "method_sig": "String getMethodName()", "description": "Gets the name of the method represented by this stack frame."}, {"method_name": "getDeclaringClass", "method_sig": "Class<?> getDeclaringClass()", "description": "Gets the declaring Class for the method represented by\n this stack frame."}, {"method_name": "getMethodType", "method_sig": "default MethodType getMethodType()", "description": "Returns the MethodType representing the parameter types and\n the return type for the method represented by this stack frame."}, {"method_name": "getDescriptor", "method_sig": "default String getDescriptor()", "description": "Returns the descriptor of the method represented by\n this stack frame as defined by\n The Java Virtual Machine Specification."}, {"method_name": "getByteCodeIndex", "method_sig": "int getByteCodeIndex()", "description": "Returns the index to the code array of the Code attribute\n containing the execution point represented by this stack frame.\n The code array gives the actual bytes of Java Virtual Machine code\n that implement the method."}, {"method_name": "getFileName", "method_sig": "String getFileName()", "description": "Returns the name of the source file containing the execution point\n represented by this stack frame.  Generally, this corresponds\n to the SourceFile attribute of the relevant class\n file as defined by The Java Virtual Machine Specification.\n In some systems, the name may refer to some source code unit\n other than a file, such as an entry in a source repository."}, {"method_name": "getLineNumber", "method_sig": "int getLineNumber()", "description": "Returns the line number of the source line containing the execution\n point represented by this stack frame.  Generally, this is\n derived from the LineNumberTable attribute of the relevant\n class file as defined by The Java Virtual Machine\n Specification."}, {"method_name": "isNativeMethod", "method_sig": "boolean isNativeMethod()", "description": "Returns true if the method containing the execution point\n represented by this stack frame is a native method."}, {"method_name": "toStackTraceElement", "method_sig": "StackTraceElement toStackTraceElement()", "description": "Gets a StackTraceElement for this stack frame."}]}