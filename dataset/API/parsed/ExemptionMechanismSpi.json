{"name": "Class ExemptionMechanismSpi", "module": "java.base", "package": "javax.crypto", "text": "This class defines the Service Provider Interface (SPI)\n for the ExemptionMechanism class.\n All the abstract methods in this class must be implemented by each\n cryptographic service provider who wishes to supply the implementation\n of a particular exemption mechanism.", "codes": ["public abstract class ExemptionMechanismSpi\nextends Object"], "fields": [], "methods": [{"method_name": "engineGetOutputSize", "method_sig": "protected abstract int engineGetOutputSize (int inputLen)", "description": "Returns the length in bytes that an output buffer would need to be in\n order to hold the result of the next\n engineGenExemptionBlob\n operation, given the input length inputLen (in bytes).\n\n The actual output length of the next\n engineGenExemptionBlob\n call may be smaller than the length returned by this method."}, {"method_name": "engineInit", "method_sig": "protected abstract void engineInit (Key key)\n                            throws InvalidKeyException,\n                                   ExemptionMechanismException", "description": "Initializes this exemption mechanism with a key.\n\n If this exemption mechanism requires any algorithm parameters\n that cannot be derived from the given key, the underlying\n exemption mechanism implementation is supposed to generate the required\n parameters itself (using provider-specific default values); in the case\n that algorithm parameters must be specified by the caller, an\n InvalidKeyException is raised."}, {"method_name": "engineInit", "method_sig": "protected abstract void engineInit (Key key,\n                                   AlgorithmParameterSpec params)\n                            throws InvalidKeyException,\n                                   InvalidAlgorithmParameterException,\n                                   ExemptionMechanismException", "description": "Initializes this exemption mechanism with a key and a set of algorithm\n parameters.\n\n If this exemption mechanism requires any algorithm parameters and\n params is null, the underlying exemption mechanism\n implementation is supposed to generate the required parameters\n itself (using provider-specific default values); in the case that\n algorithm parameters must be specified by the caller, an\n InvalidAlgorithmParameterException is raised."}, {"method_name": "engineInit", "method_sig": "protected abstract void engineInit (Key key,\n                                   AlgorithmParameters params)\n                            throws InvalidKeyException,\n                                   InvalidAlgorithmParameterException,\n                                   ExemptionMechanismException", "description": "Initializes this exemption mechanism with a key and a set of algorithm\n parameters.\n\n If this exemption mechanism requires any algorithm parameters\n and params is null, the underlying exemption mechanism\n implementation is supposed to generate the required parameters\n itself (using provider-specific default values); in the case that\n algorithm parameters must be specified by the caller, an\n InvalidAlgorithmParameterException is raised."}, {"method_name": "engineGenExemptionBlob", "method_sig": "protected abstract byte[] engineGenExemptionBlob()\n                                          throws ExemptionMechanismException", "description": "Generates the exemption mechanism key blob."}, {"method_name": "engineGenExemptionBlob", "method_sig": "protected abstract int engineGenExemptionBlob (byte[] output,\n                                              int outputOffset)\n                                       throws ShortBufferException,\n                                              ExemptionMechanismException", "description": "Generates the exemption mechanism key blob, and stores the result in\n the output buffer, starting at outputOffset\n inclusive.\n\n If the output buffer is too small to hold the result,\n a ShortBufferException is thrown. In this case, repeat this\n call with a larger output buffer. Use\n engineGetOutputSize to determine\n how big the output buffer should be."}]}