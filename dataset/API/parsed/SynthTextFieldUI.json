{"name": "Class SynthTextFieldUI", "module": "java.desktop", "package": "javax.swing.plaf.synth", "text": "Provides the Synth L&F UI delegate for JTextField.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["public class SynthTextFieldUI\nextends BasicTextFieldUI\nimplements SynthUI"], "fields": [], "methods": [{"method_name": "createUI", "method_sig": "public static ComponentUI createUI (JComponent c)", "description": "Creates a UI for a JTextField."}, {"method_name": "update", "method_sig": "public void update (Graphics g,\n                   JComponent c)", "description": "Notifies this UI delegate to repaint the specified component.\n This method paints the component background, then calls\n the paint(SynthContext,Graphics) method.\n\n In general, this method does not need to be overridden by subclasses.\n All Look and Feel rendering code should reside in the paint method."}, {"method_name": "paint", "method_sig": "protected void paint (SynthContext context,\n                     Graphics g)", "description": "Paints the specified component.\n This is routed to the BasicTextUI.paintSafely(java.awt.Graphics) method under\n the guarantee that the model does not change from the view of this\n thread while it is rendering (if the associated model is\n derived from AbstractDocument).  This enables the\n model to potentially be updated asynchronously."}, {"method_name": "paintBackground", "method_sig": "protected void paintBackground (Graphics g)", "description": "Paints a background for the view.  This will only be\n called if isOpaque() on the associated component is\n true.  The default is to paint the background color\n of the component.\n Overridden to do nothing."}, {"method_name": "propertyChange", "method_sig": "protected void propertyChange (PropertyChangeEvent evt)", "description": "This method gets called when a bound property is changed\n on the associated JTextComponent.  This is a hook\n which UI implementations may change to reflect how the\n UI displays bound properties of JTextComponent subclasses.\n This is implemented to do nothing (i.e. the response to\n properties in JTextComponent itself are handled prior\n to calling this method)."}]}