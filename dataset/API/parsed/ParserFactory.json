{"name": "Class ParserFactory", "module": "java.xml", "package": "org.xml.sax.helpers", "text": "Java-specific class for dynamically loading SAX parsers.\n\n \nThis module, both source code and documentation, is in the\n Public Domain, and comes with NO WARRANTY.\n See http://www.saxproject.org\n for further information.\n \nNote: This class is designed to work with the now-deprecated\n SAX1 Parser class.  SAX2 applications should use\n XMLReaderFactory instead.\nParserFactory is not part of the platform-independent definition\n of SAX; it is an additional convenience class designed\n specifically for Java XML application writers.  SAX applications\n can use the static methods in this class to allocate a SAX parser\n dynamically at run-time based either on the value of the\n `org.xml.sax.parser' system property or on a string containing the class\n name.\nNote that the application still requires an XML parser that\n implements SAX1.", "codes": ["@Deprecated(since=\"1.5\")\npublic class ParserFactory\nextends Object"], "fields": [], "methods": [{"method_name": "makeParser", "method_sig": "public static Parser makeParser()\n                         throws ClassNotFoundException,\n                                IllegalAccessException,\n                                InstantiationException,\n                                NullPointerException,\n                                ClassCastException", "description": "Create a new SAX parser using the `org.xml.sax.parser' system property.\n\n The named class must exist and must implement the\n Parser interface."}, {"method_name": "makeParser", "method_sig": "public static Parser makeParser (String className)\n                         throws ClassNotFoundException,\n                                IllegalAccessException,\n                                InstantiationException,\n                                ClassCastException", "description": "Create a new SAX parser object using the class name provided.\n\n The named class must exist and must implement the\n Parser interface."}]}