{"name": "Class EventType", "module": "jdk.jfr", "package": "jdk.jfr", "text": "Describes an event, its fields, settings and annotations.", "codes": ["public final class EventType\nextends Object"], "fields": [], "methods": [{"method_name": "getFields", "method_sig": "public List<ValueDescriptor> getFields()", "description": "Returns an immutable list of descriptors that describe the event fields of\n this event type."}, {"method_name": "getField", "method_sig": "public ValueDescriptor getField (String name)", "description": "Returns the field with the specified name, or null if it doesn't\n exist."}, {"method_name": "getName", "method_sig": "public String getName()", "description": "Returns an identifier for the event (for example,\n \"jdk.CPULoad\").\n \n The identifier is the fully qualified name of the event class, if not set using\n the Name annotation."}, {"method_name": "getLabel", "method_sig": "public String getLabel()", "description": "Returns a human-readable name (for example, \"CPU Load\").\n \n The label of an event class can be set with Label."}, {"method_name": "getId", "method_sig": "public long getId()", "description": "Returns a unique ID for this event type in the Java Virtual Machine (JVM)."}, {"method_name": "getAnnotationElements", "method_sig": "public List<AnnotationElement> getAnnotationElements()", "description": "Returns an immutable list of annotation elements for this event type."}, {"method_name": "isEnabled", "method_sig": "public boolean isEnabled()", "description": "Returns true if the event is enabled and at least one recording is\n running, false otherwise.\n \n By default, the event is enabled. The event can be enabled or disabled by\n setting the enabled setting to true or false, programmatically or by using a\n configuration file. The event can also be disabled by annotating event with\n the @Enabled(false) annotation."}, {"method_name": "getDescription", "method_sig": "public String getDescription()", "description": "Returns a short sentence that describes the event class.\n \n The description of an event class can be set with Description."}, {"method_name": "getAnnotation", "method_sig": "public <A extends Annotation> A getAnnotation (Class<A> annotationClass)", "description": "Returns the first annotation for the specified type if an annotation\n element with the same name is directly present, otherwise null."}, {"method_name": "getEventType", "method_sig": "public static EventType getEventType (Class<? extends Event> eventClass)", "description": "Returns the event type for an event class, or null if it doesn't\n exist."}, {"method_name": "getSettingDescriptors", "method_sig": "public List<SettingDescriptor> getSettingDescriptors()", "description": "Returns an immutable list of the setting descriptors that describe the available\n event settings for this event type."}, {"method_name": "getCategoryNames", "method_sig": "public List<String> getCategoryNames()", "description": "Returns the list of human-readable names that makes up the categories for\n this event type (for example, \"Java Application\", \"Statistics\")."}]}