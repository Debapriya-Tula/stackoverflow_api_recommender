{"name": "Class DefaultEditorKit", "module": "java.desktop", "package": "javax.swing.text", "text": "This is the set of things needed by a text component\n to be a reasonably functioning editor for some type\n of text document.  This implementation provides a default\n implementation which treats text as plain text and\n provides a minimal set of actions for a simple editor.\n\n \nNewlines\n\n There are two properties which deal with newlines.  The\n system property, line.separator, is defined to be\n platform-dependent, either \"\\n\", \"\\r\", or \"\\r\\n\".  There is also\n a property defined in DefaultEditorKit, called\n EndOfLineStringProperty,\n which is defined automatically when a document is loaded, to be\n the first occurrence of any of the newline characters.\n When a document is loaded, EndOfLineStringProperty\n is set appropriately, and when the document is written back out, the\n EndOfLineStringProperty is used.  But while the document\n is in memory, the \"\\n\" character is used to define a\n newline, regardless of how the newline is defined when\n the document is on disk.  Therefore, for searching purposes,\n \"\\n\" should always be used.  When a new document is created,\n and the EndOfLineStringProperty has not been defined,\n it will use the System property when writing out the\n document.\n Note that EndOfLineStringProperty is set\n on the Document using the get/putProperty\n methods.  Subclasses may override this behavior.\n\n ", "codes": ["public class DefaultEditorKit\nextends EditorKit"], "fields": [{"field_name": "EndOfLineStringProperty", "field_sig": "public static final\u00a0String EndOfLineStringProperty", "description": "When reading a document if a CRLF is encountered a property\n with this name is added and the value will be \"\\r\\n\"."}, {"field_name": "insertContentAction", "field_sig": "public static final\u00a0String insertContentAction", "description": "Name of the action to place content into the associated\n document.  If there is a selection, it is removed before\n the new content is added."}, {"field_name": "insertBreakAction", "field_sig": "public static final\u00a0String insertBreakAction", "description": "Name of the action to place a line/paragraph break into\n the document.  If there is a selection, it is removed before\n the break is added."}, {"field_name": "insertTabAction", "field_sig": "public static final\u00a0String insertTabAction", "description": "Name of the action to place a tab character into\n the document.  If there is a selection, it is removed before\n the tab is added."}, {"field_name": "deletePrevCharAction", "field_sig": "public static final\u00a0String deletePrevCharAction", "description": "Name of the action to delete the character of content that\n precedes the current caret position."}, {"field_name": "deleteNextCharAction", "field_sig": "public static final\u00a0String deleteNextCharAction", "description": "Name of the action to delete the character of content that\n follows the current caret position."}, {"field_name": "deleteNextWordAction", "field_sig": "public static final\u00a0String deleteNextWordAction", "description": "Name of the action to delete the word that\n follows the beginning of the selection."}, {"field_name": "deletePrevWordAction", "field_sig": "public static final\u00a0String deletePrevWordAction", "description": "Name of the action to delete the word that\n precedes the beginning of the selection."}, {"field_name": "readOnlyAction", "field_sig": "public static final\u00a0String readOnlyAction", "description": "Name of the action to set the editor into read-only\n mode."}, {"field_name": "writableAction", "field_sig": "public static final\u00a0String writableAction", "description": "Name of the action to set the editor into writeable\n mode."}, {"field_name": "cutAction", "field_sig": "public static final\u00a0String cutAction", "description": "Name of the action to cut the selected region\n and place the contents into the system clipboard."}, {"field_name": "copyAction", "field_sig": "public static final\u00a0String copyAction", "description": "Name of the action to copy the selected region\n and place the contents into the system clipboard."}, {"field_name": "pasteAction", "field_sig": "public static final\u00a0String pasteAction", "description": "Name of the action to paste the contents of the\n system clipboard into the selected region, or before the\n caret if nothing is selected."}, {"field_name": "beepAction", "field_sig": "public static final\u00a0String beepAction", "description": "Name of the action to create a beep."}, {"field_name": "pageUpAction", "field_sig": "public static final\u00a0String pageUpAction", "description": "Name of the action to page up vertically."}, {"field_name": "pageDownAction", "field_sig": "public static final\u00a0String pageDownAction", "description": "Name of the action to page down vertically."}, {"field_name": "forwardAction", "field_sig": "public static final\u00a0String forwardAction", "description": "Name of the Action for moving the caret\n logically forward one position."}, {"field_name": "backwardAction", "field_sig": "public static final\u00a0String backwardAction", "description": "Name of the Action for moving the caret\n logically backward one position."}, {"field_name": "selectionForwardAction", "field_sig": "public static final\u00a0String selectionForwardAction", "description": "Name of the Action for extending the selection\n by moving the caret logically forward one position."}, {"field_name": "selectionBackwardAction", "field_sig": "public static final\u00a0String selectionBackwardAction", "description": "Name of the Action for extending the selection\n by moving the caret logically backward one position."}, {"field_name": "upAction", "field_sig": "public static final\u00a0String upAction", "description": "Name of the Action for moving the caret\n logically upward one position."}, {"field_name": "downAction", "field_sig": "public static final\u00a0String downAction", "description": "Name of the Action for moving the caret\n logically downward one position."}, {"field_name": "selectionUpAction", "field_sig": "public static final\u00a0String selectionUpAction", "description": "Name of the Action for moving the caret\n logically upward one position, extending the selection."}, {"field_name": "selectionDownAction", "field_sig": "public static final\u00a0String selectionDownAction", "description": "Name of the Action for moving the caret\n logically downward one position, extending the selection."}, {"field_name": "beginWordAction", "field_sig": "public static final\u00a0String beginWordAction", "description": "Name of the Action for moving the caret\n to the beginning of a word."}, {"field_name": "endWordAction", "field_sig": "public static final\u00a0String endWordAction", "description": "Name of the Action for moving the caret\n to the end of a word."}, {"field_name": "selectionBeginWordAction", "field_sig": "public static final\u00a0String selectionBeginWordAction", "description": "Name of the Action for moving the caret\n to the beginning of a word, extending the selection."}, {"field_name": "selectionEndWordAction", "field_sig": "public static final\u00a0String selectionEndWordAction", "description": "Name of the Action for moving the caret\n to the end of a word, extending the selection."}, {"field_name": "previousWordAction", "field_sig": "public static final\u00a0String previousWordAction", "description": "Name of the Action for moving the caret to the\n beginning of the previous word."}, {"field_name": "nextWordAction", "field_sig": "public static final\u00a0String nextWordAction", "description": "Name of the Action for moving the caret to the\n beginning of the next word."}, {"field_name": "selectionPreviousWordAction", "field_sig": "public static final\u00a0String selectionPreviousWordAction", "description": "Name of the Action for moving the selection to the\n beginning of the previous word, extending the selection."}, {"field_name": "selectionNextWordAction", "field_sig": "public static final\u00a0String selectionNextWordAction", "description": "Name of the Action for moving the selection to the\n beginning of the next word, extending the selection."}, {"field_name": "beginLineAction", "field_sig": "public static final\u00a0String beginLineAction", "description": "Name of the Action for moving the caret\n to the beginning of a line."}, {"field_name": "endLineAction", "field_sig": "public static final\u00a0String endLineAction", "description": "Name of the Action for moving the caret\n to the end of a line."}, {"field_name": "selectionBeginLineAction", "field_sig": "public static final\u00a0String selectionBeginLineAction", "description": "Name of the Action for moving the caret\n to the beginning of a line, extending the selection."}, {"field_name": "selectionEndLineAction", "field_sig": "public static final\u00a0String selectionEndLineAction", "description": "Name of the Action for moving the caret\n to the end of a line, extending the selection."}, {"field_name": "beginParagraphAction", "field_sig": "public static final\u00a0String beginParagraphAction", "description": "Name of the Action for moving the caret\n to the beginning of a paragraph."}, {"field_name": "endParagraphAction", "field_sig": "public static final\u00a0String endParagraphAction", "description": "Name of the Action for moving the caret\n to the end of a paragraph."}, {"field_name": "selectionBeginParagraphAction", "field_sig": "public static final\u00a0String selectionBeginParagraphAction", "description": "Name of the Action for moving the caret\n to the beginning of a paragraph, extending the selection."}, {"field_name": "selectionEndParagraphAction", "field_sig": "public static final\u00a0String selectionEndParagraphAction", "description": "Name of the Action for moving the caret\n to the end of a paragraph, extending the selection."}, {"field_name": "beginAction", "field_sig": "public static final\u00a0String beginAction", "description": "Name of the Action for moving the caret\n to the beginning of the document."}, {"field_name": "endAction", "field_sig": "public static final\u00a0String endAction", "description": "Name of the Action for moving the caret\n to the end of the document."}, {"field_name": "selectionBeginAction", "field_sig": "public static final\u00a0String selectionBeginAction", "description": "Name of the Action for moving the caret\n to the beginning of the document."}, {"field_name": "selectionEndAction", "field_sig": "public static final\u00a0String selectionEndAction", "description": "Name of the Action for moving the caret\n to the end of the document."}, {"field_name": "selectWordAction", "field_sig": "public static final\u00a0String selectWordAction", "description": "Name of the Action for selecting a word around the caret."}, {"field_name": "selectLineAction", "field_sig": "public static final\u00a0String selectLineAction", "description": "Name of the Action for selecting a line around the caret."}, {"field_name": "selectParagraphAction", "field_sig": "public static final\u00a0String selectParagraphAction", "description": "Name of the Action for selecting a paragraph around the caret."}, {"field_name": "selectAllAction", "field_sig": "public static final\u00a0String selectAllAction", "description": "Name of the Action for selecting the entire document"}, {"field_name": "defaultKeyTypedAction", "field_sig": "public static final\u00a0String defaultKeyTypedAction", "description": "Name of the action that is executed by default if\n a key typed event is received and there\n is no keymap entry."}], "methods": [{"method_name": "getContentType", "method_sig": "public String getContentType()", "description": "Gets the MIME type of the data that this\n kit represents support for.  The default\n is text/plain."}, {"method_name": "getViewFactory", "method_sig": "public ViewFactory getViewFactory()", "description": "Fetches a factory that is suitable for producing\n views of any models that are produced by this\n kit.  The default is to have the UI produce the\n factory, so this method has no implementation."}, {"method_name": "getActions", "method_sig": "public Action[] getActions()", "description": "Fetches the set of commands that can be used\n on a text component that is using a model and\n view produced by this kit."}, {"method_name": "createCaret", "method_sig": "public Caret createCaret()", "description": "Fetches a caret that can navigate through views\n produced by the associated ViewFactory."}, {"method_name": "createDefaultDocument", "method_sig": "public Document createDefaultDocument()", "description": "Creates an uninitialized text storage model (PlainDocument)\n that is appropriate for this type of editor."}, {"method_name": "read", "method_sig": "public void read (InputStream in,\n                 Document doc,\n                 int pos)\n          throws IOException,\n                 BadLocationException", "description": "Inserts content from the given stream which is expected\n to be in a format appropriate for this kind of content\n handler."}, {"method_name": "write", "method_sig": "public void write (OutputStream out,\n                  Document doc,\n                  int pos,\n                  int len)\n           throws IOException,\n                  BadLocationException", "description": "Writes content from a document to the given stream\n in a format appropriate for this kind of content handler."}, {"method_name": "read", "method_sig": "public void read (Reader in,\n                 Document doc,\n                 int pos)\n          throws IOException,\n                 BadLocationException", "description": "Inserts content from the given stream, which will be\n treated as plain text."}, {"method_name": "write", "method_sig": "public void write (Writer out,\n                  Document doc,\n                  int pos,\n                  int len)\n           throws IOException,\n                  BadLocationException", "description": "Writes content from a document to the given stream\n as plain text."}]}