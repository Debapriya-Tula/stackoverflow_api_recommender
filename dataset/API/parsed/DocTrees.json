{"name": "Class DocTrees", "module": "jdk.compiler", "package": "com.sun.source.util", "text": "Provides access to syntax trees for doc comments.", "codes": ["public abstract class DocTrees\nextends Trees"], "fields": [], "methods": [{"method_name": "instance", "method_sig": "public static DocTrees instance (JavaCompiler.CompilationTask task)", "description": "Returns a DocTrees object for a given CompilationTask."}, {"method_name": "instance", "method_sig": "public static DocTrees instance (ProcessingEnvironment env)", "description": "Returns a DocTrees object for a given ProcessingEnvironment."}, {"method_name": "getBreakIterator", "method_sig": "public abstract BreakIterator getBreakIterator()", "description": "Returns the break iterator used to compute the first sentence of\n documentation comments.\n Returns null if none has been specified."}, {"method_name": "getDocCommentTree", "method_sig": "public abstract DocCommentTree getDocCommentTree (TreePath path)", "description": "Returns the doc comment tree, if any, for the Tree node identified by a given TreePath.\n Returns null if no doc comment was found."}, {"method_name": "getDocCommentTree", "method_sig": "public abstract DocCommentTree getDocCommentTree (Element e)", "description": "Returns the doc comment tree of the given element.\n Returns null if no doc comment was found."}, {"method_name": "getDocCommentTree", "method_sig": "public abstract DocCommentTree getDocCommentTree (FileObject fileObject)", "description": "Returns the doc comment tree of the given file. The file must be\n an HTML file, in which case the doc comment tree represents the\n entire contents of the file.\n Returns null if no doc comment was found.\n Future releases may support additional file types."}, {"method_name": "getDocCommentTree", "method_sig": "public abstract DocCommentTree getDocCommentTree (Element e,\n                                                 String relativePath)\n                                          throws IOException", "description": "Returns the doc comment tree of the given file whose path is\n specified relative to the given element. The file must be an HTML\n file, in which case the doc comment tree represents the contents\n of the <body> tag, and any enclosing tags are ignored.\n Returns null if no doc comment was found.\n Future releases may support additional file types."}, {"method_name": "getDocTreePath", "method_sig": "public abstract DocTreePath getDocTreePath (FileObject fileObject,\n                                           PackageElement packageElement)", "description": "Returns a doc tree path containing the doc comment tree of the given file.\n The file must be an HTML file, in which case the doc comment tree represents\n the contents of the <body> tag, and any enclosing tags are ignored.\n Any references to source code elements contained in @see and\n {@link} tags in the doc comment tree will be evaluated in the\n context of the given package element.\n Returns null if no doc comment was found."}, {"method_name": "getElement", "method_sig": "public abstract Element getElement (DocTreePath path)", "description": "Returns the language model element referred to by the leaf node of the given\n DocTreePath, or null if unknown."}, {"method_name": "getFirstSentence", "method_sig": "public abstract List<DocTree> getFirstSentence (List<? extends DocTree> list)", "description": "Returns the list of DocTree representing the first sentence of\n a comment."}, {"method_name": "getSourcePositions", "method_sig": "public abstract DocSourcePositions getSourcePositions()", "description": "Returns a utility object for accessing the source positions\n of documentation tree nodes."}, {"method_name": "printMessage", "method_sig": "public abstract void printMessage (Diagnostic.Kind kind,\n                                  CharSequence msg,\n                                  DocTree t,\n                                  DocCommentTree c,\n                                  CompilationUnitTree root)", "description": "Prints a message of the specified kind at the location of the\n tree within the provided compilation unit"}, {"method_name": "setBreakIterator", "method_sig": "public abstract void setBreakIterator (BreakIterator breakiterator)", "description": "Sets the break iterator to compute the first sentence of\n documentation comments."}, {"method_name": "getDocTreeFactory", "method_sig": "public abstract DocTreeFactory getDocTreeFactory()", "description": "Returns a utility object for creating DocTree objects."}]}