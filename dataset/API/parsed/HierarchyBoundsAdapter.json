{"name": "Class HierarchyBoundsAdapter", "module": "java.desktop", "package": "java.awt.event", "text": "An abstract adapter class for receiving ancestor moved and resized events.\n The methods in this class are empty. This class exists as a\n convenience for creating listener objects.\n \n Extend this class and override the method for the event of interest. (If\n you implement the HierarchyBoundsListener interface, you have\n to define both methods in it. This abstract class defines null methods for\n them both, so you only have to define the method for the event you care\n about.)\n \n Create a listener object using your class and then register it with a\n Component using the Component's addHierarchyBoundsListener\n method. When the hierarchy to which the Component belongs changes by\n resize or movement of an ancestor, the relevant method in the listener\n object is invoked, and the HierarchyEvent is passed to it.", "codes": ["public abstract class HierarchyBoundsAdapter\nextends Object\nimplements HierarchyBoundsListener"], "fields": [], "methods": [{"method_name": "ancestorMoved", "method_sig": "public void ancestorMoved (HierarchyEvent e)", "description": "Called when an ancestor of the source is moved."}, {"method_name": "ancestorResized", "method_sig": "public void ancestorResized (HierarchyEvent e)", "description": "Called when an ancestor of the source is resized."}]}