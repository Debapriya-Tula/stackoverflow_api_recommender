{"name": "Class SQLPermission", "module": "java.sql", "package": "java.sql", "text": "The permission for which the SecurityManager will check\n when code that is running an application with a\n SecurityManager enabled, calls the\n DriverManager.deregisterDriver method,\n DriverManager.setLogWriter method,\n DriverManager.setLogStream (deprecated) method,\n SyncFactory.setJNDIContext method,\n SyncFactory.setLogger method,\n Connection.setNetworkTimeout method,\n or the Connection.abort method.\n If there is no SQLPermission object, these methods\n throw a java.lang.SecurityException as a runtime exception.\n \n A SQLPermission object contains\n a name (also referred to as a \"target name\") but no actions\n list; there is either a named permission or there is not.\n The target name is the name of the permission (see below). The\n naming convention follows the  hierarchical property naming convention.\n In addition, an asterisk\n may appear at the end of the name, following a \".\", or by itself, to\n signify a wildcard match. For example: loadLibrary.*\n and * signify a wildcard match,\n while *loadLibrary and a*b do not.\n \n The following table lists all the possible SQLPermission target names.\n The table gives a description of what the permission allows\n and a discussion of the risks of granting code the permission.\n\n\n \npermission target name, what the permission allows, and associated risks\n\n\nPermission Target Name\nWhat the Permission Allows\nRisks of Allowing this Permission\n\n\n\n\nsetLog\nSetting of the logging stream\nThis is a dangerous permission to grant.\n The contents of the log may contain usernames and passwords,\n SQL statements, and SQL data.\n\n\ncallAbort\nAllows the invocation of the Connection method\n   abort\nPermits an application to terminate a physical connection to a\n  database.\n\n\nsetSyncFactory\nAllows the invocation of the SyncFactory methods\n   setJNDIContext and setLogger\nPermits an application to specify the JNDI context from which the\n   SyncProvider implementations can be retrieved from and the logging\n   object to be used by the SyncProvider implementation.\n\n\nsetNetworkTimeout\nAllows the invocation of the Connection method\n   setNetworkTimeout\nPermits an application to specify the maximum period a\n Connection or\n objects created from the Connection\n will wait for the database to reply to any one request.\n\nderegisterDriver\nAllows the invocation of the DriverManager\n method deregisterDriver\nPermits an application to remove a JDBC driver from the list of\n registered Drivers and release its resources.\n\n\n", "codes": ["public final class SQLPermission\nextends BasicPermission"], "fields": [], "methods": []}