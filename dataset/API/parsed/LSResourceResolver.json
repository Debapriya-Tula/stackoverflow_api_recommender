{"name": "Interface LSResourceResolver", "module": "java.xml", "package": "org.w3c.dom.ls", "text": "LSResourceResolver provides a way for applications to\n redirect references to external resources.\n  Applications needing to implement custom handling for external\n resources can implement this interface and register their implementation\n by setting the \"resource-resolver\" parameter of\n DOMConfiguration objects attached to LSParser\n and LSSerializer. It can also be register on\n DOMConfiguration objects attached to Document\n if the \"LS\" feature is supported.\n  The LSParser will then allow the application to intercept\n any external entities, including the external DTD subset and external\n parameter entities, before including them. The top-level document entity\n is never passed to the resolveResource method.\n  Many DOM applications will not need to implement this interface, but it\n will be especially useful for applications that build XML documents from\n databases or other specialized input sources, or for applications that\n use URNs.\n Note: LSResourceResolver is based on the SAX2 [SAX] EntityResolver\n interface.\n See also the Document Object Model (DOM) Level 3 Load\nand Save Specification.", "codes": ["public interface LSResourceResolver"], "fields": [], "methods": [{"method_name": "resolveResource", "method_sig": "LSInput resolveResource (String type,\n                        String namespaceURI,\n                        String publicId,\n                        String systemId,\n                        String baseURI)", "description": "Allow the application to resolve external resources.\n  The LSParser will call this method before opening any\n external resource, including the external DTD subset, external\n entities referenced within the DTD, and external entities referenced\n within the document element (however, the top-level document entity\n is not passed to this method). The application may then request that\n the LSParser resolve the external resource itself, that\n it use an alternative URI, or that it use an entirely different input\n source.\n  Application writers can use this method to redirect external\n system identifiers to secure and/or local URI, to look up public\n identifiers in a catalogue, or to read an entity from a database or\n other input source (including, for example, a dialog box)."}]}