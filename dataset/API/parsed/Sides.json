{"name": "Class Sides", "module": "java.desktop", "package": "javax.print.attribute.standard", "text": "Class Sides is a printing attribute class, an enumeration, that\n specifies how print-stream pages are to be imposed upon the sides of an\n instance of a selected medium, i.e., an impression.\n \n The effect of a Sides attribute on a multidoc print job (a job with\n multiple documents) depends on whether all the docs have the same sides\n values specified or whether different docs have different sides values\n specified, and on the (perhaps defaulted) value of the\n MultipleDocumentHandling attribute.\n \nIf all the docs have the same sides value n specified, then any\n   value of MultipleDocumentHandling makes\n   sense, and the printer's processing depends on the\n   MultipleDocumentHandling value:\n   \nSINGLE_DOCUMENT -- All the input docs will be combined\n     together into one output document. Each media sheet will consist of\n     n impressions from the output document.\n     SINGLE_DOCUMENT_NEW_SHEET -- All the input docs will be\n     combined together into one output document. Each media sheet will consist\n     of n impressions from the output document. However, the first\n     impression of each input doc will always start on a new media sheet; this\n     means the last media sheet of an input doc may have only one impression\n     on it.\n     SEPARATE_DOCUMENTS_UNCOLLATED_COPIES -- The input docs will\n     remain separate. Each media sheet will consist of n impressions\n     from the input doc. Since the input docs are separate, the first\n     impression of each input doc will always start on a new media sheet; this\n     means the last media sheet of an input doc may have only one impression\n     on it.\n     SEPARATE_DOCUMENTS_COLLATED_COPIES -- The input docs will\n     remain separate. Each media sheet will consist of n impressions\n     from the input doc. Since the input docs are separate, the first\n     impression of each input doc will always start on a new media sheet; this\n     means the last media sheet of an input doc may have only one impression\n     on it.\n   \n\nSINGLE_DOCUMENT -- All the input docs will be combined\n     together into one output document. Each media sheet will consist of\n     ni impressions from the output document, where i\n     is the number of the input doc corresponding to that point in the output\n     document. When the next input doc has a different sides value from the\n     previous input doc, the first print-stream page of the next input doc\n     goes at the start of the next media sheet, possibly leaving only one\n     impression on the previous media sheet.\n     SINGLE_DOCUMENT_NEW_SHEET -- All the input docs will be\n     combined together into one output document. Each media sheet will consist\n     of n impressions from the output document. However, the first\n     impression of each input doc will always start on a new media sheet; this\n     means the last impression of an input doc may have only one impression on\n     it.\n     SEPARATE_DOCUMENTS_UNCOLLATED_COPIES -- The input docs will\n     remain separate. For input doc i, each media sheet will consist of\n     ni impressions from the input doc. Since the input docs\n     are separate, the first impression of each input doc will always start on\n     a new media sheet; this means the last media sheet of an input doc may\n     have only one impression on it.\n     SEPARATE_DOCUMENTS_COLLATED_COPIES -- The input docs will\n     remain separate. For input doc i, each media sheet will consist of\n     ni impressions from the input doc. Since the input docs\n     are separate, the first impression of each input doc will always start on\n     a new media sheet; this means the last media sheet of an input doc may\n     have only one impression on it.\n   \n\n\nIPP Compatibility: The category name returned by getName() is\n the IPP attribute name. The enumeration's integer value is the IPP enum\n value. The toString() method returns the IPP string representation of\n the attribute value.", "codes": ["public final class Sides\nextends EnumSyntax\nimplements DocAttribute, PrintRequestAttribute, PrintJobAttribute"], "fields": [{"field_name": "ONE_SIDED", "field_sig": "public static final\u00a0Sides ONE_SIDED", "description": "Imposes each consecutive print-stream page upon the same side of\n consecutive media sheets."}, {"field_name": "TWO_SIDED_LONG_EDGE", "field_sig": "public static final\u00a0Sides TWO_SIDED_LONG_EDGE", "description": "Imposes each consecutive pair of print-stream pages upon front and back\n sides of consecutive media sheets, such that the orientation of each pair\n of print-stream pages on the medium would be correct for the reader as if\n for binding on the long edge. This imposition is also known as \"duplex\"\n (see DUPLEX)."}, {"field_name": "TWO_SIDED_SHORT_EDGE", "field_sig": "public static final\u00a0Sides TWO_SIDED_SHORT_EDGE", "description": "Imposes each consecutive pair of print-stream pages upon front and back\n sides of consecutive media sheets, such that the orientation of each pair\n of print-stream pages on the medium would be correct for the reader as if\n for binding on the short edge. This imposition is also known as \"tumble\"\n (see TUMBLE)."}, {"field_name": "DUPLEX", "field_sig": "public static final\u00a0Sides DUPLEX", "description": "An alias for \"two sided long edge\" (see\n TWO_SIDED_LONG_EDGE)."}, {"field_name": "TUMBLE", "field_sig": "public static final\u00a0Sides TUMBLE", "description": "An alias for \"two sided short edge\" (see\n TWO_SIDED_SHORT_EDGE)."}], "methods": [{"method_name": "getStringTable", "method_sig": "protected String[] getStringTable()", "description": "Returns the string table for class Sides."}, {"method_name": "getEnumValueTable", "method_sig": "protected EnumSyntax[] getEnumValueTable()", "description": "Returns the enumeration value table for class Sides."}, {"method_name": "getCategory", "method_sig": "public final Class<? extends Attribute> getCategory()", "description": "Get the printing attribute class which is to be used as the \"category\"\n for this printing attribute value.\n \n For class Sides, the category is class Sides itself."}, {"method_name": "getName", "method_sig": "public final String getName()", "description": "Get the name of the category of which this attribute value is an\n instance.\n \n For class Sides, the category name is \"sides\"."}]}