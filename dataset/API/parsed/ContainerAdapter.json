{"name": "Class ContainerAdapter", "module": "java.desktop", "package": "java.awt.event", "text": "An abstract adapter class for receiving container events.\n The methods in this class are empty. This class exists as\n convenience for creating listener objects.\n \n Extend this class to create a ContainerEvent listener\n and override the methods for the events of interest. (If you implement the\n ContainerListener interface, you have to define all of\n the methods in it. This abstract class defines null methods for them\n all, so you can only have to define methods for events you care about.)\n \n Create a listener object using the extended class and then register it with\n a component using the component's addContainerListener\n method. When the container's contents change because a component has\n been added or removed, the relevant method in the listener object is invoked,\n and the ContainerEvent is passed to it.", "codes": ["public abstract class ContainerAdapter\nextends Object\nimplements ContainerListener"], "fields": [], "methods": [{"method_name": "componentAdded", "method_sig": "public void componentAdded (ContainerEvent e)", "description": "Invoked when a component has been added to the container."}, {"method_name": "componentRemoved", "method_sig": "public void componentRemoved (ContainerEvent e)", "description": "Invoked when a component has been removed from the container."}]}