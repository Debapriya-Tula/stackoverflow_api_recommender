{"name": "Interface NotificationEmitter", "module": "java.management", "package": "javax.management", "text": "Interface implemented by an MBean that emits Notifications. It\n allows a listener to be registered with the MBean as a notification\n listener.\nNotification dispatch\nWhen an MBean emits a notification, it considers each listener that has been\n added with addNotificationListener and not\n subsequently removed with removeNotificationListener.\n If a filter was provided with that listener, and if the filter's\n isNotificationEnabled method returns\n false, the listener is ignored.  Otherwise, the listener's\n handleNotification method is called with\n the notification, as well as the handback object that was provided to\n addNotificationListener.\nIf the same listener is added more than once, it is considered as many times as it was\n added.  It is often useful to add the same listener with different filters or handback\n objects.\nImplementations of this interface can differ regarding the thread in which the methods\n of filters and listeners are called.\nIf the method call of a filter or listener throws an Exception, then that\n exception should not prevent other listeners from being invoked.  However, if the method\n call throws an Error, then it is recommended that processing of the notification\n stop at that point, and if it is possible to propagate the Error to the sender of\n the notification, this should be done.\nThis interface should be used by new code in preference to the\n NotificationBroadcaster interface.\nImplementations of this interface and of NotificationBroadcaster\n should be careful about synchronization.  In particular, it is not a good\n idea for an implementation to hold any locks while it is calling a\n listener.  To deal with the possibility that the list of listeners might\n change while a notification is being dispatched, a good strategy is to\n use a CopyOnWriteArrayList for this list.", "codes": ["public interface NotificationEmitter\nextends NotificationBroadcaster"], "fields": [], "methods": [{"method_name": "removeNotificationListener", "method_sig": "void removeNotificationListener (NotificationListener listener,\n                                NotificationFilter filter,\n                                Object handback)\n                         throws ListenerNotFoundException", "description": "Removes a listener from this MBean.  The MBean must have a\n listener that exactly matches the given listener,\n filter, and handback parameters.  If\n there is more than one such listener, only one is removed.\nThe filter and handback parameters\n may be null if and only if they are null in a listener to be\n removed."}]}