{"name": "Interface RowSetWriter", "module": "java.sql", "package": "javax.sql", "text": "An object that implements the RowSetWriter interface,\n called a writer. A writer may be registered with a RowSet\n object that supports the reader/writer paradigm.\n \n If a disconnected RowSet object modifies some of its data,\n and it has a writer associated with it, it may be implemented so that it\n calls on the writer's writeData method internally\n to write the updates back to the data source. In order to do this, the writer\n must first establish a connection with the rowset's data source.\n \n If the data to be updated has already been changed in the data source, there\n is a conflict, in which case the writer will not write\n the changes to the data source.  The algorithm the writer uses for preventing\n or limiting conflicts depends entirely on its implementation.", "codes": ["public interface RowSetWriter"], "fields": [], "methods": [{"method_name": "writeData", "method_sig": "boolean writeData (RowSetInternal caller)\n           throws SQLException", "description": "Writes the changes in this RowSetWriter object's\n rowset back to the data source from which it got its data."}]}