{"name": "Class WrappedPlainView", "module": "java.desktop", "package": "javax.swing.text", "text": "View of plain text (text with only one font and color)\n that does line-wrapping.  This view expects that its\n associated element has child elements that represent\n the lines it should be wrapping.  It is implemented\n as a vertical box that contains logical line views.\n The logical line views are nested classes that render\n the logical line as multiple physical line if the logical\n line is too wide to fit within the allocation.  The\n line views draw upon the outer class for its state\n to reduce their memory requirements.\n \n The line views do all of their rendering through the\n drawLine method which in turn does all of\n its rendering through the drawSelectedText\n and drawUnselectedText methods.  This\n enables subclasses to easily specialize the rendering\n without concern for the layout aspects.", "codes": ["public class WrappedPlainView\nextends BoxView\nimplements TabExpander"], "fields": [], "methods": [{"method_name": "getTabSize", "method_sig": "protected int getTabSize()", "description": "Returns the tab size set for the document, defaulting to 8."}, {"method_name": "drawLine", "method_sig": "@Deprecated(since=\"9\")\nprotected void drawLine (int p0,\n                        int p1,\n                        Graphics g,\n                        int x,\n                        int y)", "description": "Renders a line of text, suppressing whitespace at the end\n and expanding any tabs.  This is implemented to make calls\n to the methods drawUnselectedText and\n drawSelectedText so that the way selected and\n unselected text are rendered can be customized."}, {"method_name": "drawLine", "method_sig": "protected void drawLine (int p0,\n                        int p1,\n                        Graphics2D g,\n                        float x,\n                        float y)", "description": "Renders a line of text, suppressing whitespace at the end\n and expanding any tabs.  This is implemented to make calls\n to the methods drawUnselectedText and\n drawSelectedText so that the way selected and\n unselected text are rendered can be customized."}, {"method_name": "drawUnselectedText", "method_sig": "@Deprecated(since=\"9\")\nprotected int drawUnselectedText (Graphics g,\n                                 int x,\n                                 int y,\n                                 int p0,\n                                 int p1)\n                          throws BadLocationException", "description": "Renders the given range in the model as normal unselected\n text."}, {"method_name": "drawUnselectedText", "method_sig": "protected float drawUnselectedText (Graphics2D g,\n                                   float x,\n                                   float y,\n                                   int p0,\n                                   int p1)\n                            throws BadLocationException", "description": "Renders the given range in the model as normal unselected\n text."}, {"method_name": "drawSelectedText", "method_sig": "@Deprecated(since=\"9\")\nprotected int drawSelectedText (Graphics g,\n                               int x,\n                               int y,\n                               int p0,\n                               int p1)\n                        throws BadLocationException", "description": "Renders the given range in the model as selected text.  This\n is implemented to render the text in the color specified in\n the hosting component.  It assumes the highlighter will render\n the selected background."}, {"method_name": "drawSelectedText", "method_sig": "protected float drawSelectedText (Graphics2D g,\n                                 float x,\n                                 float y,\n                                 int p0,\n                                 int p1)\n                          throws BadLocationException", "description": "Renders the given range in the model as selected text.  This\n is implemented to render the text in the color specified in\n the hosting component.  It assumes the highlighter will render\n the selected background."}, {"method_name": "getLineBuffer", "method_sig": "protected final Segment getLineBuffer()", "description": "Gives access to a buffer that can be used to fetch\n text from the associated document."}, {"method_name": "calculateBreakPosition", "method_sig": "protected int calculateBreakPosition (int p0,\n                                     int p1)", "description": "This is called by the nested wrapped line\n views to determine the break location.  This can\n be reimplemented to alter the breaking behavior.\n It will either break at word or character boundaries\n depending upon the break argument given at\n construction."}, {"method_name": "loadChildren", "method_sig": "protected void loadChildren (ViewFactory f)", "description": "Loads all of the children to initialize the view.\n This is called by the setParent method.\n Subclasses can reimplement this to initialize their\n child views in a different manner.  The default\n implementation creates a child view for each\n child element."}, {"method_name": "nextTabStop", "method_sig": "public float nextTabStop (float x,\n                         int tabOffset)", "description": "Returns the next tab stop position after a given reference position.\n This implementation does not support things like centering so it\n ignores the tabOffset argument."}, {"method_name": "paint", "method_sig": "public void paint (Graphics g,\n                  Shape a)", "description": "Renders using the given rendering surface and area\n on that surface.  This is implemented to stash the\n selection positions, selection colors, and font\n metrics for the nested lines to use."}, {"method_name": "setSize", "method_sig": "public void setSize (float width,\n                    float height)", "description": "Sets the size of the view.  This should cause\n layout of the view along the given axis, if it\n has any layout duties."}, {"method_name": "getPreferredSpan", "method_sig": "public float getPreferredSpan (int axis)", "description": "Determines the preferred span for this view along an\n axis.  This is implemented to provide the superclass\n behavior after first making sure that the current font\n metrics are cached (for the nested lines which use\n the metrics to determine the height of the potentially\n wrapped lines)."}, {"method_name": "getMinimumSpan", "method_sig": "public float getMinimumSpan (int axis)", "description": "Determines the minimum span for this view along an\n axis.  This is implemented to provide the superclass\n behavior after first making sure that the current font\n metrics are cached (for the nested lines which use\n the metrics to determine the height of the potentially\n wrapped lines)."}, {"method_name": "getMaximumSpan", "method_sig": "public float getMaximumSpan (int axis)", "description": "Determines the maximum span for this view along an\n axis.  This is implemented to provide the superclass\n behavior after first making sure that the current font\n metrics are cached (for the nested lines which use\n the metrics to determine the height of the potentially\n wrapped lines)."}, {"method_name": "insertUpdate", "method_sig": "public void insertUpdate (DocumentEvent e,\n                         Shape a,\n                         ViewFactory f)", "description": "Gives notification that something was inserted into the\n document in a location that this view is responsible for.\n This is implemented to simply update the children."}, {"method_name": "removeUpdate", "method_sig": "public void removeUpdate (DocumentEvent e,\n                         Shape a,\n                         ViewFactory f)", "description": "Gives notification that something was removed from the\n document in a location that this view is responsible for.\n This is implemented to simply update the children."}, {"method_name": "changedUpdate", "method_sig": "public void changedUpdate (DocumentEvent e,\n                          Shape a,\n                          ViewFactory f)", "description": "Gives notification from the document that attributes were changed\n in a location that this view is responsible for."}]}