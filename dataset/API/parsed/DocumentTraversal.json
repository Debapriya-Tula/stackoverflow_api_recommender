{"name": "Interface DocumentTraversal", "module": "java.xml", "package": "org.w3c.dom.traversal", "text": "DocumentTraversal contains methods that create\n NodeIterators and TreeWalkers to traverse a\n node and its children in document order (depth first, pre-order\n traversal, which is equivalent to the order in which the start tags occur\n in the text representation of the document). In DOMs which support the\n Traversal feature, DocumentTraversal will be implemented by\n the same objects that implement the Document interface.\n See also the Document Object Model (DOM) Level 2 Traversal and Range Specification.", "codes": ["public interface DocumentTraversal"], "fields": [], "methods": [{"method_name": "createNodeIterator", "method_sig": "NodeIterator createNodeIterator (Node root,\n                                int whatToShow,\n                                NodeFilter filter,\n                                boolean entityReferenceExpansion)\n                         throws DOMException", "description": "Create a new NodeIterator over the subtree rooted at the\n specified node."}, {"method_name": "createTreeWalker", "method_sig": "TreeWalker createTreeWalker (Node root,\n                            int whatToShow,\n                            NodeFilter filter,\n                            boolean entityReferenceExpansion)\n                     throws DOMException", "description": "Create a new TreeWalker over the subtree rooted at the\n specified node."}]}