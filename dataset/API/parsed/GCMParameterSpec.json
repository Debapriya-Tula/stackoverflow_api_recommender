{"name": "Class GCMParameterSpec", "module": "java.base", "package": "javax.crypto.spec", "text": "Specifies the set of parameters required by a Cipher using the Galois/Counter Mode (GCM) mode.\n \n Simple block cipher modes (such as CBC) generally require only an\n initialization vector (such as IvParameterSpec),\n but GCM needs these parameters:\n \nIV: Initialization Vector (IV) \ntLen: length (in bits) of authentication tag T\n\n\n In addition to the parameters described here, other GCM inputs/output\n (Additional Authenticated Data (AAD), Keys, block ciphers,\n plain/ciphertext and authentication tags) are handled in the \n Cipher class.\n \n Please see  RFC 5116\n  for more information on the Authenticated Encryption with\n Associated Data (AEAD) algorithm, and \n NIST Special Publication 800-38D, \"NIST Recommendation for Block\n Cipher Modes of Operation:  Galois/Counter Mode (GCM) and GMAC.\"\n \n The GCM specification states that tLen may only have the\n values {128, 120, 112, 104, 96}, or {64, 32} for certain\n applications.  Other values can be specified for this class, but not\n all CSP implementations will support them.", "codes": ["public class GCMParameterSpec\nextends Object\nimplements AlgorithmParameterSpec"], "fields": [], "methods": [{"method_name": "getTLen", "method_sig": "public int getTLen()", "description": "Returns the authentication tag length."}, {"method_name": "getIV", "method_sig": "public byte[] getIV()", "description": "Returns the Initialization Vector (IV)."}]}