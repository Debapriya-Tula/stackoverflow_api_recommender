{"name": "Class RowSetProvider", "module": "java.sql.rowset", "package": "javax.sql.rowset", "text": "A factory API that enables applications to obtain a\n RowSetFactory implementation  that can be used to create different\n types of RowSet implementations.\n \n Example:\n \n\n RowSetFactory aFactory = RowSetProvider.newFactory();\n CachedRowSet crs = aFactory.createCachedRowSet();\n ...\n RowSetFactory rsf = RowSetProvider.newFactory(\"com.sun.rowset.RowSetFactoryImpl\", null);\n WebRowSet wrs = rsf.createWebRowSet();\n \n\n Tracing of this class may be enabled by setting the System property\n javax.sql.rowset.RowSetFactory.debug to any value but false.\n ", "codes": ["public class RowSetProvider\nextends Object"], "fields": [], "methods": [{"method_name": "newFactory", "method_sig": "public static RowSetFactory newFactory()\n                                throws SQLException", "description": "Creates a new instance of a RowSetFactory\n implementation.  This method uses the following\n look up order to determine\n the RowSetFactory implementation class to load:\n\n\n The System property javax.sql.rowset.RowSetFactory.  For example:\n \n\n -Djavax.sql.rowset.RowSetFactory=com.sun.rowset.RowSetFactoryImpl\n \n\n\n The ServiceLoader API. The ServiceLoader API will look\n for a class name in the file\n META-INF/services/javax.sql.rowset.RowSetFactory\n in jars available to the runtime. For example, to have the RowSetFactory\n implementation com.sun.rowset.RowSetFactoryImpl  loaded, the\n entry in META-INF/services/javax.sql.rowset.RowSetFactory would be:\n  \n\ncom.sun.rowset.RowSetFactoryImpl \n\n\n\n\n Platform default RowSetFactory instance.\n \n\nOnce an application has obtained a reference to a RowSetFactory,\n it can use the factory to obtain RowSet instances."}, {"method_name": "newFactory", "method_sig": "public static RowSetFactory newFactory (String factoryClassName,\n                                       ClassLoader cl)\n                                throws SQLException", "description": "Creates  a new instance of a RowSetFactory from the\n specified factory class name.\n This function is useful when there are multiple providers in the classpath.\n It gives more control to the application as it can specify which provider\n should be loaded.\nOnce an application has obtained a reference to a RowSetFactory\n it can use the factory to obtain RowSet instances."}]}