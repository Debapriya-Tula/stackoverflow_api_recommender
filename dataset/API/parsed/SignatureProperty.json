{"name": "Interface SignatureProperty", "module": "java.xml.crypto", "package": "javax.xml.crypto.dsig", "text": "A representation of the XML SignatureProperty element as\n defined in the \n W3C Recommendation for XML-Signature Syntax and Processing.\n The XML Schema Definition is defined as:\n \n<element name=\"SignatureProperty\" type=\"ds:SignaturePropertyType\"/>\n   <complexType name=\"SignaturePropertyType\" mixed=\"true\">\n     <choice maxOccurs=\"unbounded\">\n       <any namespace=\"##other\" processContents=\"lax\"/>\n       <!-- (1,1) elements from (1, unbounded) namespaces -->\n     </choice>\n     <attribute name=\"Target\" type=\"anyURI\" use=\"required\"/>\n     <attribute name=\"Id\" type=\"ID\" use=\"optional\"/>\n   </complexType>\n \n\n A SignatureProperty instance may be created by invoking the\n newSignatureProperty\n method of the XMLSignatureFactory class; for example:\n\n \n   XMLSignatureFactory factory = XMLSignatureFactory.getInstance(\"DOM\");\n   SignatureProperty property = factory.newSignatureProperty\n      (Collections.singletonList(content), \"#Signature-1\", \"TimeStamp\");\n ", "codes": ["public interface SignatureProperty\nextends XMLStructure"], "fields": [], "methods": [{"method_name": "getTarget", "method_sig": "String getTarget()", "description": "Returns the target URI of this SignatureProperty."}, {"method_name": "getId", "method_sig": "String getId()", "description": "Returns the Id of this SignatureProperty."}, {"method_name": "getContent", "method_sig": "List<XMLStructure> getContent()", "description": "Returns an unmodifiable\n list of one or more XMLStructures that are contained in\n this SignatureProperty. These represent additional\n information items concerning the generation of the XMLSignature\n (i.e. date/time stamp or serial numbers of cryptographic hardware used\n in signature generation)."}]}