{"name": "Class AlgorithmParameterGeneratorSpi", "module": "java.base", "package": "java.security", "text": "This class defines the Service Provider Interface (SPI)\n for the AlgorithmParameterGenerator class, which\n is used to generate a set of parameters to be used with a certain algorithm.\n\n  All the abstract methods in this class must be implemented by each\n cryptographic service provider who wishes to supply the implementation\n of a parameter generator for a particular algorithm.\n\n  In case the client does not explicitly initialize the\n AlgorithmParameterGenerator (via a call to an engineInit\n method), each provider must supply (and document) a default initialization.\n See the Keysize Restriction sections of the\n JDK Providers\n document for information on the AlgorithmParameterGenerator defaults\n used by JDK providers.\n However, note that defaults may vary across different providers.\n Additionally, the default value for a provider may change in a future\n version. Therefore, it is recommended to explicitly initialize the\n AlgorithmParameterGenerator instead of relying on provider-specific defaults.", "codes": ["public abstract class AlgorithmParameterGeneratorSpi\nextends Object"], "fields": [], "methods": [{"method_name": "engineInit", "method_sig": "protected abstract void engineInit (int size,\n                                   SecureRandom random)", "description": "Initializes this parameter generator for a certain size\n and source of randomness."}, {"method_name": "engineInit", "method_sig": "protected abstract void engineInit (AlgorithmParameterSpec genParamSpec,\n                                   SecureRandom random)\n                            throws InvalidAlgorithmParameterException", "description": "Initializes this parameter generator with a set of\n algorithm-specific parameter generation values."}, {"method_name": "engineGenerateParameters", "method_sig": "protected abstract AlgorithmParameters engineGenerateParameters()", "description": "Generates the parameters."}]}