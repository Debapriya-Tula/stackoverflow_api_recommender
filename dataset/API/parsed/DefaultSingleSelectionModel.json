{"name": "Class DefaultSingleSelectionModel", "module": "java.desktop", "package": "javax.swing", "text": "A generic implementation of SingleSelectionModel.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["public class DefaultSingleSelectionModel\nextends Object\nimplements SingleSelectionModel, Serializable"], "fields": [{"field_name": "changeEvent", "field_sig": "protected transient\u00a0ChangeEvent changeEvent", "description": "Only one ModelChangeEvent is needed per model instance since the\n event's only (read-only) state is the source property.  The source\n of events generated here is always \"this\"."}, {"field_name": "listenerList", "field_sig": "protected\u00a0EventListenerList listenerList", "description": "The collection of registered listeners"}], "methods": [{"method_name": "addChangeListener", "method_sig": "public void addChangeListener (ChangeListener l)", "description": "Adds a ChangeListener to the button."}, {"method_name": "removeChangeListener", "method_sig": "public void removeChangeListener (ChangeListener l)", "description": "Removes a ChangeListener from the button."}, {"method_name": "getChangeListeners", "method_sig": "public ChangeListener[] getChangeListeners()", "description": "Returns an array of all the change listeners\n registered on this DefaultSingleSelectionModel."}, {"method_name": "fireStateChanged", "method_sig": "protected void fireStateChanged()", "description": "Notifies all listeners that have registered interest for\n notification on this event type.  The event instance\n is created lazily."}, {"method_name": "getListeners", "method_sig": "public <T extends EventListener> T[] getListeners (Class<T> listenerType)", "description": "Returns an array of all the objects currently registered as\n FooListeners\n upon this model.\n FooListeners\n are registered using the addFooListener method.\n \n You can specify the listenerType argument\n with a class literal, such as FooListener.class.\n For example, you can query a DefaultSingleSelectionModel\n instance m\n for its change listeners\n with the following code:\n\n ChangeListener[] cls = (ChangeListener[])(m.getListeners(ChangeListener.class));\n\n If no such listeners exist,\n this method returns an empty array."}]}