{"name": "Interface ResultSetMetaData", "module": "java.sql", "package": "java.sql", "text": "An object that can be used to get information about the types\n and properties of the columns in a ResultSet object.\n The following code fragment creates the ResultSet object rs,\n creates the ResultSetMetaData object rsmd, and uses rsmd\n to find out how many columns rs has and whether the first column in rs\n can be used in a WHERE clause.\n \n\n     ResultSet rs = stmt.executeQuery(\"SELECT a, b, c FROM TABLE2\");\n     ResultSetMetaData rsmd = rs.getMetaData();\n     int numberOfColumns = rsmd.getColumnCount();\n     boolean b = rsmd.isSearchable(1);\n\n ", "codes": ["public interface ResultSetMetaData\nextends Wrapper"], "fields": [{"field_name": "columnNoNulls", "field_sig": "static final\u00a0int columnNoNulls", "description": "The constant indicating that a\n column does not allow NULL values."}, {"field_name": "columnNullable", "field_sig": "static final\u00a0int columnNullable", "description": "The constant indicating that a\n column allows NULL values."}, {"field_name": "columnNullableUnknown", "field_sig": "static final\u00a0int columnNullableUnknown", "description": "The constant indicating that the\n nullability of a column's values is unknown."}], "methods": [{"method_name": "getColumnCount", "method_sig": "int getColumnCount()\n            throws SQLException", "description": "Returns the number of columns in this ResultSet object."}, {"method_name": "isAutoIncrement", "method_sig": "boolean isAutoIncrement (int column)\n                 throws SQLException", "description": "Indicates whether the designated column is automatically numbered."}, {"method_name": "isCaseSensitive", "method_sig": "boolean isCaseSensitive (int column)\n                 throws SQLException", "description": "Indicates whether a column's case matters."}, {"method_name": "isSearchable", "method_sig": "boolean isSearchable (int column)\n              throws SQLException", "description": "Indicates whether the designated column can be used in a where clause."}, {"method_name": "isCurrency", "method_sig": "boolean isCurrency (int column)\n            throws SQLException", "description": "Indicates whether the designated column is a cash value."}, {"method_name": "isNullable", "method_sig": "int isNullable (int column)\n        throws SQLException", "description": "Indicates the nullability of values in the designated column."}, {"method_name": "isSigned", "method_sig": "boolean isSigned (int column)\n          throws SQLException", "description": "Indicates whether values in the designated column are signed numbers."}, {"method_name": "getColumnDisplaySize", "method_sig": "int getColumnDisplaySize (int column)\n                  throws SQLException", "description": "Indicates the designated column's normal maximum width in characters."}, {"method_name": "getColumnLabel", "method_sig": "String getColumnLabel (int column)\n               throws SQLException", "description": "Gets the designated column's suggested title for use in printouts and\n displays. The suggested title is usually specified by the SQL AS\n clause.  If a SQL AS is not specified, the value returned from\n getColumnLabel will be the same as the value returned by the\n getColumnName method."}, {"method_name": "getColumnName", "method_sig": "String getColumnName (int column)\n              throws SQLException", "description": "Get the designated column's name."}, {"method_name": "getSchemaName", "method_sig": "String getSchemaName (int column)\n              throws SQLException", "description": "Get the designated column's table's schema."}, {"method_name": "getPrecision", "method_sig": "int getPrecision (int column)\n          throws SQLException", "description": "Get the designated column's specified column size.\n For numeric data, this is the maximum precision.  For character data, this is the length in characters.\n For datetime datatypes, this is the length in characters of the String representation (assuming the\n maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes.  For the ROWID datatype,\n this is the length in bytes. 0 is returned for data types where the\n column size is not applicable."}, {"method_name": "getScale", "method_sig": "int getScale (int column)\n      throws SQLException", "description": "Gets the designated column's number of digits to right of the decimal point.\n 0 is returned for data types where the scale is not applicable."}, {"method_name": "getTableName", "method_sig": "String getTableName (int column)\n             throws SQLException", "description": "Gets the designated column's table name."}, {"method_name": "getCatalogName", "method_sig": "String getCatalogName (int column)\n               throws SQLException", "description": "Gets the designated column's table's catalog name."}, {"method_name": "getColumnType", "method_sig": "int getColumnType (int column)\n           throws SQLException", "description": "Retrieves the designated column's SQL type."}, {"method_name": "getColumnTypeName", "method_sig": "String getColumnTypeName (int column)\n                  throws SQLException", "description": "Retrieves the designated column's database-specific type name."}, {"method_name": "isReadOnly", "method_sig": "boolean isReadOnly (int column)\n            throws SQLException", "description": "Indicates whether the designated column is definitely not writable."}, {"method_name": "isWritable", "method_sig": "boolean isWritable (int column)\n            throws SQLException", "description": "Indicates whether it is possible for a write on the designated column to succeed."}, {"method_name": "isDefinitelyWritable", "method_sig": "boolean isDefinitelyWritable (int column)\n                      throws SQLException", "description": "Indicates whether a write on the designated column will definitely succeed."}, {"method_name": "getColumnClassName", "method_sig": "String getColumnClassName (int column)\n                   throws SQLException", "description": "Returns the fully-qualified name of the Java class whose instances\n are manufactured if the method ResultSet.getObject\n is called to retrieve a value\n from the column.  ResultSet.getObject may return a subclass of the\n class returned by this method."}]}