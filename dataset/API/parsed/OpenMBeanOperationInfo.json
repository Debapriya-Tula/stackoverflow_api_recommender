{"name": "Interface OpenMBeanOperationInfo", "module": "java.management", "package": "javax.management.openmbean", "text": "Describes an operation of an Open MBean.\nThis interface declares the same methods as the class MBeanOperationInfo.  A class implementing this\n interface (typically OpenMBeanOperationInfoSupport) should\n extend MBeanOperationInfo.\nThe getSignature() method should return at runtime an\n array of instances of a subclass of MBeanParameterInfo\n which implements the OpenMBeanParameterInfo interface\n (typically OpenMBeanParameterInfoSupport).", "codes": ["public interface OpenMBeanOperationInfo"], "fields": [], "methods": [{"method_name": "getDescription", "method_sig": "String getDescription()", "description": "Returns a human readable description of the operation\n described by this OpenMBeanOperationInfo instance."}, {"method_name": "getName", "method_sig": "String getName()", "description": "Returns the name of the operation\n described by this OpenMBeanOperationInfo instance."}, {"method_name": "getSignature", "method_sig": "MBeanParameterInfo[] getSignature()", "description": "Returns an array of OpenMBeanParameterInfo instances\n describing each parameter in the signature of the operation\n described by this OpenMBeanOperationInfo instance.\n Each instance in the returned array should actually be a\n subclass of MBeanParameterInfo which implements the\n OpenMBeanParameterInfo interface (typically OpenMBeanParameterInfoSupport)."}, {"method_name": "getImpact", "method_sig": "int getImpact()", "description": "Returns an int constant qualifying the impact of the\n operation described by this OpenMBeanOperationInfo\n instance.\n\n The returned constant is one of MBeanOperationInfo.INFO, MBeanOperationInfo.ACTION, MBeanOperationInfo.ACTION_INFO, or MBeanOperationInfo.UNKNOWN."}, {"method_name": "getReturnType", "method_sig": "String getReturnType()", "description": "Returns the fully qualified Java class name of the values\n returned by the operation described by this\n OpenMBeanOperationInfo instance.  This method should\n return the same value as a call to\n getReturnOpenType().getClassName()."}, {"method_name": "getReturnOpenType", "method_sig": "OpenType<?> getReturnOpenType()", "description": "Returns the open type of the values returned by the\n operation described by this OpenMBeanOperationInfo\n instance."}, {"method_name": "equals", "method_sig": "boolean equals (Object obj)", "description": "Compares the specified obj parameter with this OpenMBeanOperationInfo instance for equality.\n \n Returns true if and only if all of the following statements are true:\n \nobj is non null,\nobj also implements the OpenMBeanOperationInfo interface,\ntheir names are equal\ntheir signatures are equal\ntheir return open types are equal\ntheir impacts are equal\n\n This ensures that this equals method works properly for obj parameters which are\n different implementations of the OpenMBeanOperationInfo interface.\n \u00a0"}, {"method_name": "hashCode", "method_sig": "int hashCode()", "description": "Returns the hash code value for this OpenMBeanOperationInfo instance.\n \n The hash code of an OpenMBeanOperationInfo instance is the sum of the hash codes\n of all elements of information used in equals comparisons\n (ie: its name, return open type, impact and signature,\n where the signature hashCode is calculated by a call to\n java.util.Arrays.asList(this.getSignature).hashCode()).\n \n This ensures that t1.equals(t2) implies that t1.hashCode()==t2.hashCode()\n for any two OpenMBeanOperationInfo instances t1 and t2,\n as required by the general contract of the method\n Object.hashCode()."}, {"method_name": "toString", "method_sig": "String toString()", "description": "Returns a string representation of this OpenMBeanOperationInfo instance.\n \n The string representation consists of the name of this class\n (ie javax.management.openmbean.OpenMBeanOperationInfo),\n and the name, signature, return open type and impact of the described operation."}]}