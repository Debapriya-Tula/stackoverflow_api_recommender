{"name": "Class ReverbType", "module": "java.desktop", "package": "javax.sound.sampled", "text": "The ReverbType class provides methods for accessing various\n reverberation settings to be applied to an audio signal.\n \n Reverberation simulates the reflection of sound off of the walls, ceiling,\n and floor of a room. Depending on the size of the room, and how absorbent or\n reflective the materials in the room's surfaces are, the sound might bounce\n around for a long time before dying away.\n \n The reverberation parameters provided by ReverbType consist of the\n delay time and intensity of early reflections, the delay time and intensity\n of late reflections, and an overall decay time. Early reflections are the\n initial individual low-order reflections of the direct signal off the\n surfaces in the room. The late reflections are the dense, high-order\n reflections that characterize the room's reverberation. The delay times for\n the start of these two reflection types give the listener a sense of the\n overall size and complexity of the room's shape and contents. The larger the\n room, the longer the reflection delay times. The early and late reflections'\n intensities define the gain (in decibels) of the reflected signals as\n compared to the direct signal. These intensities give the listener an\n impression of the absorptive nature of the surfaces and objects in the room.\n The decay time defines how long the reverberation takes to exponentially\n decay until it is no longer perceptible (\"effective zero\"). The larger and\n less absorbent the surfaces, the longer the decay time.\n \n The set of parameters defined here may not include all aspects of\n reverberation as specified by some systems. For example, the Midi\n Manufacturer's Association (MMA) has an Interactive Audio Special Interest\n Group (IASIG), which has a 3-D Working Group that has defined a Level 2 Spec\n (I3DL2). I3DL2 supports filtering of reverberation and control of reverb\n density. These properties are not included in the JavaSound 1.0 definition of\n a reverb control. In such a case, the implementing system should either\n extend the defined reverb control to include additional parameters, or else\n interpret the system's additional capabilities in a way that fits the model\n described here.\n \n If implementing JavaSound on a I3DL2-compliant device:\n \nFiltering is disabled (high-frequency attenuations are set to 0.0 dB)\n   Density parameters are set to midway between minimum and maximum\n \n\n The following table shows what parameter values an implementation might use\n for a representative set of reverberation settings.\n\n \nReverb types and params: decay time, late intensity, late delay,\n early intensity, and early delay\n\n\nType\n     Decay Time (ms)\n     Late Intensity (dB)\n     Late Delay (ms)\n     Early Intensity (dB)\n     Early Delay(ms)\n \n\n\nCavern\n     2250\n     -2.0\n     41.3\n     -1.4\n     10.3\n   \nDungeon\n     1600\n     -1.0\n     10.3\n     -0.7\n     2.6\n   \nGarage\n     900\n     -6.0\n     14.7\n     -4.0\n     3.9\n   \nAcoustic Lab\n     280\n     -3.0\n     8.0\n     -2.0\n     2.0\n   \nCloset\n     150\n     -10.0\n     2.5\n     -7.0\n     0.6\n \n", "codes": ["public class ReverbType\nextends Object"], "fields": [], "methods": [{"method_name": "getName", "method_sig": "public String getName()", "description": "Obtains the name of this reverb type."}, {"method_name": "getEarlyReflectionDelay", "method_sig": "public final int getEarlyReflectionDelay()", "description": "Returns the early reflection delay time in microseconds. This is the\n amount of time between when the direct signal is heard and when the first\n early reflections are heard."}, {"method_name": "getEarlyReflectionIntensity", "method_sig": "public final float getEarlyReflectionIntensity()", "description": "Returns the early reflection intensity in decibels. This is the amplitude\n attenuation of the first early reflections relative to the direct signal."}, {"method_name": "getLateReflectionDelay", "method_sig": "public final int getLateReflectionDelay()", "description": "Returns the late reflection delay time in microseconds. This is the\n amount of time between when the first early reflections are heard and\n when the first late reflections are heard."}, {"method_name": "getLateReflectionIntensity", "method_sig": "public final float getLateReflectionIntensity()", "description": "Returns the late reflection intensity in decibels. This is the amplitude\n attenuation of the first late reflections relative to the direct signal."}, {"method_name": "getDecayTime", "method_sig": "public final int getDecayTime()", "description": "Obtains the decay time, which is the amount of time over which the late\n reflections attenuate to effective zero. The effective zero value is\n implementation-dependent."}, {"method_name": "equals", "method_sig": "public final boolean equals (Object obj)", "description": "Indicates whether the specified object is equal to this reverb type,\n returning true if the objects are the same."}, {"method_name": "hashCode", "method_sig": "public final int hashCode()", "description": "Returns a hash code value for this reverb type."}, {"method_name": "toString", "method_sig": "public final String toString()", "description": "Provides a String representation of the reverb type, including\n its name and its parameter settings. The exact contents of the string may\n vary between implementations of Java Sound."}]}