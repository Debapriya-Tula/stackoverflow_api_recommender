{"name": "Class CertPathBuilderSpi", "module": "java.base", "package": "java.security.cert", "text": "The Service Provider Interface (SPI)\n for the CertPathBuilder class. All\n CertPathBuilder implementations must include a class (the\n SPI class) that extends this class (CertPathBuilderSpi) and\n implements all of its methods. In general, instances of this class should\n only be accessed through the CertPathBuilder class. For\n details, see the Java Cryptography Architecture.\n \nConcurrent Access\n\n Instances of this class need not be protected against concurrent\n access from multiple threads. Threads that need to access a single\n CertPathBuilderSpi instance concurrently should synchronize\n amongst themselves and provide the necessary locking before calling the\n wrapping CertPathBuilder object.\n \n However, implementations of CertPathBuilderSpi may still\n encounter concurrency issues, since multiple threads each\n manipulating a different CertPathBuilderSpi instance need not\n synchronize.", "codes": ["public abstract class CertPathBuilderSpi\nextends Object"], "fields": [], "methods": [{"method_name": "engineBuild", "method_sig": "public abstract CertPathBuilderResult engineBuild (CertPathParameters params)\n                                           throws CertPathBuilderException,\n                                                  InvalidAlgorithmParameterException", "description": "Attempts to build a certification path using the specified\n algorithm parameter set."}, {"method_name": "engineGetRevocationChecker", "method_sig": "public CertPathChecker engineGetRevocationChecker()", "description": "Returns a CertPathChecker that this implementation uses to\n check the revocation status of certificates. A PKIX implementation\n returns objects of type PKIXRevocationChecker.\n\n The primary purpose of this method is to allow callers to specify\n additional input parameters and options specific to revocation checking.\n See the class description of CertPathBuilder for an example.\n\n This method was added to version 1.8 of the Java Platform Standard\n Edition. In order to maintain backwards compatibility with existing\n service providers, this method cannot be abstract and by default throws\n an UnsupportedOperationException."}]}