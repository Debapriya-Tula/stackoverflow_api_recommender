{"name": "Interface ListeningConnector", "module": "jdk.jdi", "package": "com.sun.jdi.connect", "text": "A connector which listens for a connection initiated by a target VM.", "codes": ["public interface ListeningConnector\nextends Connector"], "fields": [], "methods": [{"method_name": "supportsMultipleConnections", "method_sig": "boolean supportsMultipleConnections()", "description": "Indicates whether this listening connector supports multiple\n connections for a single argument map. If so, a call to\n startListening(java.util.Map<java.lang.String, ? extends com.sun.jdi.connect.Connector.Argument>) may allow\n multiple target VM to become connected."}, {"method_name": "startListening", "method_sig": "String startListening (Map<String, ? extends Connector.Argument> arguments)\n               throws IOException,\n                      IllegalConnectorArgumentsException", "description": "Listens for one or more connections initiated by target VMs.\n The connector uses the given argument map\n in determining the address at which to listen or else it generates\n an appropriate listen address. In either case, an address string\n is returned from this method which can be used in starting target VMs\n to identify this connector. The format of the address string\n is connector, transport, and, possibly, platform dependent.\n \n The argument map associates argument name strings to instances\n of Connector.Argument. The default argument map for a\n connector can be obtained through Connector.defaultArguments().\n Argument map values can be changed, but map entries should not be\n added or deleted.\n \n This method does not return a VirtualMachine, and, normally,\n returns before any target VM initiates\n a connection. The connected target is obtained through\n accept(java.util.Map<java.lang.String, ? extends com.sun.jdi.connect.Connector.Argument>) (using the same argument map as is passed to this\n method).\n \n If arguments contains addressing information and\n only one connection will be accepted, the accept method\n can be called immediately without calling this method."}, {"method_name": "stopListening", "method_sig": "void stopListening (Map<String, ? extends Connector.Argument> arguments)\n            throws IOException,\n                   IllegalConnectorArgumentsException", "description": "Cancels listening for connections. The given argument map should match\n the argument map given for a previous startListening(java.util.Map<java.lang.String, ? extends com.sun.jdi.connect.Connector.Argument>) invocation."}, {"method_name": "accept", "method_sig": "VirtualMachine accept (Map<String, ? extends Connector.Argument> arguments)\n               throws IOException,\n                      IllegalConnectorArgumentsException", "description": "Waits for a target VM to attach to this connector."}]}