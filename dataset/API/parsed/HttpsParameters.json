{"name": "Class HttpsParameters", "module": "jdk.httpserver", "package": "com.sun.net.httpserver", "text": "Represents the set of parameters for each https\n connection negotiated with clients. One of these\n is created and passed to\n HttpsConfigurator.configure(HttpsParameters)\n for every incoming https connection,\n in order to determine the parameters to use.\n \n The underlying SSL parameters may be established either\n via the set/get methods of this class, or else via\n a SSLParameters object. SSLParameters\n is the preferred method, because in the future,\n additional configuration capabilities may be added to that class, and\n it is easier to determine the set of supported parameters and their\n default values with SSLParameters. Also, if an SSLParameters object is\n provided via\n setSSLParameters(SSLParameters) then those parameter settings\n are used, and any settings made in this object are ignored.", "codes": ["public abstract class HttpsParameters\nextends Object"], "fields": [], "methods": [{"method_name": "getHttpsConfigurator", "method_sig": "public abstract HttpsConfigurator getHttpsConfigurator()", "description": "Returns the HttpsConfigurator for this HttpsParameters."}, {"method_name": "getClientAddress", "method_sig": "public abstract InetSocketAddress getClientAddress()", "description": "Returns the address of the remote client initiating the\n connection."}, {"method_name": "setSSLParameters", "method_sig": "public abstract void setSSLParameters (SSLParameters params)", "description": "Sets the SSLParameters to use for this HttpsParameters.\n The parameters must be supported by the SSLContext contained\n by the HttpsConfigurator associated with this HttpsParameters.\n If no parameters are set, then the default behavior is to use\n the default parameters from the associated SSLContext."}, {"method_name": "getCipherSuites", "method_sig": "public String[] getCipherSuites()", "description": "Returns a copy of the array of ciphersuites or null if none\n have been set."}, {"method_name": "setCipherSuites", "method_sig": "public void setCipherSuites (String[] cipherSuites)", "description": "Sets the array of ciphersuites."}, {"method_name": "getProtocols", "method_sig": "public String[] getProtocols()", "description": "Returns a copy of the array of protocols or null if none\n have been set."}, {"method_name": "setProtocols", "method_sig": "public void setProtocols (String[] protocols)", "description": "Sets the array of protocols."}, {"method_name": "getWantClientAuth", "method_sig": "public boolean getWantClientAuth()", "description": "Returns whether client authentication should be requested."}, {"method_name": "setWantClientAuth", "method_sig": "public void setWantClientAuth (boolean wantClientAuth)", "description": "Sets whether client authentication should be requested. Calling\n this method clears the needClientAuth flag."}, {"method_name": "getNeedClientAuth", "method_sig": "public boolean getNeedClientAuth()", "description": "Returns whether client authentication should be required."}, {"method_name": "setNeedClientAuth", "method_sig": "public void setNeedClientAuth (boolean needClientAuth)", "description": "Sets whether client authentication should be required. Calling\n this method clears the wantClientAuth flag."}]}