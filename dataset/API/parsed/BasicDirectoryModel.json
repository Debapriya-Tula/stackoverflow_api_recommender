{"name": "Class BasicDirectoryModel", "module": "java.desktop", "package": "javax.swing.plaf.basic", "text": "Basic implementation of a file list.", "codes": ["public class BasicDirectoryModel\nextends AbstractListModel<Object>\nimplements PropertyChangeListener"], "fields": [], "methods": [{"method_name": "invalidateFileCache", "method_sig": "public void invalidateFileCache()", "description": "This method is used to interrupt file loading thread."}, {"method_name": "getDirectories", "method_sig": "public Vector<File> getDirectories()", "description": "Returns a list of directories."}, {"method_name": "getFiles", "method_sig": "public Vector<File> getFiles()", "description": "Returns a list of files."}, {"method_name": "validateFileCache", "method_sig": "public void validateFileCache()", "description": "Validates content of file cache."}, {"method_name": "renameFile", "method_sig": "public boolean renameFile (File oldFile,\n                          File newFile)", "description": "Renames a file in the underlying file system."}, {"method_name": "fireContentsChanged", "method_sig": "public void fireContentsChanged()", "description": "Invoked when a content is changed."}, {"method_name": "contains", "method_sig": "public boolean contains (Object o)", "description": "Returns true if an element o is in file cache,\n otherwise, returns false."}, {"method_name": "indexOf", "method_sig": "public int indexOf (Object o)", "description": "Returns an index of element o in file cache."}, {"method_name": "intervalAdded", "method_sig": "public void intervalAdded (ListDataEvent e)", "description": "Obsolete - not used."}, {"method_name": "intervalRemoved", "method_sig": "public void intervalRemoved (ListDataEvent e)", "description": "Obsolete - not used."}, {"method_name": "sort", "method_sig": "protected void sort (Vector<? extends File> v)", "description": "Sorts a list of files."}, {"method_name": "lt", "method_sig": "protected boolean lt (File a,\n                     File b)", "description": "Obsolete - not used"}, {"method_name": "addPropertyChangeListener", "method_sig": "public void addPropertyChangeListener (PropertyChangeListener listener)", "description": "Adds a PropertyChangeListener to the listener list. The listener is\n registered for all bound properties of this class.\n \n If listener is null,\n no exception is thrown and no action is performed."}, {"method_name": "removePropertyChangeListener", "method_sig": "public void removePropertyChangeListener (PropertyChangeListener listener)", "description": "Removes a PropertyChangeListener from the listener list.\n \n If listener is null, no exception is thrown and no action is performed."}, {"method_name": "getPropertyChangeListeners", "method_sig": "public PropertyChangeListener[] getPropertyChangeListeners()", "description": "Returns an array of all the property change listeners\n registered on this component."}, {"method_name": "firePropertyChange", "method_sig": "protected void firePropertyChange (String propertyName,\n                                  Object oldValue,\n                                  Object newValue)", "description": "Support for reporting bound property changes for boolean properties.\n This method can be called when a bound property has changed and it will\n send the appropriate PropertyChangeEvent to any registered\n PropertyChangeListeners."}]}