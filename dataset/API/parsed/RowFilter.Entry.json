{"name": "Class RowFilter.Entry<M,\u200bI>", "module": "java.desktop", "package": "javax.swing", "text": "An Entry object is passed to instances of\n RowFilter, allowing the filter to get the value of the\n entry's data, and thus to determine whether the entry should be shown.\n An Entry object contains information about the model\n as well as methods for getting the underlying values from the model.", "codes": ["public abstract static class RowFilter.Entry<M, I>\nextends Object"], "fields": [], "methods": [{"method_name": "getModel", "method_sig": "public abstract M getModel()", "description": "Returns the underlying model."}, {"method_name": "getValueCount", "method_sig": "public abstract int getValueCount()", "description": "Returns the number of values in the entry.  For\n example, when used with a table this corresponds to the\n number of columns."}, {"method_name": "getValue", "method_sig": "public abstract Object getValue (int index)", "description": "Returns the value at the specified index.  This may return\n null.  When used with a table, index\n corresponds to the column number in the model."}, {"method_name": "getStringValue", "method_sig": "public String getStringValue (int index)", "description": "Returns the string value at the specified index.  If\n filtering is being done based on String values\n this method is preferred to that of getValue\n as getValue(index).toString() may return a\n different result than getStringValue(index).\n \n This implementation calls getValue(index).toString()\n after checking for null.  Subclasses that provide\n different string conversion should override this method if\n necessary."}, {"method_name": "getIdentifier", "method_sig": "public abstract I getIdentifier()", "description": "Returns the identifer (in the model) of the entry.\n For a table this corresponds to the index of the row in the model,\n expressed as an Integer."}]}