{"name": "Class MemoryNotificationInfo", "module": "java.management", "package": "java.lang.management", "text": "The information about a memory notification.\n\n \n A memory notification is emitted by MemoryMXBean\n when the Java virtual machine detects that the memory usage\n of a memory pool is exceeding a threshold value.\n The notification emitted will contain the memory notification\n information about the detected condition:\n \nThe name of the memory pool.\nThe memory usage of the memory pool when the notification\n       was constructed.\nThe number of times that the memory usage has crossed\n       a threshold when the notification was constructed.\n       For usage threshold notifications, this count will be the\n       usage threshold\n       count.  For collection threshold notifications,\n       this count will be the\n       collection usage threshold count.\n       \n\n\n A CompositeData representing\n the MemoryNotificationInfo object\n is stored in the\n user data\n of a notification.\n The from method is provided to convert from\n a CompositeData to a MemoryNotificationInfo\n object. For example:\n\n \n      Notification notif;\n\n      // receive the notification emitted by MemoryMXBean and set to notif\n      ...\n\n      String notifType = notif.getType();\n      if (notifType.equals(MemoryNotificationInfo.MEMORY_THRESHOLD_EXCEEDED) ||\n          notifType.equals(MemoryNotificationInfo.MEMORY_COLLECTION_THRESHOLD_EXCEEDED)) {\n          // retrieve the memory notification information\n          CompositeData cd = (CompositeData) notif.getUserData();\n          MemoryNotificationInfo info = MemoryNotificationInfo.from(cd);\n          ....\n      }\n \n\n The types of notifications emitted by MemoryMXBean are:\n \nA usage threshold exceeded notification.\n       This notification will be emitted when\n       the memory usage of a memory pool is increased and has reached\n       or exceeded its\n        usage threshold value.\n       Subsequent crossing of the usage threshold value does not cause\n       further notification until the memory usage has returned\n       to become less than the usage threshold value.\n       \nA collection usage threshold exceeded notification.\n       This notification will be emitted when\n       the memory usage of a memory pool is greater than or equal to its\n       \n       collection usage threshold after the Java virtual machine\n       has expended effort in recycling unused objects in that\n       memory pool.\n", "codes": ["public class MemoryNotificationInfo\nextends Object"], "fields": [{"field_name": "MEMORY_THRESHOLD_EXCEEDED", "field_sig": "public static final\u00a0String MEMORY_THRESHOLD_EXCEEDED", "description": "Notification type denoting that\n the memory usage of a memory pool has\n reached or exceeded its\n  usage threshold value.\n This notification is emitted by MemoryMXBean.\n Subsequent crossing of the usage threshold value does not cause\n further notification until the memory usage has returned\n to become less than the usage threshold value.\n The value of this notification type is\n java.management.memory.threshold.exceeded."}, {"field_name": "MEMORY_COLLECTION_THRESHOLD_EXCEEDED", "field_sig": "public static final\u00a0String MEMORY_COLLECTION_THRESHOLD_EXCEEDED", "description": "Notification type denoting that\n the memory usage of a memory pool is greater than or equal to its\n \n collection usage threshold after the Java virtual machine\n has expended effort in recycling unused objects in that\n memory pool.\n This notification is emitted by MemoryMXBean.\n The value of this notification type is\n java.management.memory.collection.threshold.exceeded."}], "methods": [{"method_name": "getPoolName", "method_sig": "public String getPoolName()", "description": "Returns the name of the memory pool that triggers this notification.\n The memory pool usage has crossed a threshold."}, {"method_name": "getUsage", "method_sig": "public MemoryUsage getUsage()", "description": "Returns the memory usage of the memory pool\n when this notification was constructed."}, {"method_name": "getCount", "method_sig": "public long getCount()", "description": "Returns the number of times that the memory usage has crossed\n a threshold when the notification was constructed.\n For usage threshold notifications, this count will be the\n threshold\n count.  For collection threshold notifications,\n this count will be the\n collection usage threshold count."}, {"method_name": "from", "method_sig": "public static MemoryNotificationInfo from (CompositeData cd)", "description": "Returns a MemoryNotificationInfo object represented by the\n given CompositeData.\n The given CompositeData must contain\n the following attributes:\n \nThe attributes and the types the given CompositeData contains\n\n\nAttribute Name\nType\n\n\n\n\npoolName\njava.lang.String\n\n\nusage\njavax.management.openmbean.CompositeData\n\n\ncount\njava.lang.Long\n\n\n"}]}