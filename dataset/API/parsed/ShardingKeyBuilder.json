{"name": "Interface ShardingKeyBuilder", "module": "java.sql", "package": "java.sql", "text": "A builder created from a DataSource  or XADataSource object,\n used to create a ShardingKey with sub-keys of supported data types.\n Implementations must\n support JDBCType.VARCHAR and  may also support additional data types.\n \n The following example illustrates the use of ShardingKeyBuilder to\n create a ShardingKey:\n \n \n\n     DataSource ds = new MyDataSource();\n     ShardingKey shardingKey = ds.createShardingKeyBuilder()\n                           .subkey(\"abc\", JDBCType.VARCHAR)\n                           .subkey(94002, JDBCType.INTEGER)\n                           .build();\n \n ", "codes": ["public interface ShardingKeyBuilder"], "fields": [], "methods": [{"method_name": "subkey", "method_sig": "ShardingKeyBuilder subkey (Object subkey,\n                          SQLType subkeyType)", "description": "This method will be called to add a subkey into a Sharding Key object being\n built. The order in which subkey method is called is important as it\n indicates the order of placement of the subkey within the Sharding Key."}, {"method_name": "build", "method_sig": "ShardingKey build()\n           throws SQLException", "description": "Returns an instance of the object defined by this builder."}]}