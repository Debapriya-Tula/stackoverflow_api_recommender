{"name": "Enum RoundingMode", "module": "java.base", "package": "java.math", "text": "Specifies a rounding behavior for numerical operations\n capable of discarding precision. Each rounding mode indicates how\n the least significant returned digit of a rounded result is to be\n calculated.  If fewer digits are returned than the digits needed to\n represent the exact numerical result, the discarded digits will be\n referred to as the discarded fraction regardless the digits'\n contribution to the value of the number.  In other words,\n considered as a numerical value, the discarded fraction could have\n an absolute value greater than one.\n\n Each rounding mode description includes a table listing how\n different two-digit decimal values would round to a one digit\n decimal value under the rounding mode in question.  The result\n column in the tables could be gotten by creating a\n BigDecimal number with the specified value, forming a\n MathContext object with the proper settings\n (precision set to 1, and the\n roundingMode set to the rounding mode in question), and\n calling round on this number with the\n proper MathContext.  A summary table showing the results\n of these rounding operations for all rounding modes appears below.\n\n\nSummary of Rounding Operations Under Different Rounding Modes\n\nInput NumberResult of rounding input to one digit with the given\n                           rounding mode\n\nUP\nDOWN\nCEILING\nFLOOR\nHALF_UP\nHALF_DOWN\nHALF_EVEN\nUNNECESSARY\n\n\n5.5 6 5 6 5 6 5 6 throw ArithmeticException\n2.5 3 2 3 2 3 2 2 throw ArithmeticException\n1.6 2 1 2 1 2 2 2 throw ArithmeticException\n1.1 2 1 2 1 1 1 1 throw ArithmeticException\n1.0 1 1 1 1 1 1 1 1\n-1.0 -1 -1 -1 -1 -1 -1 -1 -1\n-1.1 -2 -1 -1 -2 -1 -1 -1 throw ArithmeticException\n-1.6 -2 -1 -1 -2 -2 -2 -2 throw ArithmeticException\n-2.5 -3 -2 -2 -3 -3 -2 -2 throw ArithmeticException\n-5.5 -6 -5 -5 -6 -6 -5 -6 throw ArithmeticException\n\n\nThis enum is intended to replace the integer-based\n enumeration of rounding mode constants in BigDecimal\n (BigDecimal.ROUND_UP, BigDecimal.ROUND_DOWN,\n etc. ).", "codes": ["public enum RoundingMode\nextends Enum<RoundingMode>"], "fields": [], "methods": [{"method_name": "values", "method_sig": "public static RoundingMode[] values()", "description": "Returns an array containing the constants of this enum type, in\nthe order they are declared. This method may be used to iterate\nover the constants as follows:\n\nfor (RoundingMode c : RoundingMode.values())\n\u00a0   System.out.println(c);\n"}, {"method_name": "valueOf", "method_sig": "public static RoundingMode valueOf (String name)", "description": "Returns the enum constant of this type with the specified name.\nThe string must match exactly an identifier used to declare an\nenum constant in this type.  (Extraneous whitespace characters are \nnot permitted.)"}, {"method_name": "valueOf", "method_sig": "public static RoundingMode valueOf (int rm)", "description": "Returns the RoundingMode object corresponding to a\n legacy integer rounding mode constant in BigDecimal."}]}