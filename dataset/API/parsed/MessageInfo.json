{"name": "Class MessageInfo", "module": "jdk.sctp", "package": "com.sun.nio.sctp", "text": "The MessageInfo class provides additional ancillary information about\n messages.\n\n  Received SCTP messages, returned by\n SctpChannel.receive and SctpMultiChannel.receive,\n return a MessageInfo instance that can be queried to determine\n ancillary information about the received message. Messages being sent should\n use one of the createOutgoing methods to provide ancillary data for the message being\n sent, and may use the appropriate setter methods to override the default\n values provided for unordered, timeToLive, complete and payloadProtocolID, before sending the message.\n\n  For out going messages the timeToLive parameter is a time period\n that the sending side SCTP stack may expire the message if it has not been\n sent. This time period is an indication to the stack that the message is no\n longer required to be sent after the time period expires. It is not a hard\n timeout and may be influenced by whether the association supports the partial\n reliability extension, RFC 3758\n .\n\n  MessageInfo instances are not safe for use by multiple concurrent\n threads. If a MessageInfo is to be used by more than one thread then access\n to the MessageInfo should be controlled by appropriate synchronization.", "codes": ["public abstract class MessageInfo\nextends Object"], "fields": [], "methods": [{"method_name": "createOutgoing", "method_sig": "public static MessageInfo createOutgoing (SocketAddress address,\n                                         int streamNumber)", "description": "Creates a MessageInfo instance suitable for use when\n sending a message.\n\n  The returned instance will have its unordered\n value set to false, its timeToLive value\n set to 0, its complete value set\n to true, and its payloadProtocolID\n value set to 0. These values, if required, can be set through\n the appropriate setter method before sending the message."}, {"method_name": "createOutgoing", "method_sig": "public static MessageInfo createOutgoing (Association association,\n                                         SocketAddress address,\n                                         int streamNumber)", "description": "Creates a MessageInfo instance suitable for use when\n sending a message to a given association. Typically used for\n SctpMultiChannel when an association has already been setup.\n\n  The returned instance will have its unordered\n value set to false, its timeToLive value\n set to 0, its complete value set\n to true, and its payloadProtocolID\n value set to 0. These values, if required, can be set through\n the appropriate setter method before sending the message."}, {"method_name": "address", "method_sig": "public abstract SocketAddress address()", "description": "Returns the source socket address if the message has been received,\n otherwise the preferred destination of the message to be sent."}, {"method_name": "association", "method_sig": "public abstract Association association()", "description": "Returns the association that the message was received on, if the message\n has been received, otherwise the association that the message is to be\n sent on."}, {"method_name": "bytes", "method_sig": "public abstract int bytes()", "description": "Returns the number of bytes read for the received message.\n\n  This method is only appicable for received messages, it has no\n meaning for messages being sent."}, {"method_name": "isComplete", "method_sig": "public abstract boolean isComplete()", "description": "Tells whether or not the message is complete.\n\n  For received messages true indicates that the message was\n completely received. For messages being sent true indicates that\n the message is complete, false indicates that the message is not\n complete. How the send channel interprets this value depends on the value\n of its SCTP_EXPLICIT_COMPLETE socket option."}, {"method_name": "complete", "method_sig": "public abstract MessageInfo complete (boolean complete)", "description": "Sets whether or not the message is complete.\n\n  For messages being sent true indicates that\n the message is complete, false indicates that the message is not\n complete. How the send channel interprets this value depends on the value\n of its SCTP_EXPLICIT_COMPLETE socket option."}, {"method_name": "isUnordered", "method_sig": "public abstract boolean isUnordered()", "description": "Tells whether or not the message is unordered. For received messages\n true indicates that the message was sent non-ordered. For\n messages being sent true requests the un-ordered delivery of the\n message, false indicates that the message is ordered."}, {"method_name": "unordered", "method_sig": "public abstract MessageInfo unordered (boolean unordered)", "description": "Sets whether or not the message is unordered."}, {"method_name": "payloadProtocolID", "method_sig": "public abstract int payloadProtocolID()", "description": "Returns the payload protocol Identifier.\n\n  A value indicating the type of payload protocol data being\n transmitted/received. This value is passed as opaque data by SCTP.\n 0 indicates an unspecified payload protocol identifier."}, {"method_name": "payloadProtocolID", "method_sig": "public abstract MessageInfo payloadProtocolID (int ppid)", "description": "Sets the payload protocol Identifier.\n\n  A value indicating the type of payload protocol data being\n transmitted. This value is passed as opaque data by SCTP."}, {"method_name": "streamNumber", "method_sig": "public abstract int streamNumber()", "description": "Returns the stream number that the message was received on, if the\n message has been received, otherwise the stream number that the message\n is to be sent on."}, {"method_name": "streamNumber", "method_sig": "public abstract MessageInfo streamNumber (int streamNumber)", "description": "Sets the stream number that the message is to be sent on."}, {"method_name": "timeToLive", "method_sig": "public abstract long timeToLive()", "description": "The time period that the sending side may expire the message if it has\n not been sent, or 0 to indicate that no timeout should occur. This\n value is only applicable for messages being sent, it has no meaning for\n received messages."}, {"method_name": "timeToLive", "method_sig": "public abstract MessageInfo timeToLive (long millis)", "description": "Sets the time period that the sending side may expire the message if it\n has not been sent."}]}