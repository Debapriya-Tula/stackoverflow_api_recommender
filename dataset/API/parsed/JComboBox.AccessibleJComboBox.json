{"name": "Class JComboBox.AccessibleJComboBox", "module": "java.desktop", "package": "javax.swing", "text": "This class implements accessibility support for the\n JComboBox class.  It provides an implementation of the\n Java Accessibility API appropriate to Combo Box user-interface elements.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["protected class JComboBox.AccessibleJComboBox\nextends JComponent.AccessibleJComponent\nimplements AccessibleAction, AccessibleSelection"], "fields": [], "methods": [{"method_name": "getAccessibleChildrenCount", "method_sig": "public int getAccessibleChildrenCount()", "description": "Returns the number of accessible children in the object.  If all\n of the children of this object implement Accessible, than this\n method should return the number of children of this object."}, {"method_name": "getAccessibleChild", "method_sig": "public Accessible getAccessibleChild (int i)", "description": "Returns the nth Accessible child of the object.\n The child at index zero represents the popup.\n If the combo box is editable, the child at index one\n represents the editor."}, {"method_name": "getAccessibleRole", "method_sig": "public AccessibleRole getAccessibleRole()", "description": "Get the role of this object."}, {"method_name": "getAccessibleStateSet", "method_sig": "public AccessibleStateSet getAccessibleStateSet()", "description": "Gets the state set of this object.  The AccessibleStateSet of\n an object is composed of a set of unique AccessibleStates.\n A change in the AccessibleStateSet of an object will cause a\n PropertyChangeEvent to be fired for the ACCESSIBLE_STATE_PROPERTY\n property."}, {"method_name": "getAccessibleAction", "method_sig": "public AccessibleAction getAccessibleAction()", "description": "Get the AccessibleAction associated with this object.  In the\n implementation of the Java Accessibility API for this class,\n return this object, which is responsible for implementing the\n AccessibleAction interface on behalf of itself."}, {"method_name": "getAccessibleActionDescription", "method_sig": "public String getAccessibleActionDescription (int i)", "description": "Return a description of the specified action of the object."}, {"method_name": "getAccessibleActionCount", "method_sig": "public int getAccessibleActionCount()", "description": "Returns the number of Actions available in this object.  The\n default behavior of a combo box is to have one action."}, {"method_name": "doAccessibleAction", "method_sig": "public boolean doAccessibleAction (int i)", "description": "Perform the specified Action on the object"}, {"method_name": "getAccessibleSelection", "method_sig": "public AccessibleSelection getAccessibleSelection()", "description": "Get the AccessibleSelection associated with this object.  In the\n implementation of the Java Accessibility API for this class,\n return this object, which is responsible for implementing the\n AccessibleSelection interface on behalf of itself."}, {"method_name": "getAccessibleSelectionCount", "method_sig": "public int getAccessibleSelectionCount()", "description": "Returns the number of Accessible children currently selected.\n If no children are selected, the return value will be 0."}, {"method_name": "getAccessibleSelection", "method_sig": "public Accessible getAccessibleSelection (int i)", "description": "Returns an Accessible representing the specified selected child\n in the popup.  If there isn't a selection, or there are\n fewer children selected than the integer passed in, the return\n value will be null.\n Note that the index represents the i-th selected child, which\n is different from the i-th child."}, {"method_name": "isAccessibleChildSelected", "method_sig": "public boolean isAccessibleChildSelected (int i)", "description": "Determines if the current child of this object is selected."}, {"method_name": "addAccessibleSelection", "method_sig": "public void addAccessibleSelection (int i)", "description": "Adds the specified Accessible child of the object to the object's\n selection.  If the object supports multiple selections,\n the specified child is added to any existing selection, otherwise\n it replaces any existing selection in the object.  If the\n specified child is already selected, this method has no effect."}, {"method_name": "removeAccessibleSelection", "method_sig": "public void removeAccessibleSelection (int i)", "description": "Removes the specified child of the object from the object's\n selection.  If the specified item isn't currently selected, this\n method has no effect."}, {"method_name": "clearAccessibleSelection", "method_sig": "public void clearAccessibleSelection()", "description": "Clears the selection in the object, so that no children in the\n object are selected."}, {"method_name": "selectAllAccessibleSelection", "method_sig": "public void selectAllAccessibleSelection()", "description": "Causes every child of the object to be selected\n if the object supports multiple selections."}]}