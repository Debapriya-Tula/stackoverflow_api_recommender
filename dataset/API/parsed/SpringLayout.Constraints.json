{"name": "Class SpringLayout.Constraints", "module": "java.desktop", "package": "javax.swing", "text": "A Constraints object holds the\n constraints that govern the way a component's size and position\n change in a container controlled by a SpringLayout.\n A Constraints object is\n like a Rectangle, in that it\n has x, y,\n width, and height properties.\n In the Constraints object, however,\n these properties have\n Spring values instead of integers.\n In addition,\n a Constraints object\n can be manipulated as four edges\n -- north, south, east, and west --\n using the constraint property.\n\n \n The following formulas are always true\n for a Constraints object (here WEST and x are synonyms, as are and NORTH and y):\n\n \n               EAST = WEST + WIDTH\n              SOUTH = NORTH + HEIGHT\n  HORIZONTAL_CENTER = WEST + WIDTH/2\n    VERTICAL_CENTER = NORTH + HEIGHT/2\n  ABSOLUTE_BASELINE = NORTH + RELATIVE_BASELINE*\n \n\n For example, if you have specified the WIDTH and WEST (X) location\n the EAST is calculated as WEST + WIDTH.  If you instead specified\n the WIDTH and EAST locations the WEST (X) location is then calculated\n as EAST - WIDTH.\n \n [RELATIVE_BASELINE is a private constraint that is set automatically when\n the SpringLayout.Constraints(Component) constructor is called or when\n a constraints object is registered with a SpringLayout object.]\n \nNote: In this document,\n operators represent methods\n in the Spring class.\n For example, \"a + b\" is equal to\n Spring.sum(a, b),\n and \"a - b\" is equal to\n Spring.sum(a, Spring.minus(b)).\n See the\n Spring API documentation\n for further details\n of spring arithmetic.\n\n \n\n Because a Constraints object's properties --\n representing its edges, size, and location -- can all be set\n independently and yet are interrelated,\n a Constraints object can become over-constrained.\n For example, if the WEST, WIDTH and\n EAST edges are all set, steps must be taken to ensure that\n the first of the formulas above holds.  To do this, the\n Constraints\n object throws away the least recently set\n constraint so as to make the formulas hold.", "codes": ["public static class SpringLayout.Constraints\nextends Object"], "fields": [], "methods": [{"method_name": "setX", "method_sig": "public void setX (Spring x)", "description": "Sets the x property,\n which controls the x value\n of a component's location."}, {"method_name": "getX", "method_sig": "public Spring getX()", "description": "Returns the value of the x property."}, {"method_name": "setY", "method_sig": "public void setY (Spring y)", "description": "Sets the y property,\n which controls the y value\n of a component's location."}, {"method_name": "getY", "method_sig": "public Spring getY()", "description": "Returns the value of the y property."}, {"method_name": "setWidth", "method_sig": "public void setWidth (Spring width)", "description": "Sets the width property,\n which controls the width of a component."}, {"method_name": "getWidth", "method_sig": "public Spring getWidth()", "description": "Returns the value of the width property."}, {"method_name": "setHeight", "method_sig": "public void setHeight (Spring height)", "description": "Sets the height property,\n which controls the height of a component."}, {"method_name": "getHeight", "method_sig": "public Spring getHeight()", "description": "Returns the value of the height property."}, {"method_name": "setConstraint", "method_sig": "public void setConstraint (String edgeName,\n                          Spring s)", "description": "Sets the spring controlling the specified edge.\n The edge must have one of the following values:\n SpringLayout.NORTH,\n SpringLayout.SOUTH,\n SpringLayout.EAST,\n SpringLayout.WEST,\n SpringLayout.HORIZONTAL_CENTER,\n SpringLayout.VERTICAL_CENTER,\n SpringLayout.BASELINE,\n SpringLayout.WIDTH or\n SpringLayout.HEIGHT.\n For any other String value passed as the edge,\n no action is taken. For a null edge, a\n NullPointerException is thrown.\n \nNote: This method can affect x and y values\n previously set for this Constraints."}, {"method_name": "getConstraint", "method_sig": "public Spring getConstraint (String edgeName)", "description": "Returns the value of the specified edge, which may be\n a derived value, or even null.\n The edge must have one of the following values:\n SpringLayout.NORTH,\n SpringLayout.SOUTH,\n SpringLayout.EAST,\n SpringLayout.WEST,\n SpringLayout.HORIZONTAL_CENTER,\n SpringLayout.VERTICAL_CENTER,\n SpringLayout.BASELINE,\n SpringLayout.WIDTH or\n SpringLayout.HEIGHT.\n For any other String value passed as the edge,\n null will be returned. Throws\n NullPointerException for a null edge."}]}