{"name": "Class JTable.AccessibleJTable", "module": "java.desktop", "package": "javax.swing", "text": "This class implements accessibility support for the\n JTable class.  It provides an implementation of the\n Java Accessibility API appropriate to table user-interface elements.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["protected class JTable.AccessibleJTable\nextends JComponent.AccessibleJComponent\nimplements AccessibleSelection, ListSelectionListener, TableModelListener, TableColumnModelListener, CellEditorListener, PropertyChangeListener, AccessibleExtendedTable"], "fields": [], "methods": [{"method_name": "propertyChange", "method_sig": "public void propertyChange (PropertyChangeEvent e)", "description": "Track changes to selection model, column model, etc. so as to\n be able to re-place listeners on those in order to pass on\n information to the Accessibility PropertyChange mechanism"}, {"method_name": "tableChanged", "method_sig": "public void tableChanged (TableModelEvent e)", "description": "Track changes to the table contents"}, {"method_name": "tableRowsInserted", "method_sig": "public void tableRowsInserted (TableModelEvent e)", "description": "Track changes to the table contents (row insertions)"}, {"method_name": "tableRowsDeleted", "method_sig": "public void tableRowsDeleted (TableModelEvent e)", "description": "Track changes to the table contents (row deletions)"}, {"method_name": "columnAdded", "method_sig": "public void columnAdded (TableColumnModelEvent e)", "description": "Track changes to the table contents (column insertions)"}, {"method_name": "columnRemoved", "method_sig": "public void columnRemoved (TableColumnModelEvent e)", "description": "Track changes to the table contents (column deletions)"}, {"method_name": "columnMoved", "method_sig": "public void columnMoved (TableColumnModelEvent e)", "description": "Track changes of a column repositioning."}, {"method_name": "columnMarginChanged", "method_sig": "public void columnMarginChanged (ChangeEvent e)", "description": "Track changes of a column moving due to margin changes."}, {"method_name": "columnSelectionChanged", "method_sig": "public void columnSelectionChanged (ListSelectionEvent e)", "description": "Track that the selection model of the TableColumnModel changed."}, {"method_name": "editingStopped", "method_sig": "public void editingStopped (ChangeEvent e)", "description": "Track changes to a cell's contents.\n\n Invoked when editing is finished. The changes are saved, the\n editor object is discarded, and the cell is rendered once again."}, {"method_name": "editingCanceled", "method_sig": "public void editingCanceled (ChangeEvent e)", "description": "Invoked when editing is canceled. The editor object is discarded\n and the cell is rendered once again."}, {"method_name": "valueChanged", "method_sig": "public void valueChanged (ListSelectionEvent e)", "description": "Track changes to table cell selections"}, {"method_name": "getAccessibleSelection", "method_sig": "public AccessibleSelection getAccessibleSelection()", "description": "Get the AccessibleSelection associated with this object.  In the\n implementation of the Java Accessibility API for this class,\n return this object, which is responsible for implementing the\n AccessibleSelection interface on behalf of itself."}, {"method_name": "getAccessibleRole", "method_sig": "public AccessibleRole getAccessibleRole()", "description": "Gets the role of this object."}, {"method_name": "getAccessibleAt", "method_sig": "public Accessible getAccessibleAt (Point p)", "description": "Returns the Accessible child, if one exists,\n contained at the local coordinate Point."}, {"method_name": "getAccessibleChildrenCount", "method_sig": "public int getAccessibleChildrenCount()", "description": "Returns the number of accessible children in the object.  If all\n of the children of this object implement Accessible,\n then this method should return the number of children of this object."}, {"method_name": "getAccessibleChild", "method_sig": "public Accessible getAccessibleChild (int i)", "description": "Returns the nth Accessible child of the object."}, {"method_name": "getAccessibleSelectionCount", "method_sig": "public int getAccessibleSelectionCount()", "description": "Returns the number of Accessible children\n currently selected.\n If no children are selected, the return value will be 0."}, {"method_name": "getAccessibleSelection", "method_sig": "public Accessible getAccessibleSelection (int i)", "description": "Returns an Accessible representing the\n specified selected child in the object.  If there\n isn't a selection, or there are fewer children selected\n than the integer passed in, the return\n value will be null.\n Note that the index represents the i-th selected child, which\n is different from the i-th child."}, {"method_name": "isAccessibleChildSelected", "method_sig": "public boolean isAccessibleChildSelected (int i)", "description": "Determines if the current child of this object is selected."}, {"method_name": "addAccessibleSelection", "method_sig": "public void addAccessibleSelection (int i)", "description": "Adds the specified Accessible child of the\n object to the object's selection.  If the object supports\n multiple selections, the specified child is added to\n any existing selection, otherwise\n it replaces any existing selection in the object.  If the\n specified child is already selected, this method has no effect.\n \n This method only works on JTables which have\n individual cell selection enabled."}, {"method_name": "removeAccessibleSelection", "method_sig": "public void removeAccessibleSelection (int i)", "description": "Removes the specified child of the object from the object's\n selection.  If the specified item isn't currently selected, this\n method has no effect.\n \n This method only works on JTables which have\n individual cell selection enabled."}, {"method_name": "clearAccessibleSelection", "method_sig": "public void clearAccessibleSelection()", "description": "Clears the selection in the object, so that no children in the\n object are selected."}, {"method_name": "selectAllAccessibleSelection", "method_sig": "public void selectAllAccessibleSelection()", "description": "Causes every child of the object to be selected, but only\n if the JTable supports multiple selections,\n and if individual cell selection is enabled."}, {"method_name": "getAccessibleRow", "method_sig": "public int getAccessibleRow (int index)", "description": "Returns the row number of an index in the table."}, {"method_name": "getAccessibleColumn", "method_sig": "public int getAccessibleColumn (int index)", "description": "Returns the column number of an index in the table."}, {"method_name": "getAccessibleIndex", "method_sig": "public int getAccessibleIndex (int r,\n                              int c)", "description": "Returns the index at a row and column in the table."}, {"method_name": "getAccessibleTable", "method_sig": "public AccessibleTable getAccessibleTable()", "description": "Gets the AccessibleTable associated with this\n object.  In the implementation of the Java Accessibility\n API for this class, return this object, which is responsible\n for implementing the AccessibleTables interface\n on behalf of itself."}, {"method_name": "getAccessibleCaption", "method_sig": "public Accessible getAccessibleCaption()", "description": "Returns the caption for the table."}, {"method_name": "setAccessibleCaption", "method_sig": "public void setAccessibleCaption (Accessible a)", "description": "Sets the caption for the table."}, {"method_name": "getAccessibleSummary", "method_sig": "public Accessible getAccessibleSummary()", "description": "Returns the summary description of the table."}, {"method_name": "setAccessibleSummary", "method_sig": "public void setAccessibleSummary (Accessible a)", "description": "Sets the summary description of the table."}, {"method_name": "getAccessibleRowExtentAt", "method_sig": "public int getAccessibleRowExtentAt (int r,\n                                    int c)", "description": "Returns the number of rows occupied by the Accessible\n at a specified row and column in the table."}, {"method_name": "getAccessibleColumnExtentAt", "method_sig": "public int getAccessibleColumnExtentAt (int r,\n                                       int c)", "description": "Returns the number of columns occupied by the\n Accessible at a given (row, column)."}, {"method_name": "getAccessibleRowHeader", "method_sig": "public AccessibleTable getAccessibleRowHeader()", "description": "Returns the row headers as an AccessibleTable."}, {"method_name": "setAccessibleRowHeader", "method_sig": "public void setAccessibleRowHeader (AccessibleTable a)", "description": "Sets the row headers as an AccessibleTable."}, {"method_name": "getAccessibleColumnHeader", "method_sig": "public AccessibleTable getAccessibleColumnHeader()", "description": "Returns the column headers as an AccessibleTable."}, {"method_name": "setAccessibleColumnHeader", "method_sig": "public void setAccessibleColumnHeader (AccessibleTable a)", "description": "Sets the column headers as an AccessibleTable."}, {"method_name": "getAccessibleRowDescription", "method_sig": "public Accessible getAccessibleRowDescription (int r)", "description": "Returns the description of the specified row in the table."}, {"method_name": "setAccessibleRowDescription", "method_sig": "public void setAccessibleRowDescription (int r,\n                                        Accessible a)", "description": "Sets the description text of the specified row of the table."}, {"method_name": "getAccessibleColumnDescription", "method_sig": "public Accessible getAccessibleColumnDescription (int c)", "description": "Returns the description of the specified column in the table."}, {"method_name": "setAccessibleColumnDescription", "method_sig": "public void setAccessibleColumnDescription (int c,\n                                           Accessible a)", "description": "Sets the description text of the specified column of the table."}, {"method_name": "isAccessibleSelected", "method_sig": "public boolean isAccessibleSelected (int r,\n                                    int c)", "description": "Returns a boolean value indicating whether the accessible at a\n given (row, column) is selected."}, {"method_name": "isAccessibleRowSelected", "method_sig": "public boolean isAccessibleRowSelected (int r)", "description": "Returns a boolean value indicating whether the specified row\n is selected."}, {"method_name": "isAccessibleColumnSelected", "method_sig": "public boolean isAccessibleColumnSelected (int c)", "description": "Returns a boolean value indicating whether the specified column\n is selected."}, {"method_name": "getSelectedAccessibleRows", "method_sig": "public int[] getSelectedAccessibleRows()", "description": "Returns the selected rows in a table."}, {"method_name": "getSelectedAccessibleColumns", "method_sig": "public int[] getSelectedAccessibleColumns()", "description": "Returns the selected columns in a table."}, {"method_name": "getAccessibleRowAtIndex", "method_sig": "public int getAccessibleRowAtIndex (int i)", "description": "Returns the row at a given index into the table."}, {"method_name": "getAccessibleColumnAtIndex", "method_sig": "public int getAccessibleColumnAtIndex (int i)", "description": "Returns the column at a given index into the table."}, {"method_name": "getAccessibleIndexAt", "method_sig": "public int getAccessibleIndexAt (int r,\n                                int c)", "description": "Returns the index at a given (row, column) in the table."}]}