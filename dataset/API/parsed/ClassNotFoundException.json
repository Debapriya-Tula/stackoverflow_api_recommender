{"name": "Class ClassNotFoundException", "module": "java.base", "package": "java.lang", "text": "Thrown when an application tries to load in a class through its\n string name using:\n \nThe forName method in class Class.\n The findSystemClass method in class\n     ClassLoader .\n The loadClass method in class ClassLoader.\n \n\n but no definition for the class with the specified name could be found.\n\n As of release 1.4, this exception has been retrofitted to conform to\n the general purpose exception-chaining mechanism.  The \"optional exception\n that was raised while loading the class\" that may be provided at\n construction time and accessed via the getException() method is\n now known as the cause, and may be accessed via the Throwable.getCause() method, as well as the aforementioned \"legacy method.\"", "codes": ["public class ClassNotFoundException\nextends ReflectiveOperationException"], "fields": [], "methods": [{"method_name": "getException", "method_sig": "public Throwable getException()", "description": "Returns the exception that was raised if an error occurred while\n attempting to load the class. Otherwise, returns null.\n\n This method predates the general-purpose exception chaining facility.\n The Throwable.getCause() method is now the preferred means of\n obtaining this information."}, {"method_name": "getCause", "method_sig": "public Throwable getCause()", "description": "Returns the cause of this exception (the exception that was raised\n if an error occurred while attempting to load the class; otherwise\n null)."}]}