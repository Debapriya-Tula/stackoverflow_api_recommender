{"name": "Interface RMIServerSocketFactory", "module": "java.rmi", "package": "java.rmi.server", "text": "An RMIServerSocketFactory instance is used by the RMI runtime\n in order to obtain server sockets for RMI calls.  A remote object can be\n associated with an RMIServerSocketFactory when it is\n created/exported via the constructors or exportObject methods\n of java.rmi.server.UnicastRemoteObject and\n java.rmi.activation.Activatable .\n\n An RMIServerSocketFactory instance associated with a remote\n object is used to obtain the ServerSocket used to accept\n incoming calls from clients.\n\n An RMIServerSocketFactory instance can also be associated\n with a remote object registry so that clients can use custom socket\n communication with a remote object registry.\n\n An implementation of this interface\n should implement Object.equals(java.lang.Object) to return true when\n passed an instance that represents the same (functionally equivalent)\n server socket factory, and false otherwise (and it should also\n implement Object.hashCode() consistently with its\n Object.equals implementation).", "codes": ["public interface RMIServerSocketFactory"], "fields": [], "methods": [{"method_name": "createServerSocket", "method_sig": "ServerSocket createServerSocket (int port)\n                         throws IOException", "description": "Create a server socket on the specified port (port 0 indicates\n an anonymous port)."}]}