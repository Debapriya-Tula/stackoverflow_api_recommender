{"name": "Class JTable.AccessibleJTable.AccessibleJTableCell", "module": "java.desktop", "package": "javax.swing", "text": "The class provides an implementation of the Java Accessibility\n API appropriate to table cells.", "codes": ["protected class JTable.AccessibleJTable.AccessibleJTableCell\nextends AccessibleContext\nimplements Accessible, AccessibleComponent"], "fields": [], "methods": [{"method_name": "getAccessibleContext", "method_sig": "public AccessibleContext getAccessibleContext()", "description": "Gets the AccessibleContext associated with this\n component. In the implementation of the Java Accessibility\n API for this class, return this object, which is its own\n AccessibleContext."}, {"method_name": "getCurrentAccessibleContext", "method_sig": "protected AccessibleContext getCurrentAccessibleContext()", "description": "Gets the AccessibleContext for the table cell renderer."}, {"method_name": "getCurrentComponent", "method_sig": "protected Component getCurrentComponent()", "description": "Gets the table cell renderer component."}, {"method_name": "getAccessibleName", "method_sig": "public String getAccessibleName()", "description": "Gets the accessible name of this object."}, {"method_name": "setAccessibleName", "method_sig": "public void setAccessibleName (String s)", "description": "Sets the localized accessible name of this object."}, {"method_name": "getAccessibleDescription", "method_sig": "public String getAccessibleDescription()", "description": "Gets the accessible description of this object."}, {"method_name": "setAccessibleDescription", "method_sig": "public void setAccessibleDescription (String s)", "description": "Sets the accessible description of this object."}, {"method_name": "getAccessibleRole", "method_sig": "public AccessibleRole getAccessibleRole()", "description": "Gets the role of this object."}, {"method_name": "getAccessibleStateSet", "method_sig": "public AccessibleStateSet getAccessibleStateSet()", "description": "Gets the state set of this object."}, {"method_name": "getAccessibleParent", "method_sig": "public Accessible getAccessibleParent()", "description": "Gets the Accessible parent of this object."}, {"method_name": "getAccessibleIndexInParent", "method_sig": "public int getAccessibleIndexInParent()", "description": "Gets the index of this object in its accessible parent."}, {"method_name": "getAccessibleChildrenCount", "method_sig": "public int getAccessibleChildrenCount()", "description": "Returns the number of accessible children in the object."}, {"method_name": "getAccessibleChild", "method_sig": "public Accessible getAccessibleChild (int i)", "description": "Returns the specified Accessible child of the\n object."}, {"method_name": "getLocale", "method_sig": "public Locale getLocale()", "description": "Gets the locale of the component. If the component\n does not have a locale, then the locale of its parent\n is returned."}, {"method_name": "addPropertyChangeListener", "method_sig": "public void addPropertyChangeListener (PropertyChangeListener l)", "description": "Adds a PropertyChangeListener to the listener list.\n The listener is registered for all properties."}, {"method_name": "removePropertyChangeListener", "method_sig": "public void removePropertyChangeListener (PropertyChangeListener l)", "description": "Removes a PropertyChangeListener from the\n listener list. This removes a PropertyChangeListener\n that was registered for all properties."}, {"method_name": "getAccessibleAction", "method_sig": "public AccessibleAction getAccessibleAction()", "description": "Gets the AccessibleAction associated with this\n object if one exists.  Otherwise returns null."}, {"method_name": "getAccessibleComponent", "method_sig": "public AccessibleComponent getAccessibleComponent()", "description": "Gets the AccessibleComponent associated with\n this object if one exists.  Otherwise returns null."}, {"method_name": "getAccessibleSelection", "method_sig": "public AccessibleSelection getAccessibleSelection()", "description": "Gets the AccessibleSelection associated with\n this object if one exists.  Otherwise returns null."}, {"method_name": "getAccessibleText", "method_sig": "public AccessibleText getAccessibleText()", "description": "Gets the AccessibleText associated with this\n object if one exists.  Otherwise returns null."}, {"method_name": "getAccessibleValue", "method_sig": "public AccessibleValue getAccessibleValue()", "description": "Gets the AccessibleValue associated with\n this object if one exists.  Otherwise returns null."}, {"method_name": "getBackground", "method_sig": "public Color getBackground()", "description": "Gets the background color of this object."}, {"method_name": "setBackground", "method_sig": "public void setBackground (Color c)", "description": "Sets the background color of this object."}, {"method_name": "getForeground", "method_sig": "public Color getForeground()", "description": "Gets the foreground color of this object."}, {"method_name": "setForeground", "method_sig": "public void setForeground (Color c)", "description": "Sets the foreground color of this object."}, {"method_name": "getCursor", "method_sig": "public Cursor getCursor()", "description": "Gets the Cursor of this object."}, {"method_name": "setCursor", "method_sig": "public void setCursor (Cursor c)", "description": "Sets the Cursor of this object."}, {"method_name": "getFont", "method_sig": "public Font getFont()", "description": "Gets the Font of this object."}, {"method_name": "setFont", "method_sig": "public void setFont (Font f)", "description": "Sets the Font of this object."}, {"method_name": "getFontMetrics", "method_sig": "public FontMetrics getFontMetrics (Font f)", "description": "Gets the FontMetrics of this object."}, {"method_name": "isEnabled", "method_sig": "public boolean isEnabled()", "description": "Determines if the object is enabled."}, {"method_name": "setEnabled", "method_sig": "public void setEnabled (boolean b)", "description": "Sets the enabled state of the object."}, {"method_name": "isVisible", "method_sig": "public boolean isVisible()", "description": "Determines if this object is visible.  Note: this means that the\n object intends to be visible; however, it may not in fact be\n showing on the screen because one of the objects that this object\n is contained by is not visible.  To determine if an object is\n showing on the screen, use isShowing."}, {"method_name": "setVisible", "method_sig": "public void setVisible (boolean b)", "description": "Sets the visible state of the object."}, {"method_name": "isShowing", "method_sig": "public boolean isShowing()", "description": "Determines if the object is showing.  This is determined\n by checking the visibility of the object and ancestors\n of the object.  Note: this will return true even if the\n object is obscured by another (for example,\n it happens to be underneath a menu that was pulled down)."}, {"method_name": "contains", "method_sig": "public boolean contains (Point p)", "description": "Checks whether the specified point is within this\n object's bounds, where the point's x and y coordinates\n are defined to be relative to the coordinate system of\n the object."}, {"method_name": "getLocationOnScreen", "method_sig": "public Point getLocationOnScreen()", "description": "Returns the location of the object on the screen."}, {"method_name": "getLocation", "method_sig": "public Point getLocation()", "description": "Gets the location of the object relative to the parent\n in the form of a point specifying the object's\n top-left corner in the screen's coordinate space."}, {"method_name": "setLocation", "method_sig": "public void setLocation (Point p)", "description": "Sets the location of the object relative to the parent."}]}