{"name": "Class NashornScriptEngineFactory", "module": "jdk.scripting.nashorn", "package": "jdk.nashorn.api.scripting", "text": "JSR-223 compliant script engine factory for Nashorn. The engine answers for:\n \nnames \"nashorn\", \"Nashorn\", \"js\", \"JS\", \"JavaScript\",\n \"javascript\", \"ECMAScript\", and \"ecmascript\";\nMIME types \"application/javascript\", \"application/ecmascript\", \"text/javascript\", and\n \"text/ecmascript\";\nas well as for the extension \"js\".\n\n Programs executing in engines created using getScriptEngine(String[]) will have the passed arguments\n accessible as a global variable named \"arguments\".", "codes": ["@Deprecated(since=\"11\",\n            forRemoval=true)\npublic final class NashornScriptEngineFactory\nextends Object\nimplements ScriptEngineFactory"], "fields": [], "methods": [{"method_name": "getScriptEngine", "method_sig": "public ScriptEngine getScriptEngine (ClassLoader appLoader)", "description": "Create a new Script engine initialized with the given class loader."}, {"method_name": "getScriptEngine", "method_sig": "public ScriptEngine getScriptEngine (ClassFilter classFilter)", "description": "Create a new Script engine initialized with the given class filter."}, {"method_name": "getScriptEngine", "method_sig": "public ScriptEngine getScriptEngine (String... args)", "description": "Create a new Script engine initialized with the given arguments."}, {"method_name": "getScriptEngine", "method_sig": "public ScriptEngine getScriptEngine (String[] args,\n                                    ClassLoader appLoader)", "description": "Create a new Script engine initialized with the given arguments and the given class loader."}, {"method_name": "getScriptEngine", "method_sig": "public ScriptEngine getScriptEngine (String[] args,\n                                    ClassLoader appLoader,\n                                    ClassFilter classFilter)", "description": "Create a new Script engine initialized with the given arguments, class loader and class filter."}]}