{"name": "Class Association", "module": "jdk.sctp", "package": "com.sun.nio.sctp", "text": "A class that represents an SCTP association.\n\n  An association exists between two SCTP endpoints. Each endpoint is\n represented by a list of transport addresses through which that endpoint can\n be reached and from which it will originate SCTP messages. The association\n spans over all of the possible source/destination combinations which may be\n generated from each endpoint's lists of addresses.\n\n  Associations are identified by their Association ID.\n Association ID's are guaranteed to be unique for the lifetime of the\n association. An association ID may be reused after the association has been\n shutdown. An association ID is not unique across multiple SCTP channels.\n An Association's local and remote addresses may change if the SCTP\n implementation supports Dynamic Address Reconfiguration as defined by\n RFC5061, see the\n bindAddress and unbindAddress methods of SctpChannel,\n SctpServerChannel, and SctpMultiChannel.\n\n  An Association is returned from an SctpChannel or an SctpMultiChannel, as well\n as being given as a parameter to NotificationHandler methods.", "codes": ["public class Association\nextends Object"], "fields": [], "methods": [{"method_name": "associationID", "method_sig": "public final int associationID()", "description": "Returns the associationID."}, {"method_name": "maxInboundStreams", "method_sig": "public final int maxInboundStreams()", "description": "Returns the maximum number of inbound streams that this association\n supports.\n\n  Data received on this association will be on stream number\n s, where 0 <= s < maxInboundStreams()."}, {"method_name": "maxOutboundStreams", "method_sig": "public final int maxOutboundStreams()", "description": "Returns the maximum number of outbound streams that this association\n supports.\n\n  Data sent on this association must be on stream number\n s, where 0 <= s < maxOutboundStreams()."}]}