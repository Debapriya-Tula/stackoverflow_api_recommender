{"name": "Class SimpleTreeVisitor<R,\u200bP>", "module": "jdk.compiler", "package": "com.sun.source.util", "text": "A simple visitor for tree nodes.", "codes": ["public class SimpleTreeVisitor<R, P>\nextends Object\nimplements TreeVisitor<R, P>"], "fields": [{"field_name": "DEFAULT_VALUE", "field_sig": "protected final\u00a0R DEFAULT_VALUE", "description": "The default value, returned by the default action."}], "methods": [{"method_name": "defaultAction", "method_sig": "protected R defaultAction (Tree node,\n                          P p)", "description": "The default action, used by all visit methods that are not overridden."}, {"method_name": "visit", "method_sig": "public final R visit (Tree node,\n                     P p)", "description": "Invokes the appropriate visit method specific to the type of the node."}, {"method_name": "visit", "method_sig": "public final R visit (Iterable<? extends Tree> nodes,\n                     P p)", "description": "Invokes the appropriate visit method on each of a sequence of nodes."}, {"method_name": "visitCompilationUnit", "method_sig": "public R visitCompilationUnit (CompilationUnitTree node,\n                              P p)", "description": "Visits a CompilationUnitTree node. This implementation calls defaultAction."}, {"method_name": "visitPackage", "method_sig": "public R visitPackage (PackageTree node,\n                      P p)", "description": "Visits a PackageTree node. This implementation calls defaultAction."}, {"method_name": "visitImport", "method_sig": "public R visitImport (ImportTree node,\n                     P p)", "description": "Visits an ImportTree node. This implementation calls defaultAction."}, {"method_name": "visitClass", "method_sig": "public R visitClass (ClassTree node,\n                    P p)", "description": "Visits a ClassTree node. This implementation calls defaultAction."}, {"method_name": "visitMethod", "method_sig": "public R visitMethod (MethodTree node,\n                     P p)", "description": "Visits a MethodTree node. This implementation calls defaultAction."}, {"method_name": "visitVariable", "method_sig": "public R visitVariable (VariableTree node,\n                       P p)", "description": "Visits a VariableTree node. This implementation calls defaultAction."}, {"method_name": "visitEmptyStatement", "method_sig": "public R visitEmptyStatement (EmptyStatementTree node,\n                             P p)", "description": "Visits an EmptyStatementTree node. This implementation calls defaultAction."}, {"method_name": "visitBlock", "method_sig": "public R visitBlock (BlockTree node,\n                    P p)", "description": "Visits a BlockTree node. This implementation calls defaultAction."}, {"method_name": "visitDoWhileLoop", "method_sig": "public R visitDoWhileLoop (DoWhileLoopTree node,\n                          P p)", "description": "Visits a DoWhileTree node. This implementation calls defaultAction."}, {"method_name": "visitWhileLoop", "method_sig": "public R visitWhileLoop (WhileLoopTree node,\n                        P p)", "description": "Visits a WhileLoopTree node. This implementation calls defaultAction."}, {"method_name": "visitForLoop", "method_sig": "public R visitForLoop (ForLoopTree node,\n                      P p)", "description": "Visits a ForLoopTree node. This implementation calls defaultAction."}, {"method_name": "visitEnhancedForLoop", "method_sig": "public R visitEnhancedForLoop (EnhancedForLoopTree node,\n                              P p)", "description": "Visits an EnhancedForLoopTree node. This implementation calls defaultAction."}, {"method_name": "visitLabeledStatement", "method_sig": "public R visitLabeledStatement (LabeledStatementTree node,\n                               P p)", "description": "Visits a LabeledStatementTree node. This implementation calls defaultAction."}, {"method_name": "visitSwitch", "method_sig": "public R visitSwitch (SwitchTree node,\n                     P p)", "description": "Visits a SwitchTree node. This implementation calls defaultAction."}, {"method_name": "visitCase", "method_sig": "public R visitCase (CaseTree node,\n                   P p)", "description": "Visits a CaseTree node. This implementation calls defaultAction."}, {"method_name": "visitSynchronized", "method_sig": "public R visitSynchronized (SynchronizedTree node,\n                           P p)", "description": "Visits a SynchronizedTree node. This implementation calls defaultAction."}, {"method_name": "visitTry", "method_sig": "public R visitTry (TryTree node,\n                  P p)", "description": "Visits a TryTree node. This implementation calls defaultAction."}, {"method_name": "visitCatch", "method_sig": "public R visitCatch (CatchTree node,\n                    P p)", "description": "Visits a CatchTree node. This implementation calls defaultAction."}, {"method_name": "visitConditionalExpression", "method_sig": "public R visitConditionalExpression (ConditionalExpressionTree node,\n                                    P p)", "description": "Visits a ConditionalExpressionTree node. This implementation calls defaultAction."}, {"method_name": "visitIf", "method_sig": "public R visitIf (IfTree node,\n                 P p)", "description": "Visits an IfTree node. This implementation calls defaultAction."}, {"method_name": "visitExpressionStatement", "method_sig": "public R visitExpressionStatement (ExpressionStatementTree node,\n                                  P p)", "description": "Visits an ExpressionStatementTree node. This implementation calls defaultAction."}, {"method_name": "visitBreak", "method_sig": "public R visitBreak (BreakTree node,\n                    P p)", "description": "Visits a BreakTree node. This implementation calls defaultAction."}, {"method_name": "visitContinue", "method_sig": "public R visitContinue (ContinueTree node,\n                       P p)", "description": "Visits a ContinueTree node. This implementation calls defaultAction."}, {"method_name": "visitReturn", "method_sig": "public R visitReturn (ReturnTree node,\n                     P p)", "description": "Visits a ReturnTree node. This implementation calls defaultAction."}, {"method_name": "visitThrow", "method_sig": "public R visitThrow (ThrowTree node,\n                    P p)", "description": "Visits a ThrowTree node. This implementation calls defaultAction."}, {"method_name": "visitAssert", "method_sig": "public R visitAssert (AssertTree node,\n                     P p)", "description": "Visits an AssertTree node. This implementation calls defaultAction."}, {"method_name": "visitMethodInvocation", "method_sig": "public R visitMethodInvocation (MethodInvocationTree node,\n                               P p)", "description": "Visits a MethodInvocationTree node. This implementation calls defaultAction."}, {"method_name": "visitNewClass", "method_sig": "public R visitNewClass (NewClassTree node,\n                       P p)", "description": "Visits a NewClassTree node. This implementation calls defaultAction."}, {"method_name": "visitNewArray", "method_sig": "public R visitNewArray (NewArrayTree node,\n                       P p)", "description": "Visits a NewArrayTree node. This implementation calls defaultAction."}, {"method_name": "visitLambdaExpression", "method_sig": "public R visitLambdaExpression (LambdaExpressionTree node,\n                               P p)", "description": "Visits a LambdaExpressionTree node. This implementation calls defaultAction."}, {"method_name": "visitParenthesized", "method_sig": "public R visitParenthesized (ParenthesizedTree node,\n                            P p)", "description": "Visits a ParenthesizedTree node. This implementation calls defaultAction."}, {"method_name": "visitAssignment", "method_sig": "public R visitAssignment (AssignmentTree node,\n                         P p)", "description": "Visits an AssignmentTree node. This implementation calls defaultAction."}, {"method_name": "visitCompoundAssignment", "method_sig": "public R visitCompoundAssignment (CompoundAssignmentTree node,\n                                 P p)", "description": "Visits a CompoundAssignmentTree node. This implementation calls defaultAction."}, {"method_name": "visitUnary", "method_sig": "public R visitUnary (UnaryTree node,\n                    P p)", "description": "Visits a UnaryTree node. This implementation calls defaultAction."}, {"method_name": "visitBinary", "method_sig": "public R visitBinary (BinaryTree node,\n                     P p)", "description": "Visits a BinaryTree node. This implementation calls defaultAction."}, {"method_name": "visitTypeCast", "method_sig": "public R visitTypeCast (TypeCastTree node,\n                       P p)", "description": "Visits a TypeCastTree node. This implementation calls defaultAction."}, {"method_name": "visitInstanceOf", "method_sig": "public R visitInstanceOf (InstanceOfTree node,\n                         P p)", "description": "Visits an InstanceOfTree node. This implementation calls defaultAction."}, {"method_name": "visitArrayAccess", "method_sig": "public R visitArrayAccess (ArrayAccessTree node,\n                          P p)", "description": "Visits an ArrayAccessTree node. This implementation calls defaultAction."}, {"method_name": "visitMemberSelect", "method_sig": "public R visitMemberSelect (MemberSelectTree node,\n                           P p)", "description": "Visits a MemberSelectTree node. This implementation calls defaultAction."}, {"method_name": "visitMemberReference", "method_sig": "public R visitMemberReference (MemberReferenceTree node,\n                              P p)", "description": "Visits a MemberReferenceTree node. This implementation calls defaultAction."}, {"method_name": "visitIdentifier", "method_sig": "public R visitIdentifier (IdentifierTree node,\n                         P p)", "description": "Visits an IdentifierTree node. This implementation calls defaultAction."}, {"method_name": "visitLiteral", "method_sig": "public R visitLiteral (LiteralTree node,\n                      P p)", "description": "Visits a LiteralTree node. This implementation calls defaultAction."}, {"method_name": "visitPrimitiveType", "method_sig": "public R visitPrimitiveType (PrimitiveTypeTree node,\n                            P p)", "description": "Visits a PrimitiveTypeTree node. This implementation calls defaultAction."}, {"method_name": "visitArrayType", "method_sig": "public R visitArrayType (ArrayTypeTree node,\n                        P p)", "description": "Visits an ArrayTypeTree node. This implementation calls defaultAction."}, {"method_name": "visitParameterizedType", "method_sig": "public R visitParameterizedType (ParameterizedTypeTree node,\n                                P p)", "description": "Visits a ParameterizedTypeTree node. This implementation calls defaultAction."}, {"method_name": "visitUnionType", "method_sig": "public R visitUnionType (UnionTypeTree node,\n                        P p)", "description": "Visits a UnionTypeTree node. This implementation calls defaultAction."}, {"method_name": "visitIntersectionType", "method_sig": "public R visitIntersectionType (IntersectionTypeTree node,\n                               P p)", "description": "Visits an IntersectionTypeTree node. This implementation calls defaultAction."}, {"method_name": "visitTypeParameter", "method_sig": "public R visitTypeParameter (TypeParameterTree node,\n                            P p)", "description": "Visits a TypeParameterTree node. This implementation calls defaultAction."}, {"method_name": "visitWildcard", "method_sig": "public R visitWildcard (WildcardTree node,\n                       P p)", "description": "Visits a WildcardTypeTree node. This implementation calls defaultAction."}, {"method_name": "visitModifiers", "method_sig": "public R visitModifiers (ModifiersTree node,\n                        P p)", "description": "Visits a ModifiersTree node. This implementation calls defaultAction."}, {"method_name": "visitAnnotation", "method_sig": "public R visitAnnotation (AnnotationTree node,\n                         P p)", "description": "Visits an AnnotatedTree node. This implementation calls defaultAction."}, {"method_name": "visitAnnotatedType", "method_sig": "public R visitAnnotatedType (AnnotatedTypeTree node,\n                            P p)", "description": "Visits an AnnotatedTypeTree node. This implementation calls defaultAction."}, {"method_name": "visitOther", "method_sig": "public R visitOther (Tree node,\n                    P p)", "description": "Visits an unknown type of Tree node.\n This can occur if the language evolves and new kinds\n of nodes are added to the Tree hierarchy. This implementation calls defaultAction."}]}