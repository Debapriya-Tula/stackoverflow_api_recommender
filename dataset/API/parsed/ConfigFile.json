{"name": "Class ConfigFile", "module": "jdk.security.auth", "package": "com.sun.security.auth.login", "text": "This class represents a default implementation for\n javax.security.auth.login.Configuration.\n\n  This object stores the runtime login configuration representation,\n and is the amalgamation of multiple static login\n configurations that resides in files.\n The algorithm for locating the login configuration file(s) and reading their\n information into this Configuration object is:\n\n \n\n   Loop through the security properties,\n   login.config.url.1, login.config.url.2, ...,\n   login.config.url.X.\n   Each property value specifies a URL pointing to a\n   login configuration file to be loaded.  Read in and load\n   each configuration.\n\n \n   The java.lang.System property\n   java.security.auth.login.config\n   may also be set to a URL pointing to another\n   login configuration file\n   (which is the case when a user uses the -D switch at runtime).\n   If this property is defined, and its use is allowed by the\n   security property file (the Security property,\n   policy.allowSystemProperty is set to true),\n   also load that login configuration.\n\n \n   If the java.security.auth.login.config property is defined using\n   \"==\" (rather than \"=\"), then ignore all other specified\n   login configurations and only load this configuration.\n\n \n   If no system or security properties were set, try to read from the file,\n   ${user.home}/.java.login.config, where ${user.home} is the value\n   represented by the \"user.home\" System property.\n \n The configuration syntax supported by this implementation\n is exactly that syntax specified in the\n javax.security.auth.login.Configuration class.", "codes": ["public class ConfigFile\nextends Configuration"], "fields": [], "methods": [{"method_name": "getAppConfigurationEntry", "method_sig": "public AppConfigurationEntry[] getAppConfigurationEntry (String applicationName)", "description": "Retrieve an entry from the Configuration using an application\n name as an index."}, {"method_name": "refresh", "method_sig": "public void refresh()", "description": "Refresh and reload the Configuration by re-reading all of the\n login configurations."}]}