{"name": "Class AbstractExecutorService", "module": "java.base", "package": "java.util.concurrent", "text": "Provides default implementations of ExecutorService\n execution methods. This class implements the submit,\n invokeAny and invokeAll methods using a\n RunnableFuture returned by newTaskFor, which defaults\n to the FutureTask class provided in this package.  For example,\n the implementation of submit(Runnable) creates an\n associated RunnableFuture that is executed and\n returned. Subclasses may override the newTaskFor methods\n to return RunnableFuture implementations other than\n FutureTask.\n\n Extension example. Here is a sketch of a class\n that customizes ThreadPoolExecutor to use\n a CustomTask class instead of the default FutureTask:\n  \n public class CustomThreadPoolExecutor extends ThreadPoolExecutor {\n\n   static class CustomTask<V> implements RunnableFuture<V> {...}\n\n   protected <V> RunnableFuture<V> newTaskFor(Callable<V> c) {\n       return new CustomTask<V>(c);\n   }\n   protected <V> RunnableFuture<V> newTaskFor(Runnable r, V v) {\n       return new CustomTask<V>(r, v);\n   }\n   // ... add constructors, etc.\n }", "codes": ["public abstract class AbstractExecutorService\nextends Object\nimplements ExecutorService"], "fields": [], "methods": [{"method_name": "newTaskFor", "method_sig": "protected <T> RunnableFuture<T> newTaskFor (Runnable runnable,\n                                           T value)", "description": "Returns a RunnableFuture for the given runnable and default\n value."}, {"method_name": "newTaskFor", "method_sig": "protected <T> RunnableFuture<T> newTaskFor (Callable<T> callable)", "description": "Returns a RunnableFuture for the given callable task."}, {"method_name": "submit", "method_sig": "public Future<?> submit (Runnable task)", "description": "Description copied from interface:\u00a0ExecutorService"}, {"method_name": "submit", "method_sig": "public <T> Future<T> submit (Runnable task,\n                            T result)", "description": "Description copied from interface:\u00a0ExecutorService"}, {"method_name": "submit", "method_sig": "public <T> Future<T> submit (Callable<T> task)", "description": "Description copied from interface:\u00a0ExecutorService"}]}