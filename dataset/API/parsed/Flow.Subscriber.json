{"name": "Interface Flow.Subscriber<T>", "module": "java.base", "package": "java.util.concurrent", "text": "A receiver of messages.  The methods in this interface are\n invoked in strict sequential order for each Flow.Subscription.", "codes": ["public static interface Flow.Subscriber<T>"], "fields": [], "methods": [{"method_name": "onSubscribe", "method_sig": "void onSubscribe (Flow.Subscription subscription)", "description": "Method invoked prior to invoking any other Subscriber\n methods for the given Subscription. If this method throws\n an exception, resulting behavior is not guaranteed, but may\n cause the Subscription not to be established or to be cancelled.\n\n Typically, implementations of this method invoke \n subscription.request to enable receiving items."}, {"method_name": "onNext", "method_sig": "void onNext (T item)", "description": "Method invoked with a Subscription's next item.  If this\n method throws an exception, resulting behavior is not\n guaranteed, but may cause the Subscription to be cancelled."}, {"method_name": "onError", "method_sig": "void onError (Throwable throwable)", "description": "Method invoked upon an unrecoverable error encountered by a\n Publisher or Subscription, after which no other Subscriber\n methods are invoked by the Subscription.  If this method\n itself throws an exception, resulting behavior is\n undefined."}, {"method_name": "onComplete", "method_sig": "void onComplete()", "description": "Method invoked when it is known that no additional\n Subscriber method invocations will occur for a Subscription\n that is not already terminated by error, after which no\n other Subscriber methods are invoked by the Subscription.\n If this method throws an exception, resulting behavior is\n undefined."}]}