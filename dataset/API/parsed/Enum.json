{"name": "Class Enum<E extends Enum<E>>", "module": "java.base", "package": "java.lang", "text": "This is the common base class of all Java language enumeration types.\n\n More information about enums, including descriptions of the\n implicitly declared methods synthesized by the compiler, can be\n found in section 8.9 of\n The Java\u2122 Language Specification.\n\n  Note that when using an enumeration type as the type of a set\n or as the type of the keys in a map, specialized and efficient\n set and map implementations are available.", "codes": ["public abstract class Enum<E extends Enum<E>>\nextends Object\nimplements Comparable<E>, Serializable"], "fields": [], "methods": [{"method_name": "name", "method_sig": "public final String name()", "description": "Returns the name of this enum constant, exactly as declared in its\n enum declaration.\n\n Most programmers should use the toString() method in\n preference to this one, as the toString method may return\n a more user-friendly name.  This method is designed primarily for\n use in specialized situations where correctness depends on getting the\n exact name, which will not vary from release to release."}, {"method_name": "ordinal", "method_sig": "public final int ordinal()", "description": "Returns the ordinal of this enumeration constant (its position\n in its enum declaration, where the initial constant is assigned\n an ordinal of zero).\n\n Most programmers will have no use for this method.  It is\n designed for use by sophisticated enum-based data structures, such\n as EnumSet and EnumMap."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Returns the name of this enum constant, as contained in the\n declaration.  This method may be overridden, though it typically\n isn't necessary or desirable.  An enum type should override this\n method when a more \"programmer-friendly\" string form exists."}, {"method_name": "equals", "method_sig": "public final boolean equals (Object other)", "description": "Returns true if the specified object is equal to this\n enum constant."}, {"method_name": "hashCode", "method_sig": "public final int hashCode()", "description": "Returns a hash code for this enum constant."}, {"method_name": "clone", "method_sig": "protected final Object clone()\n                      throws CloneNotSupportedException", "description": "Throws CloneNotSupportedException.  This guarantees that enums\n are never cloned, which is necessary to preserve their \"singleton\"\n status."}, {"method_name": "compareTo", "method_sig": "public final int compareTo (E o)", "description": "Compares this enum with the specified object for order.  Returns a\n negative integer, zero, or a positive integer as this object is less\n than, equal to, or greater than the specified object.\n\n Enum constants are only comparable to other enum constants of the\n same enum type.  The natural order implemented by this\n method is the order in which the constants are declared."}, {"method_name": "getDeclaringClass", "method_sig": "public final Class<E> getDeclaringClass()", "description": "Returns the Class object corresponding to this enum constant's\n enum type.  Two enum constants e1 and  e2 are of the\n same enum type if and only if\n   e1.getDeclaringClass() == e2.getDeclaringClass().\n (The value returned by this method may differ from the one returned\n by the Object.getClass() method for enum constants with\n constant-specific class bodies.)"}, {"method_name": "valueOf", "method_sig": "public static <T extends Enum<T>> T valueOf (Class<T> enumType,\n                                            String name)", "description": "Returns the enum constant of the specified enum type with the\n specified name.  The name must match exactly an identifier used\n to declare an enum constant in this type.  (Extraneous whitespace\n characters are not permitted.)\n\n Note that for a particular enum type T, the\n implicitly declared public static T valueOf(String)\n method on that enum may be used instead of this method to map\n from a name to the corresponding enum constant.  All the\n constants of an enum type can be obtained by calling the\n implicit public static T[] values() method of that\n type."}, {"method_name": "finalize", "method_sig": "protected final void finalize()", "description": "enum classes cannot have finalize methods."}]}