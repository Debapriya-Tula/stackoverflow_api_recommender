{"name": "Interface ObjectInput", "module": "java.base", "package": "java.io", "text": "ObjectInput extends the DataInput interface to include the reading of\n objects. DataInput includes methods for the input of primitive types,\n ObjectInput extends that interface to include objects, arrays, and Strings.", "codes": ["public interface ObjectInput\nextends DataInput, AutoCloseable"], "fields": [], "methods": [{"method_name": "readObject", "method_sig": "Object readObject()\n           throws ClassNotFoundException,\n                  IOException", "description": "Read and return an object. The class that implements this interface\n defines where the object is \"read\" from."}, {"method_name": "read", "method_sig": "int read()\n  throws IOException", "description": "Reads a byte of data. This method will block if no input is\n available."}, {"method_name": "read", "method_sig": "int read (byte[] b)\n  throws IOException", "description": "Reads into an array of bytes.  This method will\n block until some input is available."}, {"method_name": "read", "method_sig": "int read (byte[] b,\n         int off,\n         int len)\n  throws IOException", "description": "Reads into an array of bytes.  This method will\n block until some input is available."}, {"method_name": "skip", "method_sig": "long skip (long n)\n   throws IOException", "description": "Skips n bytes of input."}, {"method_name": "available", "method_sig": "int available()\n       throws IOException", "description": "Returns the number of bytes that can be read\n without blocking."}, {"method_name": "close", "method_sig": "void close()\n    throws IOException", "description": "Closes the input stream. Must be called\n to release any resources associated with\n the stream."}]}