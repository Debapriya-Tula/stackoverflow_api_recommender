{"name": "Class JDIPermission", "module": "jdk.jdi", "package": "com.sun.jdi", "text": "The JDIPermission class represents access rights to\n the VirtualMachineManager.  This is the permission\n which the SecurityManager will check when code that is running with\n a SecurityManager requests access to the VirtualMachineManager, as\n defined in the Java Debug Interface (JDI) for the Java platform.\n \n A JDIPermission object contains a name (also referred\n to as a \"target name\") but no actions list; you either have the\n named permission or you don't.\n \n The following table provides a summary description of what the\n permission allows, and discusses the risks of granting code the\n permission.\n\n \nTable shows permission target name, what the\n permission allows, and associated risks\n\n\nPermission Target Name\nWhat the Permission Allows\nRisks of Allowing this Permission\n\n\n\n\nvirtualMachineManager\nAbility to inspect and modify the JDI objects in the\n   VirtualMachineManager\n\nThis allows an attacker to control the\n   VirtualMachineManager and cause the system to\n   misbehave.\n   \n\n\n\n\n Programmers do not normally create JDIPermission objects directly.\n Instead they are created by the security policy code based on reading\n the security policy file.", "codes": ["public final class JDIPermission\nextends BasicPermission"], "fields": [], "methods": []}