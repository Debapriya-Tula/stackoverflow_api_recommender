{"name": "Class SimpleAttributeSet", "module": "java.desktop", "package": "javax.swing.text", "text": "A straightforward implementation of MutableAttributeSet using a\n hash table.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["public class SimpleAttributeSet\nextends Object\nimplements MutableAttributeSet, Serializable, Cloneable"], "fields": [{"field_name": "EMPTY", "field_sig": "public static final\u00a0AttributeSet EMPTY", "description": "An empty attribute set."}], "methods": [{"method_name": "isEmpty", "method_sig": "public boolean isEmpty()", "description": "Checks whether the set of attributes is empty."}, {"method_name": "getAttributeCount", "method_sig": "public int getAttributeCount()", "description": "Gets a count of the number of attributes."}, {"method_name": "isDefined", "method_sig": "public boolean isDefined (Object attrName)", "description": "Tells whether a given attribute is defined."}, {"method_name": "isEqual", "method_sig": "public boolean isEqual (AttributeSet attr)", "description": "Compares two attribute sets."}, {"method_name": "copyAttributes", "method_sig": "public AttributeSet copyAttributes()", "description": "Makes a copy of the attributes."}, {"method_name": "getAttributeNames", "method_sig": "public Enumeration<?> getAttributeNames()", "description": "Gets the names of the attributes in the set."}, {"method_name": "getAttribute", "method_sig": "public Object getAttribute (Object name)", "description": "Gets the value of an attribute."}, {"method_name": "containsAttribute", "method_sig": "public boolean containsAttribute (Object name,\n                                 Object value)", "description": "Checks whether the attribute list contains a\n specified attribute name/value pair."}, {"method_name": "containsAttributes", "method_sig": "public boolean containsAttributes (AttributeSet attributes)", "description": "Checks whether the attribute list contains all the\n specified name/value pairs."}, {"method_name": "addAttribute", "method_sig": "public void addAttribute (Object name,\n                         Object value)", "description": "Adds an attribute to the list."}, {"method_name": "addAttributes", "method_sig": "public void addAttributes (AttributeSet attributes)", "description": "Adds a set of attributes to the list."}, {"method_name": "removeAttribute", "method_sig": "public void removeAttribute (Object name)", "description": "Removes an attribute from the list."}, {"method_name": "removeAttributes", "method_sig": "public void removeAttributes (Enumeration<?> names)", "description": "Removes a set of attributes from the list."}, {"method_name": "removeAttributes", "method_sig": "public void removeAttributes (AttributeSet attributes)", "description": "Removes a set of attributes from the list."}, {"method_name": "getResolveParent", "method_sig": "public AttributeSet getResolveParent()", "description": "Gets the resolving parent.  This is the set\n of attributes to resolve through if an attribute\n isn't defined locally.  This is null if there\n are no other sets of attributes to resolve\n through."}, {"method_name": "setResolveParent", "method_sig": "public void setResolveParent (AttributeSet parent)", "description": "Sets the resolving parent."}, {"method_name": "clone", "method_sig": "public Object clone()", "description": "Clones a set of attributes."}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Returns a hashcode for this set of attributes."}, {"method_name": "equals", "method_sig": "public boolean equals (Object obj)", "description": "Compares this object to the specified object.\n The result is true if the object is an equivalent\n set of attributes."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Converts the attribute set to a String."}]}