{"name": "Class JTree.AccessibleJTree", "module": "java.desktop", "package": "javax.swing", "text": "This class implements accessibility support for the\n JTree class.  It provides an implementation of the\n Java Accessibility API appropriate to tree user-interface elements.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["protected class JTree.AccessibleJTree\nextends JComponent.AccessibleJComponent\nimplements AccessibleSelection, TreeSelectionListener, TreeModelListener, TreeExpansionListener"], "fields": [], "methods": [{"method_name": "valueChanged", "method_sig": "public void valueChanged (TreeSelectionEvent e)", "description": "Tree Selection Listener value change method. Used to fire the\n property change"}, {"method_name": "fireVisibleDataPropertyChange", "method_sig": "public void fireVisibleDataPropertyChange()", "description": "Fire a visible data property change notification.\n A 'visible' data property is one that represents\n something about the way the component appears on the\n display, where that appearance isn't bound to any other\n property. It notifies screen readers  that the visual\n appearance of the component has changed, so they can\n notify the user."}, {"method_name": "treeNodesChanged", "method_sig": "public void treeNodesChanged (TreeModelEvent e)", "description": "Tree Model Node change notification."}, {"method_name": "treeNodesInserted", "method_sig": "public void treeNodesInserted (TreeModelEvent e)", "description": "Tree Model Node change notification."}, {"method_name": "treeNodesRemoved", "method_sig": "public void treeNodesRemoved (TreeModelEvent e)", "description": "Tree Model Node change notification."}, {"method_name": "treeStructureChanged", "method_sig": "public void treeStructureChanged (TreeModelEvent e)", "description": "Tree Model structure change change notification."}, {"method_name": "treeCollapsed", "method_sig": "public void treeCollapsed (TreeExpansionEvent e)", "description": "Tree Collapsed notification."}, {"method_name": "treeExpanded", "method_sig": "public void treeExpanded (TreeExpansionEvent e)", "description": "Tree Model Expansion notification."}, {"method_name": "getAccessibleRole", "method_sig": "public AccessibleRole getAccessibleRole()", "description": "Get the role of this object."}, {"method_name": "getAccessibleAt", "method_sig": "public Accessible getAccessibleAt (Point p)", "description": "Returns the Accessible child, if one exists,\n contained at the local coordinate Point.\n Otherwise returns null."}, {"method_name": "getAccessibleChildrenCount", "method_sig": "public int getAccessibleChildrenCount()", "description": "Returns the number of top-level children nodes of this\n JTree.  Each of these nodes may in turn have children nodes."}, {"method_name": "getAccessibleChild", "method_sig": "public Accessible getAccessibleChild (int i)", "description": "Return the nth Accessible child of the object."}, {"method_name": "getAccessibleIndexInParent", "method_sig": "public int getAccessibleIndexInParent()", "description": "Get the index of this object in its accessible parent."}, {"method_name": "getAccessibleSelection", "method_sig": "public AccessibleSelection getAccessibleSelection()", "description": "Get the AccessibleSelection associated with this object.  In the\n implementation of the Java Accessibility API for this class,\n return this object, which is responsible for implementing the\n AccessibleSelection interface on behalf of itself."}, {"method_name": "getAccessibleSelectionCount", "method_sig": "public int getAccessibleSelectionCount()", "description": "Returns the number of items currently selected.\n If no items are selected, the return value will be 0."}, {"method_name": "getAccessibleSelection", "method_sig": "public Accessible getAccessibleSelection (int i)", "description": "Returns an Accessible representing the specified selected item\n in the object.  If there isn't a selection, or there are\n fewer items selected than the integer passed in, the return\n value will be null."}, {"method_name": "isAccessibleChildSelected", "method_sig": "public boolean isAccessibleChildSelected (int i)", "description": "Returns true if the current child of this object is selected."}, {"method_name": "addAccessibleSelection", "method_sig": "public void addAccessibleSelection (int i)", "description": "Adds the specified selected item in the object to the object's\n selection.  If the object supports multiple selections,\n the specified item is added to any existing selection, otherwise\n it replaces any existing selection in the object.  If the\n specified item is already selected, this method has no effect."}, {"method_name": "removeAccessibleSelection", "method_sig": "public void removeAccessibleSelection (int i)", "description": "Removes the specified selected item in the object from the object's\n selection.  If the specified item isn't currently selected, this\n method has no effect."}, {"method_name": "clearAccessibleSelection", "method_sig": "public void clearAccessibleSelection()", "description": "Clears the selection in the object, so that nothing in the\n object is selected."}, {"method_name": "selectAllAccessibleSelection", "method_sig": "public void selectAllAccessibleSelection()", "description": "Causes every selected item in the object to be selected\n if the object supports multiple selections."}]}