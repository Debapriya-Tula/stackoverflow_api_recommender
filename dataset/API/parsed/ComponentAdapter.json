{"name": "Class ComponentAdapter", "module": "java.desktop", "package": "java.awt.event", "text": "An abstract adapter class for receiving component events.\n The methods in this class are empty. This class exists as\n convenience for creating listener objects.\n \n Extend this class to create a ComponentEvent listener\n and override the methods for the events of interest. (If you implement the\n ComponentListener interface, you have to define all of\n the methods in it. This abstract class defines null methods for them\n all, so you can only have to define methods for events you care about.)\n \n Create a listener object using your class and then register it with a\n component using the component's addComponentListener\n method. When the component's size, location, or visibility\n changes, the relevant method in the listener object is invoked,\n and the ComponentEvent is passed to it.", "codes": ["public abstract class ComponentAdapter\nextends Object\nimplements ComponentListener"], "fields": [], "methods": [{"method_name": "componentResized", "method_sig": "public void componentResized (ComponentEvent e)", "description": "Invoked when the component's size changes."}, {"method_name": "componentMoved", "method_sig": "public void componentMoved (ComponentEvent e)", "description": "Invoked when the component's position changes."}, {"method_name": "componentShown", "method_sig": "public void componentShown (ComponentEvent e)", "description": "Invoked when the component has been made visible."}, {"method_name": "componentHidden", "method_sig": "public void componentHidden (ComponentEvent e)", "description": "Invoked when the component has been made invisible."}]}