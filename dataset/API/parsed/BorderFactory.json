{"name": "Class BorderFactory", "module": "java.desktop", "package": "javax.swing", "text": "Factory class for vending standard Border objects.  Wherever\n possible, this factory will hand out references to shared\n Border instances.\n For further information and examples see\n How\n to Use Borders,\n a section in The Java Tutorial.", "codes": ["public class BorderFactory\nextends Object"], "fields": [], "methods": [{"method_name": "createLineBorder", "method_sig": "public static Border createLineBorder (Color color)", "description": "Creates a line border with the specified color."}, {"method_name": "createLineBorder", "method_sig": "public static Border createLineBorder (Color color,\n                                      int thickness)", "description": "Creates a line border with the specified color\n and width. The width applies to all four sides of the\n border. To specify widths individually for the top,\n bottom, left, and right, use\n createMatteBorder(int,int,int,int,Color)."}, {"method_name": "createLineBorder", "method_sig": "public static Border createLineBorder (Color color,\n                                      int thickness,\n                                      boolean rounded)", "description": "Creates a line border with the specified color, thickness, and corner shape."}, {"method_name": "createRaisedBevelBorder", "method_sig": "public static Border createRaisedBevelBorder()", "description": "Creates a border with a raised beveled edge, using\n brighter shades of the component's current background color\n for highlighting, and darker shading for shadows.\n (In a raised border, highlights are on top and shadows\n  are underneath.)"}, {"method_name": "createLoweredBevelBorder", "method_sig": "public static Border createLoweredBevelBorder()", "description": "Creates a border with a lowered beveled edge, using\n brighter shades of the component's current background color\n for highlighting, and darker shading for shadows.\n (In a lowered border, shadows are on top and highlights\n  are underneath.)"}, {"method_name": "createBevelBorder", "method_sig": "public static Border createBevelBorder (int type)", "description": "Creates a beveled border of the specified type, using\n brighter shades of the component's current background color\n for highlighting, and darker shading for shadows.\n (In a lowered border, shadows are on top and highlights\n  are underneath.)"}, {"method_name": "createBevelBorder", "method_sig": "public static Border createBevelBorder (int type,\n                                       Color highlight,\n                                       Color shadow)", "description": "Creates a beveled border of the specified type, using\n the specified highlighting and shadowing. The outer\n edge of the highlighted area uses a brighter shade of\n the highlight color. The inner edge of the shadow area\n uses a brighter shade of the shadow color."}, {"method_name": "createBevelBorder", "method_sig": "public static Border createBevelBorder (int type,\n                                       Color highlightOuter,\n                                       Color highlightInner,\n                                       Color shadowOuter,\n                                       Color shadowInner)", "description": "Creates a beveled border of the specified type, using\n the specified colors for the inner and outer highlight\n and shadow areas."}, {"method_name": "createRaisedSoftBevelBorder", "method_sig": "public static Border createRaisedSoftBevelBorder()", "description": "Creates a beveled border with a raised edge and softened corners,\n using brighter shades of the component's current background color\n for highlighting, and darker shading for shadows.\n In a raised border, highlights are on top and shadows are underneath."}, {"method_name": "createLoweredSoftBevelBorder", "method_sig": "public static Border createLoweredSoftBevelBorder()", "description": "Creates a beveled border with a lowered edge and softened corners,\n using brighter shades of the component's current background color\n for highlighting, and darker shading for shadows.\n In a lowered border, shadows are on top and highlights are underneath."}, {"method_name": "createSoftBevelBorder", "method_sig": "public static Border createSoftBevelBorder (int type)", "description": "Creates a beveled border of the specified type with softened corners,\n using brighter shades of the component's current background color\n for highlighting, and darker shading for shadows.\n The type is either BevelBorder.RAISED or BevelBorder.LOWERED."}, {"method_name": "createSoftBevelBorder", "method_sig": "public static Border createSoftBevelBorder (int type,\n                                           Color highlight,\n                                           Color shadow)", "description": "Creates a beveled border of the specified type with softened corners,\n using the specified highlighting and shadowing.\n The type is either BevelBorder.RAISED or BevelBorder.LOWERED.\n The outer edge of the highlight area uses\n a brighter shade of the highlight color.\n The inner edge of the shadow area uses\n a brighter shade of the shadow color."}, {"method_name": "createSoftBevelBorder", "method_sig": "public static Border createSoftBevelBorder (int type,\n                                           Color highlightOuter,\n                                           Color highlightInner,\n                                           Color shadowOuter,\n                                           Color shadowInner)", "description": "Creates a beveled border of the specified type with softened corners,\n using the specified colors for the inner and outer edges\n of the highlight and the shadow areas.\n The type is either BevelBorder.RAISED or BevelBorder.LOWERED.\n Note: The shadow inner and outer colors are switched\n for a lowered bevel border."}, {"method_name": "createEtchedBorder", "method_sig": "public static Border createEtchedBorder()", "description": "Creates a border with an \"etched\" look using\n the component's current background color for\n highlighting and shading."}, {"method_name": "createEtchedBorder", "method_sig": "public static Border createEtchedBorder (Color highlight,\n                                        Color shadow)", "description": "Creates a border with an \"etched\" look using\n the specified highlighting and shading colors."}, {"method_name": "createEtchedBorder", "method_sig": "public static Border createEtchedBorder (int type)", "description": "Creates a border with an \"etched\" look using\n the component's current background color for\n highlighting and shading."}, {"method_name": "createEtchedBorder", "method_sig": "public static Border createEtchedBorder (int type,\n                                        Color highlight,\n                                        Color shadow)", "description": "Creates a border with an \"etched\" look using\n the specified highlighting and shading colors."}, {"method_name": "createTitledBorder", "method_sig": "public static TitledBorder createTitledBorder (String title)", "description": "Creates a new titled border with the specified title,\n the default border type (determined by the current look and feel),\n the default text position (determined by the current look and feel),\n the default justification (leading), and the default\n font and text color (determined by the current look and feel)."}, {"method_name": "createTitledBorder", "method_sig": "public static TitledBorder createTitledBorder (Border border)", "description": "Creates a new titled border with an empty title,\n the specified border object,\n the default text position (determined by the current look and feel),\n the default justification (leading), and the default\n font and text color (determined by the current look and feel)."}, {"method_name": "createTitledBorder", "method_sig": "public static TitledBorder createTitledBorder (Border border,\n                                              String title)", "description": "Adds a title to an existing border,\n with default positioning (determined by the current look and feel),\n default justification (leading) and the default\n font and text color (determined by the current look and feel)."}, {"method_name": "createTitledBorder", "method_sig": "public static TitledBorder createTitledBorder (Border border,\n                                              String title,\n                                              int titleJustification,\n                                              int titlePosition)", "description": "Adds a title to an existing border, with the specified\n positioning and using the default\n font and text color (determined by the current look and feel)."}, {"method_name": "createTitledBorder", "method_sig": "public static TitledBorder createTitledBorder (Border border,\n                                              String title,\n                                              int titleJustification,\n                                              int titlePosition,\n                                              Font titleFont)", "description": "Adds a title to an existing border, with the specified\n positioning and font, and using the default text color\n (determined by the current look and feel)."}, {"method_name": "createTitledBorder", "method_sig": "public static TitledBorder createTitledBorder (Border border,\n                                              String title,\n                                              int titleJustification,\n                                              int titlePosition,\n                                              Font titleFont,\n                                              Color titleColor)", "description": "Adds a title to an existing border, with the specified\n positioning, font and color."}, {"method_name": "createEmptyBorder", "method_sig": "public static Border createEmptyBorder()", "description": "Creates an empty border that takes up no space. (The width\n of the top, bottom, left, and right sides are all zero.)"}, {"method_name": "createEmptyBorder", "method_sig": "public static Border createEmptyBorder (int top,\n                                       int left,\n                                       int bottom,\n                                       int right)", "description": "Creates an empty border that takes up space but which does\n no drawing, specifying the width of the top, left, bottom, and\n right sides."}, {"method_name": "createCompoundBorder", "method_sig": "public static CompoundBorder createCompoundBorder()", "description": "Creates a compound border with a null inside edge and a\n null outside edge."}, {"method_name": "createCompoundBorder", "method_sig": "public static CompoundBorder createCompoundBorder (Border outsideBorder,\n                                                  Border insideBorder)", "description": "Creates a compound border specifying the border objects to use\n for the outside and inside edges."}, {"method_name": "createMatteBorder", "method_sig": "public static MatteBorder createMatteBorder (int top,\n                                            int left,\n                                            int bottom,\n                                            int right,\n                                            Color color)", "description": "Creates a matte-look border using a solid color. (The difference between\n this border and a line border is that you can specify the individual\n border dimensions.)"}, {"method_name": "createMatteBorder", "method_sig": "public static MatteBorder createMatteBorder (int top,\n                                            int left,\n                                            int bottom,\n                                            int right,\n                                            Icon tileIcon)", "description": "Creates a matte-look border that consists of multiple tiles of a\n specified icon. Multiple copies of the icon are placed side-by-side\n to fill up the border area.\n \n Note:\n If the icon doesn't load, the border area is painted gray."}, {"method_name": "createStrokeBorder", "method_sig": "public static Border createStrokeBorder (BasicStroke stroke)", "description": "Creates a border of the specified stroke.\n The component's foreground color will be used to render the border."}, {"method_name": "createStrokeBorder", "method_sig": "public static Border createStrokeBorder (BasicStroke stroke,\n                                        Paint paint)", "description": "Creates a border of the specified stroke and paint.\n If the specified paint is null,\n the component's foreground color will be used to render the border."}, {"method_name": "createDashedBorder", "method_sig": "public static Border createDashedBorder (Paint paint)", "description": "Creates a dashed border of the specified paint.\n If the specified paint is null,\n the component's foreground color will be used to render the border.\n The width of a dash line is equal to 1.\n The relative length of a dash line and\n the relative spacing between dash lines are equal to 1.\n A dash line is not rounded."}, {"method_name": "createDashedBorder", "method_sig": "public static Border createDashedBorder (Paint paint,\n                                        float length,\n                                        float spacing)", "description": "Creates a dashed border of the specified paint,\n relative length, and relative spacing.\n If the specified paint is null,\n the component's foreground color will be used to render the border.\n The width of a dash line is equal to 1.\n A dash line is not rounded."}, {"method_name": "createDashedBorder", "method_sig": "public static Border createDashedBorder (Paint paint,\n                                        float thickness,\n                                        float length,\n                                        float spacing,\n                                        boolean rounded)", "description": "Creates a dashed border of the specified paint, thickness,\n line shape, relative length, and relative spacing.\n If the specified paint is null,\n the component's foreground color will be used to render the border."}]}