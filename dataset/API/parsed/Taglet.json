{"name": "Interface Taglet", "module": "jdk.javadoc", "package": "jdk.javadoc.doclet", "text": "The interface for a custom taglet supported by doclets such as\n the standard doclet.\n Custom taglets are used to handle custom tags in documentation\n comments.\n\n A custom taglet must implement this interface, and must have\n a public default constructor (i.e. a public constructor with no\n parameters), by which, the doclet will instantiate and\n register the custom taglet.", "codes": ["public interface Taglet"], "fields": [], "methods": [{"method_name": "getAllowedLocations", "method_sig": "Set<Taglet.Location> getAllowedLocations()", "description": "Returns the set of locations in which a tag may be used."}, {"method_name": "isInlineTag", "method_sig": "boolean isInlineTag()", "description": "Indicates whether this taglet is for inline tags or not."}, {"method_name": "getName", "method_sig": "String getName()", "description": "Returns the name of the tag."}, {"method_name": "init", "method_sig": "default void init (DocletEnvironment env,\n                  Doclet doclet)", "description": "Initializes this taglet with the given doclet environment and doclet."}, {"method_name": "toString", "method_sig": "String toString (List<? extends DocTree> tags,\n                Element element)", "description": "Returns the string representation of a series of instances of\n this tag to be included in the generated output.\n If this taglet is for an inline tag it will\n be called once per instance of the tag, each time with a singleton list.\n Otherwise, if this tag is a block tag, it will be called once per\n comment, with a list of all the instances of the tag in a comment."}]}