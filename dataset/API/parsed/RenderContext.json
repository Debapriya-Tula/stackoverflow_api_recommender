{"name": "Class RenderContext", "module": "java.desktop", "package": "java.awt.image.renderable", "text": "A RenderContext encapsulates the information needed to produce a\n specific rendering from a RenderableImage.  It contains the area to\n be rendered specified in rendering-independent terms, the\n resolution at which the rendering is to be performed, and hints\n used to control the rendering process.\n\n  Users create RenderContexts and pass them to the\n RenderableImage via the createRendering method.  Most of the methods of\n RenderContexts are not meant to be used directly by applications,\n but by the RenderableImage and operator classes to which it is\n passed.\n\n  The AffineTransform parameter passed into and out of this class\n are cloned.  The RenderingHints and Shape parameters are not\n necessarily cloneable and are therefore only reference copied.\n Altering RenderingHints or Shape instances that are in use by\n instances of RenderContext may have undesired side effects.", "codes": ["public class RenderContext\nextends Object\nimplements Cloneable"], "fields": [], "methods": [{"method_name": "getRenderingHints", "method_sig": "public RenderingHints getRenderingHints()", "description": "Gets the rendering hints of this RenderContext."}, {"method_name": "setRenderingHints", "method_sig": "public void setRenderingHints (RenderingHints hints)", "description": "Sets the rendering hints of this RenderContext."}, {"method_name": "setTransform", "method_sig": "public void setTransform (AffineTransform newTransform)", "description": "Sets the current user-to-device AffineTransform contained\n in the RenderContext to a given transform."}, {"method_name": "preConcatenateTransform", "method_sig": "public void preConcatenateTransform (AffineTransform modTransform)", "description": "Modifies the current user-to-device transform by prepending another\n transform.  In matrix notation the operation is:\n \n [this] = [modTransform] x [this]\n "}, {"method_name": "preConcetenateTransform", "method_sig": "@Deprecated\npublic void preConcetenateTransform (AffineTransform modTransform)", "description": "Modifies the current user-to-device transform by prepending another\n transform.  In matrix notation the operation is:\n \n [this] = [modTransform] x [this]\n \n This method does the same thing as the preConcatenateTransform\n method.  It is here for backward compatibility with previous releases\n which misspelled the method name."}, {"method_name": "concatenateTransform", "method_sig": "public void concatenateTransform (AffineTransform modTransform)", "description": "Modifies the current user-to-device transform by appending another\n transform.  In matrix notation the operation is:\n \n [this] = [this] x [modTransform]\n "}, {"method_name": "concetenateTransform", "method_sig": "@Deprecated\npublic void concetenateTransform (AffineTransform modTransform)", "description": "Modifies the current user-to-device transform by appending another\n transform.  In matrix notation the operation is:\n \n [this] = [this] x [modTransform]\n \n This method does the same thing as the concatenateTransform\n method.  It is here for backward compatibility with previous releases\n which misspelled the method name."}, {"method_name": "getTransform", "method_sig": "public AffineTransform getTransform()", "description": "Gets the current user-to-device AffineTransform."}, {"method_name": "setAreaOfInterest", "method_sig": "public void setAreaOfInterest (Shape newAoi)", "description": "Sets the current area of interest.  The old area is discarded."}, {"method_name": "getAreaOfInterest", "method_sig": "public Shape getAreaOfInterest()", "description": "Gets the ares of interest currently contained in the\n RenderContext."}, {"method_name": "clone", "method_sig": "public Object clone()", "description": "Makes a copy of a RenderContext. The area of interest is copied\n by reference.  The usr2dev AffineTransform and hints are cloned,\n while the area of interest is copied by reference."}]}