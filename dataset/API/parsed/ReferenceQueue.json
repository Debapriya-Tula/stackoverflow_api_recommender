{"name": "Class ReferenceQueue<T>", "module": "java.base", "package": "java.lang.ref", "text": "Reference queues, to which registered reference objects are appended by the\n garbage collector after the appropriate reachability changes are detected.", "codes": ["public class ReferenceQueue<T>\nextends Object"], "fields": [], "methods": [{"method_name": "poll", "method_sig": "public Reference<? extends T> poll()", "description": "Polls this queue to see if a reference object is available.  If one is\n available without further delay then it is removed from the queue and\n returned.  Otherwise this method immediately returns null."}, {"method_name": "remove", "method_sig": "public Reference<? extends T> remove (long timeout)\n                              throws IllegalArgumentException,\n                                     InterruptedException", "description": "Removes the next reference object in this queue, blocking until either\n one becomes available or the given timeout period expires.\n\n  This method does not offer real-time guarantees: It schedules the\n timeout as if by invoking the Object.wait(long) method."}, {"method_name": "remove", "method_sig": "public Reference<? extends T> remove()\n                              throws InterruptedException", "description": "Removes the next reference object in this queue, blocking until one\n becomes available."}]}