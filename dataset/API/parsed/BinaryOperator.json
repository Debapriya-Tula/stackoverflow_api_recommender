{"name": "Interface BinaryOperator<T>", "module": "java.base", "package": "java.util.function", "text": "Represents an operation upon two operands of the same type, producing a result\n of the same type as the operands.  This is a specialization of\n BiFunction for the case where the operands and the result are all of\n the same type.\n\n This is a functional interface\n whose functional method is BiFunction.apply(Object, Object).", "codes": ["@FunctionalInterface\npublic interface BinaryOperator<T>\nextends BiFunction<T, T, T>"], "fields": [], "methods": [{"method_name": "minBy", "method_sig": "static <T> BinaryOperator<T> minBy (Comparator<? super T> comparator)", "description": "Returns a BinaryOperator which returns the lesser of two elements\n according to the specified Comparator."}, {"method_name": "maxBy", "method_sig": "static <T> BinaryOperator<T> maxBy (Comparator<? super T> comparator)", "description": "Returns a BinaryOperator which returns the greater of two elements\n according to the specified Comparator."}]}