{"name": "Class TIFFTag", "module": "java.desktop", "package": "javax.imageio.plugins.tiff", "text": "A class defining the notion of a TIFF tag.  A TIFF tag is a key\n that may appear in an Image File Directory (IFD).  In the IFD\n each tag has some data associated with it, which may consist of zero\n or more values of a given data type. The combination of a tag and a\n value is known as an IFD Entry or TIFF Field.\n\n  The actual tag values used in the root IFD of a standard (\"baseline\")\n tiff stream are defined in the BaselineTIFFTagSet class.", "codes": ["public class TIFFTag\nextends Object"], "fields": [{"field_name": "TIFF_BYTE", "field_sig": "public static final\u00a0int TIFF_BYTE", "description": "Flag for 8 bit unsigned integers."}, {"field_name": "TIFF_ASCII", "field_sig": "public static final\u00a0int TIFF_ASCII", "description": "Flag for null-terminated ASCII strings."}, {"field_name": "TIFF_SHORT", "field_sig": "public static final\u00a0int TIFF_SHORT", "description": "Flag for 16 bit unsigned integers."}, {"field_name": "TIFF_LONG", "field_sig": "public static final\u00a0int TIFF_LONG", "description": "Flag for 32 bit unsigned integers."}, {"field_name": "TIFF_RATIONAL", "field_sig": "public static final\u00a0int TIFF_RATIONAL", "description": "Flag for pairs of 32 bit unsigned integers."}, {"field_name": "TIFF_SBYTE", "field_sig": "public static final\u00a0int TIFF_SBYTE", "description": "Flag for 8 bit signed integers."}, {"field_name": "TIFF_UNDEFINED", "field_sig": "public static final\u00a0int TIFF_UNDEFINED", "description": "Flag for 8 bit uninterpreted bytes."}, {"field_name": "TIFF_SSHORT", "field_sig": "public static final\u00a0int TIFF_SSHORT", "description": "Flag for 16 bit signed integers."}, {"field_name": "TIFF_SLONG", "field_sig": "public static final\u00a0int TIFF_SLONG", "description": "Flag for 32 bit signed integers."}, {"field_name": "TIFF_SRATIONAL", "field_sig": "public static final\u00a0int TIFF_SRATIONAL", "description": "Flag for pairs of 32 bit signed integers."}, {"field_name": "TIFF_FLOAT", "field_sig": "public static final\u00a0int TIFF_FLOAT", "description": "Flag for 32 bit IEEE floats."}, {"field_name": "TIFF_DOUBLE", "field_sig": "public static final\u00a0int TIFF_DOUBLE", "description": "Flag for 64 bit IEEE doubles."}, {"field_name": "TIFF_IFD_POINTER", "field_sig": "public static final\u00a0int TIFF_IFD_POINTER", "description": "Flag for IFD pointer defined in TIFF Tech Note 1 in\n TIFF Specification Supplement 1."}, {"field_name": "MIN_DATATYPE", "field_sig": "public static final\u00a0int MIN_DATATYPE", "description": "The numerically smallest constant representing a TIFF data type."}, {"field_name": "MAX_DATATYPE", "field_sig": "public static final\u00a0int MAX_DATATYPE", "description": "The numerically largest constant representing a TIFF data type."}, {"field_name": "UNKNOWN_TAG_NAME", "field_sig": "public static final\u00a0String UNKNOWN_TAG_NAME", "description": "The name assigned to a tag with an unknown tag number. Such\n a tag may be created for example when reading an IFD and a\n tag number is encountered which is not in any of the\n TIFFTagSets known to the reader."}], "methods": [{"method_name": "getSizeOfType", "method_sig": "public static int getSizeOfType (int dataType)", "description": "Returns the number of bytes used to store a value of the given\n data type."}, {"method_name": "getName", "method_sig": "public String getName()", "description": "Returns the name of the tag, as it will appear in image metadata."}, {"method_name": "getNumber", "method_sig": "public int getNumber()", "description": "Returns the integer used to represent the tag."}, {"method_name": "getDataTypes", "method_sig": "public int getDataTypes()", "description": "Returns a bit mask indicating the set of data types that may\n be used to store the data associated with the tag.\n For example, a tag that can store both SHORT and LONG values\n would return a value of:\n\n \n (1 << TIFFTag.TIFF_SHORT) | (1 << TIFFTag.TIFF_LONG)\n "}, {"method_name": "getCount", "method_sig": "public int getCount()", "description": "Returns the value count of this tag. If this value is positive, it\n represents the required number of values for a TIFFField\n which has this tag. If the value is negative, the count is undefined.\n In the latter case the count may be derived, e.g., the number of values\n of the BitsPerSample field is SamplesPerPixel,\n or it may be variable as in the case of most US-ASCII\n fields."}, {"method_name": "isDataTypeOK", "method_sig": "public boolean isDataTypeOK (int dataType)", "description": "Returns true if the given data type\n may be used for the data associated with this tag."}, {"method_name": "getTagSet", "method_sig": "public TIFFTagSet getTagSet()", "description": "Returns the TIFFTagSet of which this tag is a part."}, {"method_name": "isIFDPointer", "method_sig": "public boolean isIFDPointer()", "description": "Returns true if this tag is used to point to an IFD\n structure containing additional tags. A TIFFTag represents\n an IFD pointer if and only if its TIFFTagSet is\n non-null or the data type TIFF_IFD_POINTER is\n legal. This condition will be satisfied if and only if either\n getTagSet() != null or\n isDataTypeOK(TIFF_IFD_POINTER) == true.\n\n Many TIFF extensions use the IFD mechanism in order to limit the\n number of new tags that may appear in the root IFD."}, {"method_name": "hasValueNames", "method_sig": "public boolean hasValueNames()", "description": "Returns true if there are mnemonic names associated with\n the set of legal values for the data associated with this tag.  Mnemonic\n names apply only to tags which have integral data type."}, {"method_name": "addValueName", "method_sig": "protected void addValueName (int value,\n                            String name)", "description": "Adds a mnemonic name for a particular value that this tag's data may take\n on.  Mnemonic names apply only to tags which have integral data type."}, {"method_name": "getValueName", "method_sig": "public String getValueName (int value)", "description": "Returns the mnemonic name associated with a particular value\n that this tag's data may take on, or null if\n no name is present.  Mnemonic names apply only to tags which have\n integral data type."}, {"method_name": "getNamedValues", "method_sig": "public int[] getNamedValues()", "description": "Returns an array of values for which mnemonic names are defined.  The\n method getValueName() will return\n non-null only for values contained in the returned array.\n Mnemonic names apply only to tags which have integral data type."}]}