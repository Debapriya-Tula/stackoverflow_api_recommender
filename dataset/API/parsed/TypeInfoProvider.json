{"name": "Class TypeInfoProvider", "module": "java.xml", "package": "javax.xml.validation", "text": "This class provides access to the type information determined\n by ValidatorHandler.\n\n \n Some schema languages, such as W3C XML Schema, encourages a validator\n to report the \"type\" it assigns to each attribute/element.\n Those applications who wish to access this type information can invoke\n methods defined on this \"interface\" to access such type information.\n\n \n Implementation of this \"interface\" can be obtained through the\n ValidatorHandler.getTypeInfoProvider() method.", "codes": ["public abstract class TypeInfoProvider\nextends Object"], "fields": [], "methods": [{"method_name": "getElementTypeInfo", "method_sig": "public abstract TypeInfo getElementTypeInfo()", "description": "Returns the immutable TypeInfo object for the current\n element.\nThe method may only be called by the startElement event\n or the endElement event\n of the ContentHandler that the application sets to\n the ValidatorHandler.\nWhen W3C XML Schema validation is being performed, in the\n case where an element has a union type, the TypeInfo\n returned by a call to getElementTypeInfo() from the\n startElement\n event will be the union type. The TypeInfo\n returned by a call\n from the endElement event will be the actual member type used\n to validate the element."}, {"method_name": "getAttributeTypeInfo", "method_sig": "public abstract TypeInfo getAttributeTypeInfo (int index)", "description": "Returns the immutable TypeInfo object for the specified\n attribute of the current element.\n\n \n The method may only be called by the startElement event of\n the ContentHandler that the application sets to the\n ValidatorHandler."}, {"method_name": "isIdAttribute", "method_sig": "public abstract boolean isIdAttribute (int index)", "description": "Returns true if the specified attribute is determined\n to be ID.\n\n \n Exacly how an attribute is \"determined to be ID\" is up to the\n schema language. In case of W3C XML Schema, this means\n that the actual type of the attribute is the built-in ID type\n or its derived type.\n\n \n A DocumentBuilder uses this information\n to properly implement Attr.isId().\n\n \n The method may only be called by the startElement event of\n the ContentHandler that the application sets to the\n ValidatorHandler."}, {"method_name": "isSpecified", "method_sig": "public abstract boolean isSpecified (int index)", "description": "Returns false if the attribute was added by the validator.\n\n \n This method provides information necessary for\n a DocumentBuilder to determine what\n the DOM tree should return from the Attr.getSpecified() method.\n\n \n The method may only be called by the startElement event of\n the ContentHandler that the application sets to the\n ValidatorHandler.\n\n \n A general guideline for validators is to return true if\n the attribute was originally present in the pipeline, and\n false if it was added by the validator."}]}