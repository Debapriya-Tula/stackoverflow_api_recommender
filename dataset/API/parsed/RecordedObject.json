{"name": "Class RecordedObject", "module": "jdk.jfr", "package": "jdk.jfr.consumer", "text": "A complex data type that consists of one or more fields.\n \n This class provides methods to select and query nested objects by passing a\n dot \".\" delimited String object (for instance,\n \"aaa.bbb\"). A method evaluates a nested object from left to right,\n and if a part is null, it throws NullPointerException.", "codes": ["public class RecordedObject\nextends Object"], "fields": [], "methods": [{"method_name": "hasField", "method_sig": "public boolean hasField (String name)", "description": "Returns true if a field with the given name exists, false\n otherwise."}, {"method_name": "getValue", "method_sig": "public final <T> T getValue (String name)", "description": "Returns the value of the field with the given name.\n \n The return type may be a primitive type or a subclass of\n RecordedObject.\n \n It's possible to index into a nested object by using \".\" (for\n instance \"thread.group.parent.name\").\n \n A field might change or be removed in a future JDK release. A best practice\n for callers of this method is to validate the field before attempting access.\n \n Example\n\n \n \n if (event.hasField(\"intValue\")) {\n   int intValue = event.getValue(\"intValue\");\n   System.out.println(\"Int value: \" + intValue);\n }\n\n if (event.hasField(\"objectClass\")) {\n   RecordedClass clazz = event.getValue(\"objectClass\");\n   System.out.println(\"Class name: \" + clazz.getName());\n }\n\n if (event.hasField(\"sampledThread\")) {\n   RecordedThread sampledThread = event.getValue(\"sampledThread\");\n   System.out.println(\"Sampled thread: \" + sampledThread.getName());\n }\n \n "}, {"method_name": "getFields", "method_sig": "public List<ValueDescriptor> getFields()", "description": "Returns an immutable list of the fields for this object."}, {"method_name": "getBoolean", "method_sig": "public final boolean getBoolean (String name)", "description": "Returns the value of a field of type boolean.\n \n It's possible to index into a nested object using \".\" (for example,\n \"aaa.bbb\").\n \n A field might change or be removed in a future JDK release. A best practice\n for callers of this method is to validate the field before attempting access."}, {"method_name": "getByte", "method_sig": "public final byte getByte (String name)", "description": "Returns the value of a field of type byte.\n \n It's possible to index into a nested object using \".\" (for example,\n \"foo.bar\").\n \n A field might change or be removed in a future JDK release. A best practice\n for callers of this method is to validate the field before attempting access."}, {"method_name": "getChar", "method_sig": "public final char getChar (String name)", "description": "Returns the value of a field of type char.\n \n It's possible to index into a nested object using \".\" (for example,\n \"aaa.bbb\").\n \n A field might change or be removed in a future JDK release. A best practice\n for callers of this method is to validate the field before attempting access."}, {"method_name": "getShort", "method_sig": "public final short getShort (String name)", "description": "Returns the value of a field of type short or of another primitive\n type convertible to type short by a widening conversion.\n \n This method can be used on the following types: short and byte.\n \n If the field has the @Unsigned annotation and is of a narrower type\n than short, then the value is returned as an unsigned.\n \n It's possible to index into a nested object using \".\" (for example,\n \"aaa.bbb\").\n \n A field might change or be removed in a future JDK release. A best practice\n for callers of this method is to validate the field before attempting access."}, {"method_name": "getInt", "method_sig": "public final int getInt (String name)", "description": "Returns the value of a field of type int or of another primitive type\n that is convertible to type int by a widening conversion.\n \n This method can be used on fields of the following types: int,\n short, char, and byte.\n \n If the field has the @Unsigned annotation and is of a narrower type\n than int, then the value will be returned as an unsigned.\n \n It's possible to index into a nested object using \".\" (for example,\n \"aaa.bbb\").\n \n A field might change or be removed in a future JDK release. A best practice\n for callers of this method is to validate the field before attempting access."}, {"method_name": "getFloat", "method_sig": "public final float getFloat (String name)", "description": "Returns the value of a field of type float or of another primitive\n type convertible to type float by a widening conversion.\n \n This method can be used on fields of the following types: float,\n long, int, short, char, and byte.\n \n It's possible to index into a nested object using \".\" (for example,\n \"aaa.bbb\").\n \n A field might change or be removed in a future JDK release. A best practice\n for callers of this method is to validate the field before attempting access."}, {"method_name": "getLong", "method_sig": "public final long getLong (String name)", "description": "Returns the value of a field of type long or of another primitive\n type that is convertible to type long by a widening conversion.\n \n This method can be used on fields of the following types: long,\n int, short, char, and byte.\n \n If the field has the @Unsigned annotation and is of a narrower type\n than long, then the value will be returned as an unsigned.\n \n It's possible to index into a nested object using \".\" (for example,\n \"aaa.bbb\").\n \n A field might change or be removed in a future JDK release. A best practice\n for callers of this method is to validate the field before attempting access."}, {"method_name": "getDouble", "method_sig": "public final double getDouble (String name)", "description": "Returns the value of a field of type double or of another primitive\n type that is convertible to type double by a widening conversion.\n \n This method can be used on fields of the following types: double, float,\n long, int, short, char, and byte.\n \n It's possible to index into a nested object using \".\" (for example,\n \"aaa.bbb\").\n \n A field might change or be removed in a future JDK release. A best practice\n for callers of this method is to validate the field before attempting access."}, {"method_name": "getString", "method_sig": "public final String getString (String name)", "description": "Returns the value of a field of type String.\n \n It's possible to index into a nested object using \".\" (for example,\n \"foo.bar\").\n \n A field might change or be removed in a future JDK release. A best practice\n for callers of this method is to validate the field before attempting access."}, {"method_name": "getDuration", "method_sig": "public final Duration getDuration (String name)", "description": "Returns the value of a timespan field.\n \n This method can be used on fields annotated with @Timespan, and of\n the following types: long, int, short, char,\n and byte.\n \n It's possible to index into a nested object using \".\" (for example,\n \"aaa.bbb\").\n \n A field might change or be removed in a future JDK release. A best practice\n for callers of this method is to validate the field before attempting access."}, {"method_name": "getInstant", "method_sig": "public final Instant getInstant (String name)", "description": "Returns the value of a timestamp field.\n \n This method can be used on fields annotated with @Timestamp, and of\n the following types: long, int, short, char\n and byte.\n \n It's possible to index into a nested object using \".\" (for example,\n \"aaa.bbb\").\n \n A field might change or be removed in a future JDK release. A best practice\n for callers of this method is to validate the field before attempting access."}, {"method_name": "getClass", "method_sig": "public final RecordedClass getClass (String name)", "description": "Returns the value of a field of type Class.\n \n It's possible to index into a nested object using \".\" (for example,\n \"aaa.bbb\").\n \n A field might change or be removed in a future JDK release. A best practice\n for callers of this method is to validate the field before attempting access."}, {"method_name": "getThread", "method_sig": "public final RecordedThread getThread (String name)", "description": "Returns the value of a field of type Thread.\n \n It's possible to index into a nested object using \".\" (for example,\n \"foo.bar\").\n \n A field might change or be removed in a future JDK release. A best practice\n for callers of this method is to validate the field before attempting access."}, {"method_name": "toString", "method_sig": "public final String toString()", "description": "Returns a textual representation of this object."}]}