{"name": "Class DataLine.Info", "module": "java.desktop", "package": "javax.sound.sampled", "text": "Besides the class information inherited from its superclass,\n DataLine.Info provides additional information specific to data\n lines. This information includes:\n \nthe audio formats supported by the data line\n   the minimum and maximum sizes of its internal buffer\n \n Because a Line.Info knows the class of the line its describes, a\n DataLine.Info object can describe DataLine subinterfaces\n such as SourceDataLine, TargetDataLine, and Clip.\n You can query a mixer for lines of any of these types, passing an\n appropriate instance of DataLine.Info as the argument to a method\n such as Mixer.getLine(Line.Info).", "codes": ["public static class DataLine.Info\nextends Line.Info"], "fields": [], "methods": [{"method_name": "getFormats", "method_sig": "public AudioFormat[] getFormats()", "description": "Obtains a set of audio formats supported by the data line. Note that\n isFormatSupported(AudioFormat) might return true for\n certain additional formats that are missing from the set returned by\n getFormats(). The reverse is not the case:\n isFormatSupported(AudioFormat) is guaranteed to return\n true for all formats returned by getFormats().\n \n Some fields in the AudioFormat instances can be set to\n NOT_SPECIFIED if that field does\n not apply to the format, or if the format supports a wide range of\n values for that field. For example, a multi-channel device supporting\n up to 64 channels, could set the channel field in the\n AudioFormat instances returned by this method to\n NOT_SPECIFIED."}, {"method_name": "isFormatSupported", "method_sig": "public boolean isFormatSupported (AudioFormat format)", "description": "Indicates whether this data line supports a particular audio format.\n The default implementation of this method simply returns true\n if the specified format matches any of the supported formats."}, {"method_name": "getMinBufferSize", "method_sig": "public int getMinBufferSize()", "description": "Obtains the minimum buffer size supported by the data line."}, {"method_name": "getMaxBufferSize", "method_sig": "public int getMaxBufferSize()", "description": "Obtains the maximum buffer size supported by the data line."}, {"method_name": "matches", "method_sig": "public boolean matches (Line.Info info)", "description": "Determines whether the specified info object matches this one. To\n match, the superclass match requirements must be met. In addition,\n this object's minimum buffer size must be at least as large as that\n of the object specified, its maximum buffer size must be at most as\n large as that of the object specified, and all of its formats must\n match formats supported by the object specified."}, {"method_name": "toString", "method_sig": "public String toString()", "description": "Obtains a textual description of the data line info."}]}