{"name": "Interface ComponentListener", "module": "java.desktop", "package": "java.awt.event", "text": "The listener interface for receiving component events.\n The class that is interested in processing a component event\n either implements this interface (and all the methods it\n contains) or extends the abstract ComponentAdapter class\n (overriding only the methods of interest).\n The listener object created from that class is then registered with a\n component using the component's addComponentListener\n method. When the component's size, location, or visibility\n changes, the relevant method in the listener object is invoked,\n and the ComponentEvent is passed to it.\n \n Component events are provided for notification purposes ONLY;\n The AWT will automatically handle component moves and resizes\n internally so that GUI layout works properly regardless of\n whether a program registers a ComponentListener or not.", "codes": ["public interface ComponentListener\nextends EventListener"], "fields": [], "methods": [{"method_name": "componentResized", "method_sig": "void componentResized (ComponentEvent e)", "description": "Invoked when the component's size changes."}, {"method_name": "componentMoved", "method_sig": "void componentMoved (ComponentEvent e)", "description": "Invoked when the component's position changes."}, {"method_name": "componentShown", "method_sig": "void componentShown (ComponentEvent e)", "description": "Invoked when the component has been made visible."}, {"method_name": "componentHidden", "method_sig": "void componentHidden (ComponentEvent e)", "description": "Invoked when the component has been made invisible."}]}