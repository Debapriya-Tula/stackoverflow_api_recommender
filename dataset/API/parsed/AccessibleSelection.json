{"name": "Interface AccessibleSelection", "module": "java.desktop", "package": "javax.accessibility", "text": "This AccessibleSelection interface provides the standard mechanism\n for an assistive technology to determine what the current selected children\n are, as well as modify the selection set. Any object that has children that\n can be selected should support the AccessibleSelection interface.\n Applications can determine if an object supports the\n AccessibleSelection interface by first obtaining its\n AccessibleContext (see Accessible) and then calling the\n AccessibleContext.getAccessibleSelection() method. If the return value\n is not null, the object supports this interface.", "codes": ["public interface AccessibleSelection"], "fields": [], "methods": [{"method_name": "getAccessibleSelectionCount", "method_sig": "int getAccessibleSelectionCount()", "description": "Returns the number of Accessible children currently selected. If\n no children are selected, the return value will be 0."}, {"method_name": "getAccessibleSelection", "method_sig": "Accessible getAccessibleSelection (int i)", "description": "Returns an Accessible representing the specified selected child\n of the object. If there isn't a selection, or there are fewer children\n selected than the integer passed in, the return value will be\n null.\n \n Note that the index represents the i-th selected child, which is\n different from the i-th child."}, {"method_name": "isAccessibleChildSelected", "method_sig": "boolean isAccessibleChildSelected (int i)", "description": "Determines if the current child of this object is selected."}, {"method_name": "addAccessibleSelection", "method_sig": "void addAccessibleSelection (int i)", "description": "Adds the specified Accessible child of the object to the object's\n selection. If the object supports multiple selections, the specified\n child is added to any existing selection, otherwise it replaces any\n existing selection in the object. If the specified child is already\n selected, this method has no effect."}, {"method_name": "removeAccessibleSelection", "method_sig": "void removeAccessibleSelection (int i)", "description": "Removes the specified child of the object from the object's selection. If\n the specified item isn't currently selected, this method has no effect."}, {"method_name": "clearAccessibleSelection", "method_sig": "void clearAccessibleSelection()", "description": "Clears the selection in the object, so that no children in the object are\n selected."}, {"method_name": "selectAllAccessibleSelection", "method_sig": "void selectAllAccessibleSelection()", "description": "Causes every child of the object to be selected if the object supports\n multiple selections."}]}