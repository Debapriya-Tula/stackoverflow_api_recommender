{"name": "Class SecretKeyFactorySpi", "module": "java.base", "package": "javax.crypto", "text": "This class defines the Service Provider Interface (SPI)\n for the SecretKeyFactory class.\n All the abstract methods in this class must be implemented by each\n cryptographic service provider who wishes to supply the implementation\n of a secret-key factory for a particular algorithm.\n\n  A provider should document all the key specifications supported by its\n secret key factory.\n For example, the DES secret-key factory supplied by the \"SunJCE\" provider\n supports DESKeySpec as a transparent representation of DES\n keys, and that provider's secret-key factory for Triple DES keys supports\n DESedeKeySpec as a transparent representation of Triple DES\n keys.", "codes": ["public abstract class SecretKeyFactorySpi\nextends Object"], "fields": [], "methods": [{"method_name": "engineGenerateSecret", "method_sig": "protected abstract SecretKey engineGenerateSecret (KeySpec keySpec)\n                                           throws InvalidKeySpecException", "description": "Generates a SecretKey object from the\n provided key specification (key material)."}, {"method_name": "engineGetKeySpec", "method_sig": "protected abstract KeySpec engineGetKeySpec (SecretKey key,\n                                            Class<?> keySpec)\n                                     throws InvalidKeySpecException", "description": "Returns a specification (key material) of the given key\n object in the requested format."}, {"method_name": "engineTranslateKey", "method_sig": "protected abstract SecretKey engineTranslateKey (SecretKey key)\n                                         throws InvalidKeyException", "description": "Translates a key object, whose provider may be unknown or\n potentially untrusted, into a corresponding key object of this\n secret-key factory."}]}