{"name": "Class ServerSocketFactory", "module": "java.base", "package": "javax.net", "text": "This class creates server sockets.  It may be subclassed by other\n factories, which create particular types of server sockets.  This\n provides a general framework for the addition of public socket-level\n functionality.  It is the server side analogue of a socket factory,\n and similarly provides a way to capture a variety of policies related\n to the sockets being constructed.\n\n  Like socket factories, server Socket factory instances have\n methods used to create sockets. There is also an environment\n specific default server socket factory; frameworks will often use\n their own customized factory.", "codes": ["public abstract class ServerSocketFactory\nextends Object"], "fields": [], "methods": [{"method_name": "getDefault", "method_sig": "public static ServerSocketFactory getDefault()", "description": "Returns a copy of the environment's default socket factory."}, {"method_name": "createServerSocket", "method_sig": "public ServerSocket createServerSocket()\n                                throws IOException", "description": "Returns an unbound server socket.  The socket is configured with\n the socket options (such as accept timeout) given to this factory."}, {"method_name": "createServerSocket", "method_sig": "public abstract ServerSocket createServerSocket (int port)\n                                         throws IOException", "description": "Returns a server socket bound to the specified port.\n The socket is configured with the socket options\n (such as accept timeout) given to this factory.\n \n If there is a security manager, its checkListen\n method is called with the port argument as its\n argument to ensure the operation is allowed. This could result\n in a SecurityException."}, {"method_name": "createServerSocket", "method_sig": "public abstract ServerSocket createServerSocket (int port,\n                                                int backlog)\n                                         throws IOException", "description": "Returns a server socket bound to the specified port, and uses the\n specified connection backlog.  The socket is configured with\n the socket options (such as accept timeout) given to this factory.\n \n The backlog argument must be a positive\n value greater than 0. If the value passed if equal or less\n than 0, then the default value will be assumed.\n \n If there is a security manager, its checkListen\n method is called with the port argument as its\n argument to ensure the operation is allowed. This could result\n in a SecurityException."}, {"method_name": "createServerSocket", "method_sig": "public abstract ServerSocket createServerSocket (int port,\n                                                int backlog,\n                                                InetAddress ifAddress)\n                                         throws IOException", "description": "Returns a server socket bound to the specified port,\n with a specified listen backlog and local IP.\n \n The ifAddress argument can be used on a multi-homed\n host for a ServerSocket that will only accept connect\n requests to one of its addresses. If ifAddress is null,\n it will accept connections on all local addresses. The socket is\n configured with the socket options (such as accept timeout) given\n to this factory.\n \n The backlog argument must be a positive\n value greater than 0. If the value passed if equal or less\n than 0, then the default value will be assumed.\n \n If there is a security manager, its checkListen\n method is called with the port argument as its\n argument to ensure the operation is allowed. This could result\n in a SecurityException."}]}