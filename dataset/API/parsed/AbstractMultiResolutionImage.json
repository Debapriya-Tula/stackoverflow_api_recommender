{"name": "Class AbstractMultiResolutionImage", "module": "java.desktop", "package": "java.awt.image", "text": "This class provides default implementations of several Image methods\n for classes that want to implement the MultiResolutionImage\n interface.\n\n For example,\n  \n public class CustomMultiResolutionImage extends AbstractMultiResolutionImage {\n\n     final Image[] resolutionVariants;\n\n     public CustomMultiResolutionImage(Image... resolutionVariants) {\n          this.resolutionVariants = resolutionVariants;\n     }\n\n     public Image getResolutionVariant(\n             double destImageWidth, double destImageHeight) {\n         // return a resolution variant based on the given destination image size\n     }\n\n     public List<Image> getResolutionVariants() {\n         return Collections.unmodifiableList(Arrays.asList(resolutionVariants));\n     }\n\n     protected Image getBaseImage() {\n         return resolutionVariants[0];\n     }\n }\n  ", "codes": ["public abstract class AbstractMultiResolutionImage\nextends Image\nimplements MultiResolutionImage"], "fields": [], "methods": [{"method_name": "getWidth", "method_sig": "public int getWidth (ImageObserver observer)", "description": "This method simply delegates to the same method on the base image and\n it is equivalent to: getBaseImage().getWidth(observer)."}, {"method_name": "getHeight", "method_sig": "public int getHeight (ImageObserver observer)", "description": "This method simply delegates to the same method on the base image and\n it is equivalent to: getBaseImage().getHeight(observer)."}, {"method_name": "getSource", "method_sig": "public ImageProducer getSource()", "description": "This method simply delegates to the same method on the base image and\n it is equivalent to: getBaseImage().getSource()."}, {"method_name": "getGraphics", "method_sig": "public Graphics getGraphics()", "description": "As per the contract of the base Image#getGraphics() method,\n this implementation will always throw UnsupportedOperationException\n since only off-screen images can return a Graphics object."}, {"method_name": "getProperty", "method_sig": "public Object getProperty (String name,\n                          ImageObserver observer)", "description": "This method simply delegates to the same method on the base image and\n it is equivalent to: getBaseImage().getProperty(name, observer)."}, {"method_name": "getBaseImage", "method_sig": "protected abstract Image getBaseImage()", "description": "Return the base image representing the best version of the image for\n rendering at the default width and height."}]}