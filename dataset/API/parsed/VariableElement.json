{"name": "Interface VariableElement", "module": "java.compiler", "package": "javax.lang.model.element", "text": "Represents a field, enum constant, method or constructor\n parameter, local variable, resource variable, or exception\n parameter.", "codes": ["public interface VariableElement\nextends Element"], "fields": [], "methods": [{"method_name": "getConstantValue", "method_sig": "Object getConstantValue()", "description": "Returns the value of this variable if this is a final\n field initialized to a compile-time constant.  Returns \n null otherwise.  The value will be of a primitive type or a\n String.  If the value is of a primitive type, it is\n wrapped in the appropriate wrapper class (such as Integer).\n\n Note that not all final fields will have\n constant values.  In particular, enum constants are\n not considered to be compile-time constants.  To have a\n constant value, a field's type must be either a primitive type\n or String."}, {"method_name": "getSimpleName", "method_sig": "Name getSimpleName()", "description": "Returns the simple name of this variable element.\n\n For method and constructor parameters, the name of each\n parameter must be distinct from the names of all other\n parameters of the same executable.  If the original source\n names are not available, an implementation may synthesize names\n subject to the distinctness requirement above."}, {"method_name": "getEnclosingElement", "method_sig": "Element getEnclosingElement()", "description": "Returns the enclosing element of this variable.\n\n The enclosing element of a method or constructor parameter is\n the executable declaring the parameter."}]}