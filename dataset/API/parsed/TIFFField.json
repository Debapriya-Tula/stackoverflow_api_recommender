{"name": "Class TIFFField", "module": "java.desktop", "package": "javax.imageio.plugins.tiff", "text": "A class representing a field in a TIFF 6.0 Image File Directory.\n\n  A field in a TIFF Image File Directory (IFD) is defined as a\n tag number accompanied by a sequence of values of identical data type.\n TIFF 6.0 defines 12 data types; a 13th type IFD is\n defined in TIFF Tech Note 1 of TIFF Specification Supplement 1. These\n TIFF data types are referred to by Java constants and mapped internally\n onto Java language data types and type names as follows:\n\n \nTIFF Data Type to Java Data Type Mapping\n\n\nTIFF Data Type\n     Java Constant\n     Java Data Type\n     Java Type Name\n \n\n\nBYTE\nTIFFTag.TIFF_BYTE\nbyte\n\"Byte\"\n\nASCII\nTIFFTag.TIFF_ASCII\nString\n\"Ascii\"\n\nSHORT\nTIFFTag.TIFF_SHORT\nchar\n\"Short\"\n\nLONG\nTIFFTag.TIFF_LONG\nlong\n\"Long\"\n\nRATIONAL\nTIFFTag.TIFF_RATIONAL\nlong[2] {numerator, denominator}\n     \"Rational\"\n\nSBYTE\nTIFFTag.TIFF_SBYTE\nbyte\n\"SByte\"\n\nUNDEFINED\nTIFFTag.TIFF_UNDEFINED\nbyte\n\"Undefined\"\n\nSSHORT\nTIFFTag.TIFF_SSHORT\nshort\n\"SShort\"\n\nSLONG\nTIFFTag.TIFF_SLONG\nint\n\"SLong\"\n\nSRATIONAL\nTIFFTag.TIFF_SRATIONAL\nint[2] {numerator, denominator}\n     \"SRational\"\n\nFLOAT\nTIFFTag.TIFF_FLOAT\nfloat\n\"Float\"\n\nDOUBLE\nTIFFTag.TIFF_DOUBLE\ndouble\n\"Double\"\n\nIFD\nTIFFTag.TIFF_IFD_POINTER\nlong\n\"IFDPointer\"\n\n\n", "codes": ["public final class TIFFField\nextends Object\nimplements Cloneable"], "fields": [], "methods": [{"method_name": "createFromMetadataNode", "method_sig": "public static TIFFField createFromMetadataNode (TIFFTagSet tagSet,\n                                               Node node)", "description": "Creates a TIFFField from a TIFF native image\n metadata node. If the value of the \"number\" attribute\n of the node is not found in tagSet then a new\n TIFFTag with name TIFFTag.UNKNOWN_TAG_NAME\n will be created and assigned to the field."}, {"method_name": "getTag", "method_sig": "public TIFFTag getTag()", "description": "Retrieves the tag associated with this field."}, {"method_name": "getTagNumber", "method_sig": "public int getTagNumber()", "description": "Retrieves the tag number in the range [0,65535]."}, {"method_name": "getType", "method_sig": "public int getType()", "description": "Returns the type of the data stored in the field.  For a TIFF 6.0\n stream, the value will equal one of the TIFFTag.TIFF_*\n constants. For future revisions of TIFF, higher values are possible."}, {"method_name": "getTypeName", "method_sig": "public static String getTypeName (int dataType)", "description": "Returns the name of the supplied data type constant."}, {"method_name": "getTypeByName", "method_sig": "public static int getTypeByName (String typeName)", "description": "Returns the data type constant corresponding to the supplied data\n type name. If the name is unknown -1 will be returned."}, {"method_name": "createArrayForType", "method_sig": "public static Object createArrayForType (int dataType,\n                                        int count)", "description": "Creates an array appropriate for the indicated data type."}, {"method_name": "getAsNativeNode", "method_sig": "public Node getAsNativeNode()", "description": "Returns the TIFFField as a node named either\n \"TIFFField\" or \"TIFFIFD\" as described in the\n TIFF native image metadata specification. The node will be named\n \"TIFFIFD\" if and only if hasDirectory() returns\n true and the field's type is either TIFFTag.TIFF_LONG\n or TIFFTag.TIFF_IFD_POINTER."}, {"method_name": "isIntegral", "method_sig": "public boolean isIntegral()", "description": "Indicates whether the value associated with the field is of\n integral data type."}, {"method_name": "getCount", "method_sig": "public int getCount()", "description": "Returns the number of data items present in the field.  For\n TIFFTag.TIFF_ASCII fields, the value returned is the\n number of Strings, not the total length of the\n data as in the file representation."}, {"method_name": "getData", "method_sig": "public Object getData()", "description": "Returns a reference to the data object associated with the field."}, {"method_name": "getAsBytes", "method_sig": "public byte[] getAsBytes()", "description": "Returns the data as an uninterpreted array of\n bytes.  The type of the field must be one of\n TIFFTag.TIFF_BYTE, TIFF_SBYTE, or\n TIFF_UNDEFINED.\n\n  For data in TIFFTag.TIFF_BYTE format, the application\n must take care when promoting the data to longer integral types\n to avoid sign extension."}, {"method_name": "getAsChars", "method_sig": "public char[] getAsChars()", "description": "Returns TIFFTag.TIFF_SHORT data as an array of\n chars (unsigned 16-bit integers)."}, {"method_name": "getAsShorts", "method_sig": "public short[] getAsShorts()", "description": "Returns TIFFTag.TIFF_SSHORT data as an array of\n shorts (signed 16-bit integers)."}, {"method_name": "getAsInts", "method_sig": "public int[] getAsInts()", "description": "Returns TIFFTag.TIFF_SLONG data as an array of\n ints (signed 32-bit integers)."}, {"method_name": "getAsLongs", "method_sig": "public long[] getAsLongs()", "description": "Returns TIFFTag.TIFF_LONG or\n TIFF_IFD_POINTER data as an array of\n longs (signed 64-bit integers)."}, {"method_name": "getAsFloats", "method_sig": "public float[] getAsFloats()", "description": "Returns TIFFTag.TIFF_FLOAT data as an array of\n floats (32-bit floating-point values)."}, {"method_name": "getAsDoubles", "method_sig": "public double[] getAsDoubles()", "description": "Returns TIFFTag.TIFF_DOUBLE data as an array of\n doubles (64-bit floating-point values)."}, {"method_name": "getAsSRationals", "method_sig": "public int[][] getAsSRationals()", "description": "Returns TIFFTag.TIFF_SRATIONAL data as an array of\n 2-element arrays of ints."}, {"method_name": "getAsRationals", "method_sig": "public long[][] getAsRationals()", "description": "Returns TIFFTag.TIFF_RATIONAL data as an array of\n 2-element arrays of longs."}, {"method_name": "getAsInt", "method_sig": "public int getAsInt (int index)", "description": "Returns data in any format as an int.\n\n  TIFFTag.TIFF_BYTE values are treated as unsigned; that\n is, no sign extension will take place and the returned value\n will be in the range [0, 255].  TIFF_SBYTE data\n will be returned in the range [-128, 127].\n\n  A TIFF_UNDEFINED value is treated as though\n it were a TIFF_BYTE.\n\n  Data in TIFF_SLONG, TIFF_LONG,\n TIFF_FLOAT, TIFF_DOUBLE or\n TIFF_IFD_POINTER format are simply cast to\n int and may suffer from truncation.\n\n  Data in TIFF_SRATIONAL or\n TIFF_RATIONAL format are evaluated by dividing the\n numerator into the denominator using double-precision\n arithmetic and then casting to int.  Loss of\n precision and truncation may occur.\n\n  Data in TIFF_ASCII format will be parsed as by\n the Double.parseDouble method, with the result\n case to int."}, {"method_name": "getAsLong", "method_sig": "public long getAsLong (int index)", "description": "Returns data in any format as a long.\n\n  TIFFTag.TIFF_BYTE and TIFF_UNDEFINED data\n are treated as unsigned; that is, no sign extension will take\n place and the returned value will be in the range [0, 255].\n TIFF_SBYTE data will be returned in the range\n [-128, 127].\n\n  Data in TIFF_FLOAT and TIFF_DOUBLE are\n simply cast to long and may suffer from truncation.\n\n  Data in TIFF_SRATIONAL or\n TIFF_RATIONAL format are evaluated by dividing the\n numerator into the denominator using double-precision\n arithmetic and then casting to long.  Loss of\n precision and truncation may occur.\n\n  Data in TIFF_ASCII format will be parsed as by\n the Double.parseDouble method, with the result\n cast to long."}, {"method_name": "getAsFloat", "method_sig": "public float getAsFloat (int index)", "description": "Returns data in any format as a float.\n\n  TIFFTag.TIFF_BYTE and TIFF_UNDEFINED data\n are treated as unsigned; that is, no sign extension will take\n place and the returned value will be in the range [0, 255].\n TIFF_SBYTE data will be returned in the range\n [-128, 127].\n\n  Data in TIFF_SLONG, TIFF_LONG,\n TIFF_DOUBLE, or TIFF_IFD_POINTER format are\n simply cast to float and may suffer from\n truncation.\n\n  Data in TIFF_SRATIONAL or\n TIFF_RATIONAL format are evaluated by dividing the\n numerator into the denominator using double-precision\n arithmetic and then casting to float.\n\n  Data in TIFF_ASCII format will be parsed as by\n the Double.parseDouble method, with the result\n cast to float."}, {"method_name": "getAsDouble", "method_sig": "public double getAsDouble (int index)", "description": "Returns data in any format as a double.\n\n  TIFFTag.TIFF_BYTE and TIFF_UNDEFINED data\n are treated as unsigned; that is, no sign extension will take\n place and the returned value will be in the range [0, 255].\n TIFF_SBYTE data will be returned in the range\n [-128, 127].\n\n  Data in TIFF_SRATIONAL or\n TIFF_RATIONAL format are evaluated by dividing the\n numerator into the denominator using double-precision\n arithmetic.\n\n  Data in TIFF_ASCII format will be parsed as by\n the Double.parseDouble method."}, {"method_name": "getAsString", "method_sig": "public String getAsString (int index)", "description": "Returns a TIFFTag.TIFF_ASCII value as a\n String."}, {"method_name": "getAsSRational", "method_sig": "public int[] getAsSRational (int index)", "description": "Returns a TIFFTag.TIFF_SRATIONAL data item as a\n two-element array of ints."}, {"method_name": "getAsRational", "method_sig": "public long[] getAsRational (int index)", "description": "Returns a TIFFTag.TIFF_RATIONAL data item as a two-element array\n of ints."}, {"method_name": "getValueAsString", "method_sig": "public String getValueAsString (int index)", "description": "Returns a String containing a human-readable\n version of the data item.  Data of type\n TIFFTag.TIFF_RATIONAL or TIFF_SRATIONAL are\n represented as a pair of integers separated by a\n '/' character.  If the numerator of a\n TIFFTag.TIFF_RATIONAL or TIFF_SRATIONAL is an integral\n multiple of the denominator, then the value is represented as\n \"q/1\" where q is the quotient of the numerator and\n denominator."}, {"method_name": "hasDirectory", "method_sig": "public boolean hasDirectory()", "description": "Returns whether the field has a TIFFDirectory."}, {"method_name": "getDirectory", "method_sig": "public TIFFDirectory getDirectory()", "description": "Returns the associated TIFFDirectory, if available. If no\n directory is set, then null will be returned."}, {"method_name": "clone", "method_sig": "public TIFFField clone()\n                throws CloneNotSupportedException", "description": "Clones the field and all the information contained therein."}]}