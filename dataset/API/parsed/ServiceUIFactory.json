{"name": "Class ServiceUIFactory", "module": "java.desktop", "package": "javax.print", "text": "Services may optionally provide UIs which allow different styles of\n interaction in different roles. One role may be end-user browsing and setting\n of print options. Another role may be administering the print service.\n \n Although the Print Service API does not presently provide standardised\n support for administering a print service, monitoring of the print service is\n possible and a UI may provide for private update mechanisms.\n \n The basic design intent is to allow applications to lazily locate and\n initialize services only when needed without any API dependencies except in\n an environment in which they are used.\n \n Swing UIs are preferred as they provide a more consistent L&F and\n can support accessibility APIs.\n \n Example usage:\n \n  ServiceUIFactory factory = printService.getServiceUIFactory();\n  if (factory != null) {\n      JComponent swingui = (JComponent)factory.getUI(\n                                         ServiceUIFactory.MAIN_UIROLE,\n                                         ServiceUIFactory.JCOMPONENT_UI);\n      if (swingui != null) {\n          tabbedpane.add(\"Custom UI\", swingui);\n      }\n  }\n ", "codes": ["public abstract class ServiceUIFactory\nextends Object"], "fields": [{"field_name": "JCOMPONENT_UI", "field_sig": "public static final\u00a0String JCOMPONENT_UI", "description": "Denotes a UI implemented as a Swing component. The value of the string is\n the fully qualified classname : \"javax.swing.JComponent\"."}, {"field_name": "PANEL_UI", "field_sig": "public static final\u00a0String PANEL_UI", "description": "Denotes a UI implemented as an AWT panel. The value of the string is the\n fully qualified classname : \"java.awt.Panel\""}, {"field_name": "DIALOG_UI", "field_sig": "public static final\u00a0String DIALOG_UI", "description": "Denotes a UI implemented as an AWT dialog. The value of the string is the\n fully qualified classname : \"java.awt.Dialog\""}, {"field_name": "JDIALOG_UI", "field_sig": "public static final\u00a0String JDIALOG_UI", "description": "Denotes a UI implemented as a Swing dialog. The value of the string is\n the fully qualified classname : \"javax.swing.JDialog\""}, {"field_name": "ABOUT_UIROLE", "field_sig": "public static final\u00a0int ABOUT_UIROLE", "description": "Denotes a UI which performs an informative \"About\" role."}, {"field_name": "ADMIN_UIROLE", "field_sig": "public static final\u00a0int ADMIN_UIROLE", "description": "Denotes a UI which performs an administrative role."}, {"field_name": "MAIN_UIROLE", "field_sig": "public static final\u00a0int MAIN_UIROLE", "description": "Denotes a UI which performs the normal end user role."}, {"field_name": "RESERVED_UIROLE", "field_sig": "public static final\u00a0int RESERVED_UIROLE", "description": "Not a valid role but role id's greater than this may be used for private\n roles supported by a service. Knowledge of the function performed by this\n role is required to make proper use of it."}], "methods": [{"method_name": "getUI", "method_sig": "public abstract Object getUI (int role,\n                             String ui)", "description": "Get a UI object which may be cast to the requested UI type by the\n application and used in its user interface."}, {"method_name": "getUIClassNamesForRole", "method_sig": "public abstract String[] getUIClassNamesForRole (int role)", "description": "Given a UI role obtained from this factory obtain the UI types available\n from this factory which implement this role. The returned Strings\n should refer to the static variables defined in this class so that\n applications can use equality of reference (\"==\")."}]}