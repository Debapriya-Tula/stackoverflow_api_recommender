{"name": "Class AbstractAction", "module": "java.desktop", "package": "javax.swing", "text": "This class provides default implementations for the JFC Action\n interface. Standard behaviors like the get and set methods for\n Action object properties (icon, text, and enabled) are defined\n here. The developer need only subclass this abstract class and\n define the actionPerformed method.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["public abstract class AbstractAction\nextends Object\nimplements Action, Cloneable, Serializable"], "fields": [{"field_name": "enabled", "field_sig": "protected\u00a0boolean enabled", "description": "Specifies whether action is enabled; the default is true."}, {"field_name": "changeSupport", "field_sig": "protected\u00a0SwingPropertyChangeSupport changeSupport", "description": "If any PropertyChangeListeners have been registered, the\n changeSupport field describes them."}], "methods": [{"method_name": "getValue", "method_sig": "public Object getValue (String key)", "description": "Gets the Object associated with the specified key."}, {"method_name": "putValue", "method_sig": "public void putValue (String key,\n                     Object newValue)", "description": "Sets the Value associated with the specified key."}, {"method_name": "isEnabled", "method_sig": "public boolean isEnabled()", "description": "Returns true if the action is enabled."}, {"method_name": "setEnabled", "method_sig": "public void setEnabled (boolean newValue)", "description": "Sets whether the Action is enabled. The default is true."}, {"method_name": "getKeys", "method_sig": "public Object[] getKeys()", "description": "Returns an array of Objects which are keys for\n which values have been set for this AbstractAction,\n or null if no keys have values set."}, {"method_name": "firePropertyChange", "method_sig": "protected void firePropertyChange (String propertyName,\n                                  Object oldValue,\n                                  Object newValue)", "description": "Supports reporting bound property changes.  This method can be called\n when a bound property has changed and it will send the appropriate\n PropertyChangeEvent to any registered\n PropertyChangeListeners."}, {"method_name": "addPropertyChangeListener", "method_sig": "public void addPropertyChangeListener (PropertyChangeListener listener)", "description": "Adds a PropertyChangeListener to the listener list.\n The listener is registered for all properties.\n \n A PropertyChangeEvent will get fired in response to setting\n a bound property, e.g. setFont, setBackground,\n or setForeground.\n Note that if the current component is inheriting its foreground,\n background, or font from its container, then no event will be\n fired in response to a change in the inherited property."}, {"method_name": "removePropertyChangeListener", "method_sig": "public void removePropertyChangeListener (PropertyChangeListener listener)", "description": "Removes a PropertyChangeListener from the listener list.\n This removes a PropertyChangeListener that was registered\n for all properties."}, {"method_name": "getPropertyChangeListeners", "method_sig": "public PropertyChangeListener[] getPropertyChangeListeners()", "description": "Returns an array of all the PropertyChangeListeners added\n to this AbstractAction with addPropertyChangeListener()."}, {"method_name": "clone", "method_sig": "protected Object clone()\n                throws CloneNotSupportedException", "description": "Clones the abstract action. This gives the clone\n its own copy of the key/value list,\n which is not handled for you by Object.clone()."}]}