{"name": "Class MenuSelectionManager", "module": "java.desktop", "package": "javax.swing", "text": "A MenuSelectionManager owns the selection in menu hierarchy.", "codes": ["public class MenuSelectionManager\nextends Object"], "fields": [{"field_name": "changeEvent", "field_sig": "protected transient\u00a0ChangeEvent changeEvent", "description": "Only one ChangeEvent is needed per button model instance since the\n event's only state is the source property.  The source of events\n generated is always \"this\"."}, {"field_name": "listenerList", "field_sig": "protected\u00a0EventListenerList listenerList", "description": "The collection of registered listeners"}], "methods": [{"method_name": "defaultManager", "method_sig": "public static MenuSelectionManager defaultManager()", "description": "Returns the default menu selection manager."}, {"method_name": "setSelectedPath", "method_sig": "public void setSelectedPath (MenuElement[] path)", "description": "Changes the selection in the menu hierarchy.  The elements\n in the array are sorted in order from the root menu\n element to the currently selected menu element.\n \n Note that this method is public but is used by the look and\n feel engine and should not be called by client applications."}, {"method_name": "getSelectedPath", "method_sig": "public MenuElement[] getSelectedPath()", "description": "Returns the path to the currently selected menu item"}, {"method_name": "clearSelectedPath", "method_sig": "public void clearSelectedPath()", "description": "Tell the menu selection to close and unselect all the menu components. Call this method\n when a choice has been made"}, {"method_name": "addChangeListener", "method_sig": "public void addChangeListener (ChangeListener l)", "description": "Adds a ChangeListener to the button."}, {"method_name": "removeChangeListener", "method_sig": "public void removeChangeListener (ChangeListener l)", "description": "Removes a ChangeListener from the button."}, {"method_name": "getChangeListeners", "method_sig": "public ChangeListener[] getChangeListeners()", "description": "Returns an array of all the ChangeListeners added\n to this MenuSelectionManager with addChangeListener()."}, {"method_name": "fireStateChanged", "method_sig": "protected void fireStateChanged()", "description": "Notifies all listeners that have registered interest for\n notification on this event type.  The event instance\n is created lazily."}, {"method_name": "processMouseEvent", "method_sig": "public void processMouseEvent (MouseEvent event)", "description": "When a MenuElement receives an event from a MouseListener, it should never process the event\n directly. Instead all MenuElements should call this method with the event."}, {"method_name": "componentForPoint", "method_sig": "public Component componentForPoint (Component source,\n                                   Point sourcePoint)", "description": "Returns the component in the currently selected path\n which contains sourcePoint."}, {"method_name": "processKeyEvent", "method_sig": "public void processKeyEvent (KeyEvent e)", "description": "When a MenuElement receives an event from a KeyListener, it should never process the event\n directly. Instead all MenuElements should call this method with the event."}, {"method_name": "isComponentPartOfCurrentMenu", "method_sig": "public boolean isComponentPartOfCurrentMenu (Component c)", "description": "Return true if c is part of the currently used menu"}]}