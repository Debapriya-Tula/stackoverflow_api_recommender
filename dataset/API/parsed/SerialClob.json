{"name": "Class SerialClob", "module": "java.sql.rowset", "package": "javax.sql.rowset.serial", "text": "A serialized mapping in the Java programming language of an SQL\n CLOB value.\n \n The SerialClob class provides a constructor for creating\n an instance from a Clob object.  Note that the Clob\n object should have brought the SQL CLOB value's data over\n to the client before a SerialClob object\n is constructed from it.  The data of an SQL CLOB value can\n be materialized on the client as a stream of Unicode characters.\n \nSerialClob methods make it possible to get a substring\n from a SerialClob object or to locate the start of\n a pattern of characters.\n\n  Thread safety \n A SerialClob is not safe for use by multiple concurrent threads.  If a\n SerialClob is to be used by more than one thread then access to the SerialClob\n should be controlled by appropriate synchronization.", "codes": ["public class SerialClob\nextends Object\nimplements Clob, Serializable, Cloneable"], "fields": [], "methods": [{"method_name": "length", "method_sig": "public long length()\n            throws SerialException", "description": "Retrieves the number of characters in this SerialClob\n object's array of characters."}, {"method_name": "getCharacterStream", "method_sig": "public Reader getCharacterStream()\n                          throws SerialException", "description": "Returns this SerialClob object's data as a stream\n of Unicode characters. Unlike the related method, getAsciiStream,\n a stream is produced regardless of whether the SerialClob object\n was created with a Clob object or a char array."}, {"method_name": "getAsciiStream", "method_sig": "public InputStream getAsciiStream()\n                           throws SerialException,\n                                  SQLException", "description": "Retrieves the CLOB value designated by this SerialClob\n object as an ascii stream. This method forwards the getAsciiStream\n call to the underlying Clob object in the event that this\n SerialClob object is instantiated with a Clob\n object. If this SerialClob object is instantiated with\n a char array, a SerialException object is thrown."}, {"method_name": "getSubString", "method_sig": "public String getSubString (long pos,\n                           int length)\n                    throws SerialException", "description": "Returns a copy of the substring contained in this\n SerialClob object, starting at the given position\n and continuing for the specified number or characters."}, {"method_name": "position", "method_sig": "public long position (String searchStr,\n                     long start)\n              throws SerialException,\n                     SQLException", "description": "Returns the position in this SerialClob object\n where the given String object begins, starting\n the search at the specified position. This method returns\n -1 if the pattern is not found."}, {"method_name": "position", "method_sig": "public long position (Clob searchStr,\n                     long start)\n              throws SerialException,\n                     SQLException", "description": "Returns the position in this SerialClob object\n where the given Clob signature begins, starting\n the search at the specified position. This method returns\n -1 if the pattern is not found."}, {"method_name": "setString", "method_sig": "public int setString (long pos,\n                     String str)\n              throws SerialException", "description": "Writes the given Java String to the CLOB\n value that this SerialClob object represents, at the position\n pos."}, {"method_name": "setString", "method_sig": "public int setString (long pos,\n                     String str,\n                     int offset,\n                     int length)\n              throws SerialException", "description": "Writes len characters of str, starting\n at character offset, to the CLOB value\n that this Clob represents."}, {"method_name": "setAsciiStream", "method_sig": "public OutputStream setAsciiStream (long pos)\n                            throws SerialException,\n                                   SQLException", "description": "Retrieves a stream to be used to write Ascii characters to the\n CLOB value that this SerialClob object represents,\n starting at position pos. This method forwards the\n setAsciiStream() call to the underlying Clob object in\n the event that this SerialClob object is instantiated with a\n Clob object. If this SerialClob object is instantiated\n  with a char array, a SerialException object is thrown."}, {"method_name": "setCharacterStream", "method_sig": "public Writer setCharacterStream (long pos)\n                          throws SerialException,\n                                 SQLException", "description": "Retrieves a stream to be used to write a stream of Unicode characters\n to the CLOB value that this SerialClob object\n represents, at position pos. This method forwards the\n setCharacterStream() call to the underlying Clob\n object in the event that this SerialClob object is instantiated with a\n Clob object. If this SerialClob object is instantiated with\n a char array, a SerialException is thrown."}, {"method_name": "truncate", "method_sig": "public void truncate (long length)\n              throws SerialException", "description": "Truncates the CLOB value that this SerialClob\n object represents so that it has a length of len\n characters.\n \n Truncating a SerialClob object to length 0 has the effect of\n clearing its contents."}, {"method_name": "getCharacterStream", "method_sig": "public Reader getCharacterStream (long pos,\n                                 long length)\n                          throws SQLException", "description": "Returns a Reader object that contains a partial\n SerialClob value, starting\n with the character specified by pos, which is length characters in length."}, {"method_name": "free", "method_sig": "public void free()\n          throws SQLException", "description": "This method frees the SerialClob object and releases the\n resources that it holds.\n The object is invalid once the free method is called.\n \n If free is called multiple times, the subsequent\n calls to free are treated as a no-op.\n "}, {"method_name": "equals", "method_sig": "public boolean equals (Object obj)", "description": "Compares this SerialClob to the specified object.  The result is \n true if and only if the argument is not null and is a \n SerialClob object that represents the same sequence of characters as this\n object."}, {"method_name": "hashCode", "method_sig": "public int hashCode()", "description": "Returns a hash code for this SerialClob."}, {"method_name": "clone", "method_sig": "public Object clone()", "description": "Returns a clone of this SerialClob. The copy will contain a\n reference to a clone of the internal character array, not a reference\n to the original internal character array of this SerialClob object.\n The underlying Clob object will be set to null."}]}