{"name": "Interface Printable", "module": "java.desktop", "package": "java.awt.print", "text": "The Printable interface is implemented\n by the print methods of the current\n page painter, which is called by the printing\n system to render a page.  When building a\n Pageable, pairs of PageFormat\n instances and instances that implement\n this interface are used to describe each page. The\n instance implementing Printable is called to\n print the page's graphics.\n \n A Printable(..) may be set on a PrinterJob.\n When the client subsequently initiates printing by calling\n PrinterJob.print(..) control\n \n is handed to the printing system until all pages have been printed.\n It does this by calling Printable.print(..) until\n all pages in the document have been printed.\n In using the Printable interface the printing\n commits to image the contents of a page whenever\n requested by the printing system.\n \n The parameters to Printable.print(..) include a\n PageFormat which describes the printable area of\n the page, needed for calculating the contents that will fit the\n page, and the page index, which specifies the zero-based print\n stream index of the requested page.\n \n For correct printing behaviour, the following points should be\n observed:\n \n The printing system may request a page index more than once.\n On each occasion equal PageFormat parameters will be supplied.\n\n The printing system will call Printable.print(..)\n with page indexes which increase monotonically, although as noted above,\n the Printable should expect multiple calls for a page index\n and that page indexes may be skipped, when page ranges are specified\n by the client, or by a user through a print dialog.\n\n If multiple collated copies of a document are requested, and the\n printer cannot natively support this, then the document may be imaged\n multiple times. Printing will start each copy from the lowest print\n stream page index page.\n\n With the exception of re-imaging an entire document for multiple\n collated copies, the increasing page index order means that when\n page N is requested if a client needs to calculate page break position,\n it may safely discard any state related to pages < N, and make current\n that for page N. \"State\" usually is just the calculated position in the\n document that corresponds to the start of the page.\n\n When called by the printing system the Printable must\n inspect and honour the supplied PageFormat parameter as well as the\n page index.  The format of the page to be drawn is specified by the\n supplied PageFormat. The size, orientation and imageable area of the page\n is therefore already determined and rendering must be within this\n imageable area.\n This is key to correct printing behaviour, and it has the\n implication that the client has the responsibility of tracking\n what content belongs on the specified page.\n\n When the Printable is obtained from a client-supplied\n Pageable then the client may provide different PageFormats\n for each page index. Calculations of page breaks must account for this.\n ", "codes": ["public interface Printable"], "fields": [{"field_name": "PAGE_EXISTS", "field_sig": "static final\u00a0int PAGE_EXISTS", "description": "Returned from print(Graphics, PageFormat, int)\n to signify that the requested page was rendered."}, {"field_name": "NO_SUCH_PAGE", "field_sig": "static final\u00a0int NO_SUCH_PAGE", "description": "Returned from print to signify that the\n pageIndex is too large and that the requested page\n does not exist."}], "methods": [{"method_name": "print", "method_sig": "int print (Graphics graphics,\n          PageFormat pageFormat,\n          int pageIndex)\n   throws PrinterException", "description": "Prints the page at the specified index into the specified\n Graphics context in the specified\n format.  A PrinterJob calls the\n Printable interface to request that a page be\n rendered into the context specified by\n graphics.  The format of the page to be drawn is\n specified by pageFormat.  The zero based index\n of the requested page is specified by pageIndex.\n If the requested page does not exist then this method returns\n NO_SUCH_PAGE; otherwise PAGE_EXISTS is returned.\n The Graphics class or subclass implements the\n PrinterGraphics interface to provide additional\n information.  If the Printable object\n aborts the print job then it throws a PrinterException."}]}