{"name": "Class ModuleReference", "module": "java.base", "package": "java.lang.module", "text": "A reference to a module's content.\n\n  A module reference is a concrete implementation of this class that\n implements the abstract methods defined by this class. It contains the\n module's descriptor and its location, if known.  It also has the ability to\n create a ModuleReader in order to access the module's content, which\n may be inside the Java run-time system itself or in an artifact such as a\n modular JAR file.", "codes": ["public abstract class ModuleReference\nextends Object"], "fields": [], "methods": [{"method_name": "descriptor", "method_sig": "public final ModuleDescriptor descriptor()", "description": "Returns the module descriptor."}, {"method_name": "location", "method_sig": "public final Optional<URI> location()", "description": "Returns the location of this module's content, if known.\n\n  This URI, when present, can be used as the location value of a CodeSource so that a module's classes can be\n granted specific permissions when loaded by a SecureClassLoader."}, {"method_name": "open", "method_sig": "public abstract ModuleReader open()\n                           throws IOException", "description": "Opens the module content for reading."}]}