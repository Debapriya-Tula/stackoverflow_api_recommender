{"name": "Interface ActivationSystem", "module": "java.rmi", "package": "java.rmi.activation", "text": "The ActivationSystem provides a means for registering\n groups and \"activatable\" objects to be activated within those groups.\n The ActivationSystem works closely with the\n Activator, which activates objects registered via the\n ActivationSystem, and the ActivationMonitor,\n which obtains information about active and inactive objects,\n and inactive groups.", "codes": ["public interface ActivationSystem\nextends Remote"], "fields": [{"field_name": "SYSTEM_PORT", "field_sig": "static final\u00a0int SYSTEM_PORT", "description": "The port to lookup the activation system."}], "methods": [{"method_name": "registerObject", "method_sig": "ActivationID registerObject (ActivationDesc desc)\n                     throws ActivationException,\n                            UnknownGroupException,\n                            RemoteException", "description": "The registerObject method is used to register an\n activation descriptor, desc, and obtain an\n activation identifier for a activatable remote object. The\n ActivationSystem creates an\n ActivationID (a activation identifier) for the\n object specified by the descriptor, desc, and\n records, in stable storage, the activation descriptor and its\n associated identifier for later use. When the Activator\n receives an activate request for a specific identifier, it\n looks up the activation descriptor (registered previously) for\n the specified identifier and uses that information to activate\n the object."}, {"method_name": "unregisterObject", "method_sig": "void unregisterObject (ActivationID id)\n               throws ActivationException,\n                      UnknownObjectException,\n                      RemoteException", "description": "Remove the activation id and associated descriptor previously\n registered with the ActivationSystem; the object\n can no longer be activated via the object's activation id."}, {"method_name": "registerGroup", "method_sig": "ActivationGroupID registerGroup (ActivationGroupDesc desc)\n                         throws ActivationException,\n                                RemoteException", "description": "Register the activation group. An activation group must be\n registered with the ActivationSystem before objects\n can be registered within that group."}, {"method_name": "activeGroup", "method_sig": "ActivationMonitor activeGroup (ActivationGroupID id,\n                              ActivationInstantiator group,\n                              long incarnation)\n                       throws UnknownGroupException,\n                              ActivationException,\n                              RemoteException", "description": "Callback to inform activation system that group is now\n active. This call is made internally by the\n ActivationGroup.createGroup method to inform\n the ActivationSystem that the group is now\n active."}, {"method_name": "unregisterGroup", "method_sig": "void unregisterGroup (ActivationGroupID id)\n              throws ActivationException,\n                     UnknownGroupException,\n                     RemoteException", "description": "Remove the activation group. An activation group makes this call back\n to inform the activator that the group should be removed (destroyed).\n If this call completes successfully, objects can no longer be\n registered or activated within the group. All information of the\n group and its associated objects is removed from the system."}, {"method_name": "shutdown", "method_sig": "void shutdown()\n       throws RemoteException", "description": "Shutdown the activation system. Destroys all groups spawned by\n the activation daemon and exits the activation daemon."}, {"method_name": "setActivationDesc", "method_sig": "ActivationDesc setActivationDesc (ActivationID id,\n                                 ActivationDesc desc)\n                          throws ActivationException,\n                                 UnknownObjectException,\n                                 UnknownGroupException,\n                                 RemoteException", "description": "Set the activation descriptor, desc for the object with\n the activation identifier, id. The change will take\n effect upon subsequent activation of the object."}, {"method_name": "setActivationGroupDesc", "method_sig": "ActivationGroupDesc setActivationGroupDesc (ActivationGroupID id,\n                                           ActivationGroupDesc desc)\n                                    throws ActivationException,\n                                           UnknownGroupException,\n                                           RemoteException", "description": "Set the activation group descriptor, desc for the object\n with the activation group identifier, id. The change will\n take effect upon subsequent activation of the group."}, {"method_name": "getActivationDesc", "method_sig": "ActivationDesc getActivationDesc (ActivationID id)\n                          throws ActivationException,\n                                 UnknownObjectException,\n                                 RemoteException", "description": "Returns the activation descriptor, for the object with the activation\n identifier, id."}, {"method_name": "getActivationGroupDesc", "method_sig": "ActivationGroupDesc getActivationGroupDesc (ActivationGroupID id)\n                                    throws ActivationException,\n                                           UnknownGroupException,\n                                           RemoteException", "description": "Returns the activation group descriptor, for the group\n with the activation group identifier, id."}]}