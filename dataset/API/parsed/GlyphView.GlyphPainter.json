{"name": "Class GlyphView.GlyphPainter", "module": "java.desktop", "package": "javax.swing.text", "text": "A class to perform rendering of the glyphs.\n This can be implemented to be stateless, or\n to hold some information as a cache to\n facilitate faster rendering and model/view\n translation.  At a minimum, the GlyphPainter\n allows a View implementation to perform its\n duties independent of a particular version\n of JVM and selection of capabilities (i.e.\n shaping for i18n, etc).", "codes": ["public abstract static class GlyphView.GlyphPainter\nextends Object"], "fields": [], "methods": [{"method_name": "getSpan", "method_sig": "public abstract float getSpan (GlyphView v,\n                              int p0,\n                              int p1,\n                              TabExpander e,\n                              float x)", "description": "Determine the span the glyphs given a start location\n (for tab expansion)."}, {"method_name": "getHeight", "method_sig": "public abstract float getHeight (GlyphView v)", "description": "Returns of the height."}, {"method_name": "getAscent", "method_sig": "public abstract float getAscent (GlyphView v)", "description": "Returns of the ascent."}, {"method_name": "getDescent", "method_sig": "public abstract float getDescent (GlyphView v)", "description": "Returns of the descent."}, {"method_name": "paint", "method_sig": "public abstract void paint (GlyphView v,\n                           Graphics g,\n                           Shape a,\n                           int p0,\n                           int p1)", "description": "Paint the glyphs representing the given range."}, {"method_name": "modelToView", "method_sig": "public abstract Shape modelToView (GlyphView v,\n                                  int pos,\n                                  Position.Bias bias,\n                                  Shape a)\n                           throws BadLocationException", "description": "Provides a mapping from the document model coordinate space\n to the coordinate space of the view mapped to it.\n This is shared by the broken views."}, {"method_name": "viewToModel", "method_sig": "public abstract int viewToModel (GlyphView v,\n                                float x,\n                                float y,\n                                Shape a,\n                                Position.Bias[] biasReturn)", "description": "Provides a mapping from the view coordinate space to the logical\n coordinate space of the model."}, {"method_name": "getBoundedPosition", "method_sig": "public abstract int getBoundedPosition (GlyphView v,\n                                       int p0,\n                                       float x,\n                                       float len)", "description": "Determines the model location that represents the\n maximum advance that fits within the given span.\n This could be used to break the given view.  The result\n should be a location just shy of the given advance.  This\n differs from viewToModel which returns the closest\n position which might be proud of the maximum advance."}, {"method_name": "getPainter", "method_sig": "public GlyphView.GlyphPainter getPainter (GlyphView v,\n                                         int p0,\n                                         int p1)", "description": "Create a painter to use for the given GlyphView.  If\n the painter carries state it can create another painter\n to represent a new GlyphView that is being created.  If\n the painter doesn't hold any significant state, it can\n return itself.  The default behavior is to return itself."}, {"method_name": "getNextVisualPositionFrom", "method_sig": "public int getNextVisualPositionFrom (GlyphView v,\n                                     int pos,\n                                     Position.Bias b,\n                                     Shape a,\n                                     int direction,\n                                     Position.Bias[] biasRet)\n                              throws BadLocationException", "description": "Provides a way to determine the next visually represented model\n location that one might place a caret.  Some views may not be\n visible, they might not be in the same order found in the model, or\n they just might not allow access to some of the locations in the\n model."}]}