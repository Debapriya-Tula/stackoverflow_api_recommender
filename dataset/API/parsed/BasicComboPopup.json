{"name": "Class BasicComboPopup", "module": "java.desktop", "package": "javax.swing.plaf.basic", "text": "This is a basic implementation of the ComboPopup interface.\n\n This class represents the ui for the popup portion of the combo box.\n \n All event handling is handled by listener classes created with the\n createxxxListener() methods and internal classes.\n You can change the behavior of this class by overriding the\n createxxxListener() methods and supplying your own\n event listeners or subclassing from the ones supplied in this class.\n \nWarning:\n Serialized objects of this class will not be compatible with\n future Swing releases. The current serialization support is\n appropriate for short term storage or RMI between applications running\n the same version of Swing.  As of 1.4, support for long term storage\n of all JavaBeans\u2122\n has been added to the java.beans package.\n Please see XMLEncoder.", "codes": ["public class BasicComboPopup\nextends JPopupMenu\nimplements ComboPopup"], "fields": [{"field_name": "comboBox", "field_sig": "protected\u00a0JComboBox<Object> comboBox", "description": "The instance of JComboBox."}, {"field_name": "list", "field_sig": "protected\u00a0JList<Object> list", "description": "This protected field is implementation specific. Do not access directly\n or override. Use the accessor methods instead."}, {"field_name": "scroller", "field_sig": "protected\u00a0JScrollPane scroller", "description": "This protected field is implementation specific. Do not access directly\n or override. Use the create method instead"}, {"field_name": "valueIsAdjusting", "field_sig": "protected\u00a0boolean valueIsAdjusting", "description": "As of Java 2 platform v1.4 this previously undocumented field is no\n longer used."}, {"field_name": "mouseMotionListener", "field_sig": "protected\u00a0MouseMotionListener mouseMotionListener", "description": "This protected field is implementation specific. Do not access directly\n or override. Use the accessor or create methods instead."}, {"field_name": "mouseListener", "field_sig": "protected\u00a0MouseListener mouseListener", "description": "This protected field is implementation specific. Do not access directly\n or override. Use the accessor or create methods instead."}, {"field_name": "keyListener", "field_sig": "protected\u00a0KeyListener keyListener", "description": "This protected field is implementation specific. Do not access directly\n or override. Use the accessor or create methods instead."}, {"field_name": "listSelectionListener", "field_sig": "protected\u00a0ListSelectionListener listSelectionListener", "description": "This protected field is implementation specific. Do not access directly\n or override. Use the create method instead."}, {"field_name": "listMouseListener", "field_sig": "protected\u00a0MouseListener listMouseListener", "description": "This protected field is implementation specific. Do not access directly\n or override. Use the create method instead."}, {"field_name": "listMouseMotionListener", "field_sig": "protected\u00a0MouseMotionListener listMouseMotionListener", "description": "This protected field is implementation specific. Do not access directly\n or override. Use the create method instead"}, {"field_name": "propertyChangeListener", "field_sig": "protected\u00a0PropertyChangeListener propertyChangeListener", "description": "This protected field is implementation specific. Do not access directly\n or override. Use the create method instead"}, {"field_name": "listDataListener", "field_sig": "protected\u00a0ListDataListener listDataListener", "description": "This protected field is implementation specific. Do not access directly\n or override. Use the create method instead"}, {"field_name": "itemListener", "field_sig": "protected\u00a0ItemListener itemListener", "description": "This protected field is implementation specific. Do not access directly\n or override. Use the create method instead"}, {"field_name": "autoscrollTimer", "field_sig": "protected\u00a0Timer autoscrollTimer", "description": "This protected field is implementation specific. Do not access directly\n or override."}, {"field_name": "hasEntered", "field_sig": "protected\u00a0boolean hasEntered", "description": "true if the mouse cursor is in the popup."}, {"field_name": "isAutoScrolling", "field_sig": "protected\u00a0boolean isAutoScrolling", "description": "If true the auto-scrolling is enabled."}, {"field_name": "scrollDirection", "field_sig": "protected\u00a0int scrollDirection", "description": "The direction of scrolling."}, {"field_name": "SCROLL_UP", "field_sig": "protected static final\u00a0int SCROLL_UP", "description": "The direction of scrolling up."}, {"field_name": "SCROLL_DOWN", "field_sig": "protected static final\u00a0int SCROLL_DOWN", "description": "The direction of scrolling down."}], "methods": [{"method_name": "show", "method_sig": "public void show()", "description": "Implementation of ComboPopup.show()."}, {"method_name": "hide", "method_sig": "public void hide()", "description": "Implementation of ComboPopup.hide()."}, {"method_name": "getList", "method_sig": "public JList<Object> getList()", "description": "Implementation of ComboPopup.getList()."}, {"method_name": "getMouseListener", "method_sig": "public MouseListener getMouseListener()", "description": "Implementation of ComboPopup.getMouseListener()."}, {"method_name": "getMouseMotionListener", "method_sig": "public MouseMotionListener getMouseMotionListener()", "description": "Implementation of ComboPopup.getMouseMotionListener()."}, {"method_name": "getKeyListener", "method_sig": "public KeyListener getKeyListener()", "description": "Implementation of ComboPopup.getKeyListener()."}, {"method_name": "uninstallingUI", "method_sig": "public void uninstallingUI()", "description": "Called when the UI is uninstalling.  Since this popup isn't in the component\n tree, it won't get it's uninstallUI() called.  It removes the listeners that\n were added in addComboBoxListeners()."}, {"method_name": "uninstallComboBoxModelListeners", "method_sig": "protected void uninstallComboBoxModelListeners (ComboBoxModel<?> model)", "description": "Removes the listeners from the combo box model"}, {"method_name": "uninstallKeyboardActions", "method_sig": "protected void uninstallKeyboardActions()", "description": "Unregisters keyboard actions."}, {"method_name": "createMouseListener", "method_sig": "protected MouseListener createMouseListener()", "description": "Creates a listener\n that will watch for mouse-press and release events on the combo box.\n\n Warning:\n When overriding this method, make sure to maintain the existing\n behavior."}, {"method_name": "createMouseMotionListener", "method_sig": "protected MouseMotionListener createMouseMotionListener()", "description": "Creates the mouse motion listener which will be added to the combo\n box.\n\n Warning:\n When overriding this method, make sure to maintain the existing\n behavior."}, {"method_name": "createKeyListener", "method_sig": "protected KeyListener createKeyListener()", "description": "Creates the key listener that will be added to the combo box. If\n this method returns null then it will not be added to the combo box."}, {"method_name": "createListSelectionListener", "method_sig": "protected ListSelectionListener createListSelectionListener()", "description": "Creates a list selection listener that watches for selection changes in\n the popup's list.  If this method returns null then it will not\n be added to the popup list."}, {"method_name": "createListDataListener", "method_sig": "protected ListDataListener createListDataListener()", "description": "Creates a list data listener which will be added to the\n ComboBoxModel. If this method returns null then\n it will not be added to the combo box model."}, {"method_name": "createListMouseListener", "method_sig": "protected MouseListener createListMouseListener()", "description": "Creates a mouse listener that watches for mouse events in\n the popup's list. If this method returns null then it will\n not be added to the combo box."}, {"method_name": "createListMouseMotionListener", "method_sig": "protected MouseMotionListener createListMouseMotionListener()", "description": "Creates a mouse motion listener that watches for mouse motion\n events in the popup's list. If this method returns null then it will\n not be added to the combo box."}, {"method_name": "createPropertyChangeListener", "method_sig": "protected PropertyChangeListener createPropertyChangeListener()", "description": "Creates a PropertyChangeListener which will be added to\n the combo box. If this method returns null then it will not\n be added to the combo box."}, {"method_name": "createItemListener", "method_sig": "protected ItemListener createItemListener()", "description": "Creates an ItemListener which will be added to the\n combo box. If this method returns null then it will not\n be added to the combo box.\n \n Subclasses may override this method to return instances of their own\n ItemEvent handlers."}, {"method_name": "createList", "method_sig": "protected JList<Object> createList()", "description": "Creates the JList used in the popup to display\n the items in the combo box model. This method is called when the UI class\n is created."}, {"method_name": "configureList", "method_sig": "protected void configureList()", "description": "Configures the list which is used to hold the combo box items in the\n popup. This method is called when the UI class\n is created."}, {"method_name": "installListListeners", "method_sig": "protected void installListListeners()", "description": "Adds the listeners to the list control."}, {"method_name": "createScroller", "method_sig": "protected JScrollPane createScroller()", "description": "Creates the scroll pane which houses the scrollable list."}, {"method_name": "configureScroller", "method_sig": "protected void configureScroller()", "description": "Configures the scrollable portion which holds the list within\n the combo box popup. This method is called when the UI class\n is created."}, {"method_name": "configurePopup", "method_sig": "protected void configurePopup()", "description": "Configures the popup portion of the combo box. This method is called\n when the UI class is created."}, {"method_name": "installComboBoxListeners", "method_sig": "protected void installComboBoxListeners()", "description": "This method adds the necessary listeners to the JComboBox."}, {"method_name": "installComboBoxModelListeners", "method_sig": "protected void installComboBoxModelListeners (ComboBoxModel<?> model)", "description": "Installs the listeners on the combo box model. Any listeners installed\n on the combo box model should be removed in\n uninstallComboBoxModelListeners."}, {"method_name": "installKeyboardActions", "method_sig": "protected void installKeyboardActions()", "description": "Registers keyboard actions."}, {"method_name": "isFocusTraversable", "method_sig": "public boolean isFocusTraversable()", "description": "Overridden to unconditionally return false."}, {"method_name": "startAutoScrolling", "method_sig": "protected void startAutoScrolling (int direction)", "description": "This protected method is implementation specific and should be private.\n do not call or override."}, {"method_name": "stopAutoScrolling", "method_sig": "protected void stopAutoScrolling()", "description": "This protected method is implementation specific and should be private.\n do not call or override."}, {"method_name": "autoScrollUp", "method_sig": "protected void autoScrollUp()", "description": "This protected method is implementation specific and should be private.\n do not call or override."}, {"method_name": "autoScrollDown", "method_sig": "protected void autoScrollDown()", "description": "This protected method is implementation specific and should be private.\n do not call or override."}, {"method_name": "getAccessibleContext", "method_sig": "public AccessibleContext getAccessibleContext()", "description": "Gets the AccessibleContext associated with this BasicComboPopup.\n The AccessibleContext will have its parent set to the ComboBox."}, {"method_name": "delegateFocus", "method_sig": "protected void delegateFocus (MouseEvent e)", "description": "This is a utility method that helps event handlers figure out where to\n send the focus when the popup is brought up.  The standard implementation\n delegates the focus to the editor (if the combo box is editable) or to\n the JComboBox if it is not editable."}, {"method_name": "togglePopup", "method_sig": "protected void togglePopup()", "description": "Makes the popup visible if it is hidden and makes it hidden if it is\n visible."}, {"method_name": "convertMouseEvent", "method_sig": "protected MouseEvent convertMouseEvent (MouseEvent e)", "description": "Converts mouse event."}, {"method_name": "getPopupHeightForRowCount", "method_sig": "protected int getPopupHeightForRowCount (int maxRowCount)", "description": "Retrieves the height of the popup based on the current\n ListCellRenderer and the maximum row count."}, {"method_name": "computePopupBounds", "method_sig": "protected Rectangle computePopupBounds (int px,\n                                       int py,\n                                       int pw,\n                                       int ph)", "description": "Calculate the placement and size of the popup portion of the combo box based\n on the combo box location and the enclosing screen bounds. If\n no transformations are required, then the returned rectangle will\n have the same values as the parameters."}, {"method_name": "updateListBoxSelectionForEvent", "method_sig": "protected void updateListBoxSelectionForEvent (MouseEvent anEvent,\n                                              boolean shouldScroll)", "description": "A utility method used by the event listeners.  Given a mouse event, it changes\n the list selection to the list item below the mouse."}]}