{"name": "Interface BeanContextServices", "module": "java.desktop", "package": "java.beans.beancontext", "text": "\n The BeanContextServices interface provides a mechanism for a BeanContext\n to expose generic \"services\" to the BeanContextChild objects within.\n ", "codes": ["public interface BeanContextServices\nextends BeanContext, BeanContextServicesListener"], "fields": [], "methods": [{"method_name": "addService", "method_sig": "boolean addService (Class<?> serviceClass,\n                   BeanContextServiceProvider serviceProvider)", "description": "Adds a service to this BeanContext.\n BeanContextServiceProviders call this method\n to register a particular service with this context.\n If the service has not previously been added, the\n BeanContextServices associates\n the service with the BeanContextServiceProvider and\n fires a BeanContextServiceAvailableEvent to all\n currently registered BeanContextServicesListeners.\n The method then returns true, indicating that\n the addition of the service was successful.\n If the given service has already been added, this method\n simply returns false."}, {"method_name": "revokeService", "method_sig": "void revokeService (Class<?> serviceClass,\n                   BeanContextServiceProvider serviceProvider,\n                   boolean revokeCurrentServicesNow)", "description": "BeanContextServiceProviders wishing to remove\n a currently registered service from this context\n may do so via invocation of this method. Upon revocation of\n the service, the BeanContextServices fires a\n BeanContextServiceRevokedEvent to its\n list of currently registered\n BeanContextServiceRevokedListeners and\n BeanContextServicesListeners."}, {"method_name": "hasService", "method_sig": "boolean hasService (Class<?> serviceClass)", "description": "Reports whether or not a given service is\n currently available from this context."}, {"method_name": "getService", "method_sig": "Object getService (BeanContextChild child,\n                  Object requestor,\n                  Class<?> serviceClass,\n                  Object serviceSelector,\n                  BeanContextServiceRevokedListener bcsrl)\n           throws TooManyListenersException", "description": "A BeanContextChild, or any arbitrary object\n associated with a BeanContextChild, may obtain\n a reference to a currently registered service from its\n nesting BeanContextServices\n via invocation of this method. When invoked, this method\n gets the service by calling the getService() method on the\n underlying BeanContextServiceProvider."}, {"method_name": "releaseService", "method_sig": "void releaseService (BeanContextChild child,\n                    Object requestor,\n                    Object service)", "description": "Releases a BeanContextChild's\n (or any arbitrary object associated with a BeanContextChild)\n reference to the specified service by calling releaseService()\n on the underlying BeanContextServiceProvider."}, {"method_name": "getCurrentServiceClasses", "method_sig": "Iterator<?> getCurrentServiceClasses()", "description": "Gets the currently available services for this context."}, {"method_name": "getCurrentServiceSelectors", "method_sig": "Iterator<?> getCurrentServiceSelectors (Class<?> serviceClass)", "description": "Gets the list of service dependent service parameters\n (Service Selectors) for the specified service, by\n calling getCurrentServiceSelectors() on the\n underlying BeanContextServiceProvider."}, {"method_name": "addBeanContextServicesListener", "method_sig": "void addBeanContextServicesListener (BeanContextServicesListener bcsl)", "description": "Adds a BeanContextServicesListener to this BeanContext"}, {"method_name": "removeBeanContextServicesListener", "method_sig": "void removeBeanContextServicesListener (BeanContextServicesListener bcsl)", "description": "Removes a BeanContextServicesListener\n from this BeanContext"}]}