{"name": "Interface XECPrivateKey", "module": "java.base", "package": "java.security.interfaces", "text": "An interface for an elliptic curve private key as defined by RFC 7748.\n These keys are distinct from the keys represented by ECPrivateKey,\n and they are intended for use with algorithms based on RFC 7748 such as the\n XDH KeyAgreement algorithm.\n\n An XEC private key is an encoded scalar value as described in RFC 7748.\n The decoding procedure defined in this RFC includes an operation that forces\n certain bits of the key to either 1 or 0. This operation is known as\n \"pruning\" or \"clamping\" the private key. Arrays returned by this interface\n are unpruned, and implementations will need to prune the array before\n using it in any numerical operations.", "codes": ["public interface XECPrivateKey\nextends XECKey, PrivateKey"], "fields": [], "methods": [{"method_name": "getScalar", "method_sig": "Optional<byte[]> getScalar()", "description": "Get the scalar value encoded as an unpruned byte array. A new copy of\n the array is returned each time this method is called."}]}